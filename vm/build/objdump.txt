
./tests/vm/pt-grow-stack:     file format elf32-i386


Disassembly of section .note.gnu.build-id:

00000000 <.note.gnu.build-id>:
   0:	04 00                	add    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	14 00                	adc    $0x0,%al
   6:	00 00                	add    %al,(%eax)
   8:	03 00                	add    (%eax),%eax
   a:	00 00                	add    %al,(%eax)
   c:	47                   	inc    %edi
   d:	4e                   	dec    %esi
   e:	55                   	push   %ebp
   f:	00 26                	add    %ah,(%esi)
  11:	66 33 38             	xor    (%eax),%di
  14:	72 32                	jb     48 <__executable_start-0x804808c>
  16:	4b                   	dec    %ebx
  17:	7c 08                	jl     21 <__executable_start-0x80480b3>
  19:	89 c1                	mov    %eax,%ecx
  1b:	a3 3d b5 5b 06       	mov    %eax,0x65bb53d
  20:	5d                   	pop    %ebp
  21:	ed                   	in     (%dx),%eax
  22:	72 88                	jb     ffffffac <test_name+0xf7fb3044>

Disassembly of section .text:

080480d4 <test_main>:
#include "tests/lib.h"
#include "tests/main.h"

void
test_main (void)
{
 80480d4:	55                   	push   %ebp
 80480d5:	89 e5                	mov    %esp,%ebp
 80480d7:	81 ec 28 11 00 00    	sub    $0x1128,%esp
  char stack_obj[4096];
  struct arc4 arc4;

  arc4_init (&arc4, "foobar", 6);
 80480dd:	c7 44 24 08 06 00 00 	movl   $0x6,0x8(%esp)
 80480e4:	00 
 80480e5:	c7 44 24 04 f8 ae 04 	movl   $0x804aef8,0x4(%esp)
 80480ec:	08 
 80480ed:	8d 85 f6 ee ff ff    	lea    -0x110a(%ebp),%eax
 80480f3:	89 04 24             	mov    %eax,(%esp)
 80480f6:	e8 8e 00 00 00       	call   8048189 <arc4_init>
  memset (stack_obj, 0, sizeof stack_obj);
 80480fb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)
 8048102:	00 
 8048103:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804810a:	00 
 804810b:	8d 85 f8 ef ff ff    	lea    -0x1008(%ebp),%eax
 8048111:	89 04 24             	mov    %eax,(%esp)
 8048114:	e8 a3 21 00 00       	call   804a2bc <memset>
  arc4_crypt (&arc4, stack_obj, sizeof stack_obj);
 8048119:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)
 8048120:	00 
 8048121:	8d 85 f8 ef ff ff    	lea    -0x1008(%ebp),%eax
 8048127:	89 44 24 04          	mov    %eax,0x4(%esp)
 804812b:	8d 85 f6 ee ff ff    	lea    -0x110a(%ebp),%eax
 8048131:	89 04 24             	mov    %eax,(%esp)
 8048134:	e8 1d 01 00 00       	call   8048256 <arc4_crypt>
  msg ("cksum: %lu", cksum (stack_obj, sizeof stack_obj));
 8048139:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
 8048140:	00 
 8048141:	8d 85 f8 ef ff ff    	lea    -0x1008(%ebp),%eax
 8048147:	89 04 24             	mov    %eax,(%esp)
 804814a:	e8 c9 01 00 00       	call   8048318 <cksum>
 804814f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048153:	c7 04 24 ff ae 04 08 	movl   $0x804aeff,(%esp)
 804815a:	e8 1a 03 00 00       	call   8048479 <msg>
}
 804815f:	c9                   	leave  
 8048160:	c3                   	ret    
 8048161:	90                   	nop
 8048162:	90                   	nop
 8048163:	90                   	nop

08048164 <swap_byte>:
#include "tests/arc4.h"

/* Swap bytes. */
static inline void
swap_byte (uint8_t *a, uint8_t *b)
{
 8048164:	55                   	push   %ebp
 8048165:	89 e5                	mov    %esp,%ebp
 8048167:	83 ec 10             	sub    $0x10,%esp
  uint8_t t = *a;
 804816a:	8b 45 08             	mov    0x8(%ebp),%eax
 804816d:	0f b6 00             	movzbl (%eax),%eax
 8048170:	88 45 ff             	mov    %al,-0x1(%ebp)
  *a = *b;
 8048173:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048176:	0f b6 10             	movzbl (%eax),%edx
 8048179:	8b 45 08             	mov    0x8(%ebp),%eax
 804817c:	88 10                	mov    %dl,(%eax)
  *b = t;
 804817e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048181:	0f b6 55 ff          	movzbl -0x1(%ebp),%edx
 8048185:	88 10                	mov    %dl,(%eax)
}
 8048187:	c9                   	leave  
 8048188:	c3                   	ret    

08048189 <arc4_init>:

void
arc4_init (struct arc4 *arc4, const void *key_, size_t size)
{
 8048189:	55                   	push   %ebp
 804818a:	89 e5                	mov    %esp,%ebp
 804818c:	83 ec 28             	sub    $0x28,%esp
  const uint8_t *key = key_;
 804818f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048192:	89 45 ec             	mov    %eax,-0x14(%ebp)
  size_t key_idx;
  uint8_t *s;
  int i, j;

  s = arc4->s;
 8048195:	8b 45 08             	mov    0x8(%ebp),%eax
 8048198:	89 45 f4             	mov    %eax,-0xc(%ebp)
  arc4->i = arc4->j = 0;
 804819b:	8b 45 08             	mov    0x8(%ebp),%eax
 804819e:	c6 80 01 01 00 00 00 	movb   $0x0,0x101(%eax)
 80481a5:	8b 45 08             	mov    0x8(%ebp),%eax
 80481a8:	0f b6 90 01 01 00 00 	movzbl 0x101(%eax),%edx
 80481af:	8b 45 08             	mov    0x8(%ebp),%eax
 80481b2:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
  for (i = 0; i < 256; i++)
 80481b8:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80481bf:	eb 0f                	jmp    80481d0 <arc4_init+0x47>
    s[i] = i;
 80481c1:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80481c4:	03 45 f4             	add    -0xc(%ebp),%eax
 80481c7:	8b 55 f8             	mov    -0x8(%ebp),%edx
 80481ca:	88 10                	mov    %dl,(%eax)
  uint8_t *s;
  int i, j;

  s = arc4->s;
  arc4->i = arc4->j = 0;
  for (i = 0; i < 256; i++)
 80481cc:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 80481d0:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%ebp)
 80481d7:	7e e8                	jle    80481c1 <arc4_init+0x38>
    s[i] = i;
  for (key_idx = 0, i = j = 0; i < 256; i++)
 80481d9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80481e0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80481e7:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80481ea:	89 45 f8             	mov    %eax,-0x8(%ebp)
 80481ed:	eb 5c                	jmp    804824b <arc4_init+0xc2>
    {
      j = (j + s[i] + key[key_idx]) & 255;
 80481ef:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80481f2:	03 45 f4             	add    -0xc(%ebp),%eax
 80481f5:	0f b6 00             	movzbl (%eax),%eax
 80481f8:	0f b6 c0             	movzbl %al,%eax
 80481fb:	89 c2                	mov    %eax,%edx
 80481fd:	03 55 fc             	add    -0x4(%ebp),%edx
 8048200:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048203:	8b 4d ec             	mov    -0x14(%ebp),%ecx
 8048206:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 8048209:	0f b6 00             	movzbl (%eax),%eax
 804820c:	0f b6 c0             	movzbl %al,%eax
 804820f:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048212:	25 ff 00 00 00       	and    $0xff,%eax
 8048217:	89 45 fc             	mov    %eax,-0x4(%ebp)
      swap_byte (s + i, s + j);
 804821a:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804821d:	89 c2                	mov    %eax,%edx
 804821f:	03 55 f4             	add    -0xc(%ebp),%edx
 8048222:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048225:	03 45 f4             	add    -0xc(%ebp),%eax
 8048228:	89 54 24 04          	mov    %edx,0x4(%esp)
 804822c:	89 04 24             	mov    %eax,(%esp)
 804822f:	e8 30 ff ff ff       	call   8048164 <swap_byte>
      if (++key_idx >= size)
 8048234:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8048238:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804823b:	3b 45 10             	cmp    0x10(%ebp),%eax
 804823e:	72 07                	jb     8048247 <arc4_init+0xbe>
        key_idx = 0;
 8048240:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)

  s = arc4->s;
  arc4->i = arc4->j = 0;
  for (i = 0; i < 256; i++)
    s[i] = i;
  for (key_idx = 0, i = j = 0; i < 256; i++)
 8048247:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 804824b:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%ebp)
 8048252:	7e 9b                	jle    80481ef <arc4_init+0x66>
      j = (j + s[i] + key[key_idx]) & 255;
      swap_byte (s + i, s + j);
      if (++key_idx >= size)
        key_idx = 0;
    }
}
 8048254:	c9                   	leave  
 8048255:	c3                   	ret    

08048256 <arc4_crypt>:

void
arc4_crypt (struct arc4 *arc4, void *buf_, size_t size)
{
 8048256:	55                   	push   %ebp
 8048257:	89 e5                	mov    %esp,%ebp
 8048259:	53                   	push   %ebx
 804825a:	83 ec 18             	sub    $0x18,%esp
  uint8_t *buf = buf_;
 804825d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048260:	89 45 f0             	mov    %eax,-0x10(%ebp)
  uint8_t *s;
  uint8_t i, j;

  s = arc4->s;
 8048263:	8b 45 08             	mov    0x8(%ebp),%eax
 8048266:	89 45 f4             	mov    %eax,-0xc(%ebp)
  i = arc4->i;
 8048269:	8b 45 08             	mov    0x8(%ebp),%eax
 804826c:	0f b6 80 00 01 00 00 	movzbl 0x100(%eax),%eax
 8048273:	88 45 fa             	mov    %al,-0x6(%ebp)
  j = arc4->j;
 8048276:	8b 45 08             	mov    0x8(%ebp),%eax
 8048279:	0f b6 80 01 01 00 00 	movzbl 0x101(%eax),%eax
 8048280:	88 45 fb             	mov    %al,-0x5(%ebp)
  while (size-- > 0)
 8048283:	eb 64                	jmp    80482e9 <arc4_crypt+0x93>
    {
      i += 1;
 8048285:	80 45 fa 01          	addb   $0x1,-0x6(%ebp)
      j += s[i];
 8048289:	0f b6 45 fa          	movzbl -0x6(%ebp),%eax
 804828d:	03 45 f4             	add    -0xc(%ebp),%eax
 8048290:	0f b6 00             	movzbl (%eax),%eax
 8048293:	00 45 fb             	add    %al,-0x5(%ebp)
      swap_byte (s + i, s + j);
 8048296:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
 804829a:	89 c2                	mov    %eax,%edx
 804829c:	03 55 f4             	add    -0xc(%ebp),%edx
 804829f:	0f b6 45 fa          	movzbl -0x6(%ebp),%eax
 80482a3:	03 45 f4             	add    -0xc(%ebp),%eax
 80482a6:	89 54 24 04          	mov    %edx,0x4(%esp)
 80482aa:	89 04 24             	mov    %eax,(%esp)
 80482ad:	e8 b2 fe ff ff       	call   8048164 <swap_byte>
      *buf++ ^= s[(s[i] + s[j]) & 255];
 80482b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80482b5:	0f b6 08             	movzbl (%eax),%ecx
 80482b8:	0f b6 55 fa          	movzbl -0x6(%ebp),%edx
 80482bc:	03 55 f4             	add    -0xc(%ebp),%edx
 80482bf:	0f b6 12             	movzbl (%edx),%edx
 80482c2:	0f b6 da             	movzbl %dl,%ebx
 80482c5:	0f b6 55 fb          	movzbl -0x5(%ebp),%edx
 80482c9:	03 55 f4             	add    -0xc(%ebp),%edx
 80482cc:	0f b6 12             	movzbl (%edx),%edx
 80482cf:	0f b6 d2             	movzbl %dl,%edx
 80482d2:	8d 14 13             	lea    (%ebx,%edx,1),%edx
 80482d5:	81 e2 ff 00 00 00    	and    $0xff,%edx
 80482db:	03 55 f4             	add    -0xc(%ebp),%edx
 80482de:	0f b6 12             	movzbl (%edx),%edx
 80482e1:	31 ca                	xor    %ecx,%edx
 80482e3:	88 10                	mov    %dl,(%eax)
 80482e5:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  uint8_t i, j;

  s = arc4->s;
  i = arc4->i;
  j = arc4->j;
  while (size-- > 0)
 80482e9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 80482ed:	0f 95 c0             	setne  %al
 80482f0:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 80482f4:	84 c0                	test   %al,%al
 80482f6:	75 8d                	jne    8048285 <arc4_crypt+0x2f>
      i += 1;
      j += s[i];
      swap_byte (s + i, s + j);
      *buf++ ^= s[(s[i] + s[j]) & 255];
    }
  arc4->i = i;
 80482f8:	8b 45 08             	mov    0x8(%ebp),%eax
 80482fb:	0f b6 55 fa          	movzbl -0x6(%ebp),%edx
 80482ff:	88 90 00 01 00 00    	mov    %dl,0x100(%eax)
  arc4->j = j;
 8048305:	8b 45 08             	mov    0x8(%ebp),%eax
 8048308:	0f b6 55 fb          	movzbl -0x5(%ebp),%edx
 804830c:	88 90 01 01 00 00    	mov    %dl,0x101(%eax)
}
 8048312:	83 c4 18             	add    $0x18,%esp
 8048315:	5b                   	pop    %ebx
 8048316:	5d                   	pop    %ebp
 8048317:	c3                   	ret    

08048318 <cksum>:
};

/* This is the algorithm used by the Posix `cksum' utility. */
unsigned long
cksum (const void *b_, size_t n)
{
 8048318:	55                   	push   %ebp
 8048319:	89 e5                	mov    %esp,%ebp
 804831b:	83 ec 10             	sub    $0x10,%esp
  const unsigned char *b = b_;
 804831e:	8b 45 08             	mov    0x8(%ebp),%eax
 8048321:	89 45 f0             	mov    %eax,-0x10(%ebp)
  uint32_t s = 0;
 8048324:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  size_t i;
  for (i = n; i > 0; --i)
 804832b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804832e:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048331:	eb 33                	jmp    8048366 <cksum+0x4e>
    {
      unsigned char c = *b++;
 8048333:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048336:	0f b6 00             	movzbl (%eax),%eax
 8048339:	88 45 fe             	mov    %al,-0x2(%ebp)
 804833c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
      s = (s << 8) ^ crctab[(s >> 24) ^ c];
 8048340:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048343:	89 c2                	mov    %eax,%edx
 8048345:	c1 e2 08             	shl    $0x8,%edx
 8048348:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804834b:	89 c1                	mov    %eax,%ecx
 804834d:	c1 e9 18             	shr    $0x18,%ecx
 8048350:	0f b6 45 fe          	movzbl -0x2(%ebp),%eax
 8048354:	31 c8                	xor    %ecx,%eax
 8048356:	8b 04 85 40 c6 04 08 	mov    0x804c640(,%eax,4),%eax
 804835d:	31 d0                	xor    %edx,%eax
 804835f:	89 45 f4             	mov    %eax,-0xc(%ebp)
cksum (const void *b_, size_t n)
{
  const unsigned char *b = b_;
  uint32_t s = 0;
  size_t i;
  for (i = n; i > 0; --i)
 8048362:	83 6d f8 01          	subl   $0x1,-0x8(%ebp)
 8048366:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
 804836a:	75 c7                	jne    8048333 <cksum+0x1b>
    {
      unsigned char c = *b++;
      s = (s << 8) ^ crctab[(s >> 24) ^ c];
    }
  while (n != 0)
 804836c:	eb 2c                	jmp    804839a <cksum+0x82>
    {
      unsigned char c = n;
 804836e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048371:	88 45 ff             	mov    %al,-0x1(%ebp)
      n >>= 8;
 8048374:	c1 6d 0c 08          	shrl   $0x8,0xc(%ebp)
      s = (s << 8) ^ crctab[(s >> 24) ^ c];
 8048378:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804837b:	89 c2                	mov    %eax,%edx
 804837d:	c1 e2 08             	shl    $0x8,%edx
 8048380:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048383:	89 c1                	mov    %eax,%ecx
 8048385:	c1 e9 18             	shr    $0x18,%ecx
 8048388:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
 804838c:	31 c8                	xor    %ecx,%eax
 804838e:	8b 04 85 40 c6 04 08 	mov    0x804c640(,%eax,4),%eax
 8048395:	31 d0                	xor    %edx,%eax
 8048397:	89 45 f4             	mov    %eax,-0xc(%ebp)
  for (i = n; i > 0; --i)
    {
      unsigned char c = *b++;
      s = (s << 8) ^ crctab[(s >> 24) ^ c];
    }
  while (n != 0)
 804839a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804839e:	75 ce                	jne    804836e <cksum+0x56>
    {
      unsigned char c = n;
      n >>= 8;
      s = (s << 8) ^ crctab[(s >> 24) ^ c];
    }
  return ~s;
 80483a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80483a3:	f7 d0                	not    %eax
}
 80483a5:	c9                   	leave  
 80483a6:	c3                   	ret    
 80483a7:	90                   	nop

080483a8 <vmsg>:
const char *test_name;
bool quiet = false;

static void
vmsg (const char *format, va_list args, const char *suffix) 
{
 80483a8:	55                   	push   %ebp
 80483a9:	89 e5                	mov    %esp,%ebp
 80483ab:	53                   	push   %ebx
 80483ac:	83 ec 14             	sub    $0x14,%esp
     that'll (typically) ensure that it gets sent to the console
     atomically.  Otherwise kernel messages like "foo: exit(0)"
     can end up being interleaved if we're unlucky. */
  static char buf[1024];

  snprintf (buf, sizeof buf, "(%s) ", test_name);
 80483af:	a1 68 cf 04 08       	mov    0x804cf68,%eax
 80483b4:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80483b8:	c7 44 24 08 0c af 04 	movl   $0x804af0c,0x8(%esp)
 80483bf:	08 
 80483c0:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
 80483c7:	00 
 80483c8:	c7 04 24 60 ca 04 08 	movl   $0x804ca60,(%esp)
 80483cf:	e8 8e 09 00 00       	call   8048d62 <snprintf>
  vsnprintf (buf + strlen (buf), sizeof buf - strlen (buf), format, args);
 80483d4:	c7 04 24 60 ca 04 08 	movl   $0x804ca60,(%esp)
 80483db:	e8 48 1f 00 00       	call   804a328 <strlen>
 80483e0:	ba 00 04 00 00       	mov    $0x400,%edx
 80483e5:	89 d3                	mov    %edx,%ebx
 80483e7:	29 c3                	sub    %eax,%ebx
 80483e9:	c7 04 24 60 ca 04 08 	movl   $0x804ca60,(%esp)
 80483f0:	e8 33 1f 00 00       	call   804a328 <strlen>
 80483f5:	8d 90 60 ca 04 08    	lea    0x804ca60(%eax),%edx
 80483fb:	8b 45 0c             	mov    0xc(%ebp),%eax
 80483fe:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048402:	8b 45 08             	mov    0x8(%ebp),%eax
 8048405:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048409:	89 5c 24 04          	mov    %ebx,0x4(%esp)
 804840d:	89 14 24             	mov    %edx,(%esp)
 8048410:	e8 ad 08 00 00       	call   8048cc2 <vsnprintf>
  strlcpy (buf + strlen (buf), suffix, sizeof buf - strlen (buf));
 8048415:	c7 04 24 60 ca 04 08 	movl   $0x804ca60,(%esp)
 804841c:	e8 07 1f 00 00       	call   804a328 <strlen>
 8048421:	ba 00 04 00 00       	mov    $0x400,%edx
 8048426:	89 d3                	mov    %edx,%ebx
 8048428:	29 c3                	sub    %eax,%ebx
 804842a:	c7 04 24 60 ca 04 08 	movl   $0x804ca60,(%esp)
 8048431:	e8 f2 1e 00 00       	call   804a328 <strlen>
 8048436:	8d 90 60 ca 04 08    	lea    0x804ca60(%eax),%edx
 804843c:	89 5c 24 08          	mov    %ebx,0x8(%esp)
 8048440:	8b 45 10             	mov    0x10(%ebp),%eax
 8048443:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048447:	89 14 24             	mov    %edx,(%esp)
 804844a:	e8 65 1f 00 00       	call   804a3b4 <strlcpy>
  write (STDOUT_FILENO, buf, strlen (buf));
 804844f:	c7 04 24 60 ca 04 08 	movl   $0x804ca60,(%esp)
 8048456:	e8 cd 1e 00 00       	call   804a328 <strlen>
 804845b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804845f:	c7 44 24 04 60 ca 04 	movl   $0x804ca60,0x4(%esp)
 8048466:	08 
 8048467:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804846e:	e8 4b 27 00 00       	call   804abbe <write>
}
 8048473:	83 c4 14             	add    $0x14,%esp
 8048476:	5b                   	pop    %ebx
 8048477:	5d                   	pop    %ebp
 8048478:	c3                   	ret    

08048479 <msg>:

void
msg (const char *format, ...) 
{
 8048479:	55                   	push   %ebp
 804847a:	89 e5                	mov    %esp,%ebp
 804847c:	83 ec 28             	sub    $0x28,%esp
  va_list args;

  if (quiet)
 804847f:	0f b6 05 40 ca 04 08 	movzbl 0x804ca40,%eax
 8048486:	84 c0                	test   %al,%al
 8048488:	75 22                	jne    80484ac <msg+0x33>
    return;
  va_start (args, format);
 804848a:	8d 45 0c             	lea    0xc(%ebp),%eax
 804848d:	89 45 f4             	mov    %eax,-0xc(%ebp)
  vmsg (format, args, "\n");
 8048490:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048493:	c7 44 24 08 12 af 04 	movl   $0x804af12,0x8(%esp)
 804849a:	08 
 804849b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804849f:	8b 45 08             	mov    0x8(%ebp),%eax
 80484a2:	89 04 24             	mov    %eax,(%esp)
 80484a5:	e8 fe fe ff ff       	call   80483a8 <vmsg>
 80484aa:	eb 01                	jmp    80484ad <msg+0x34>
msg (const char *format, ...) 
{
  va_list args;

  if (quiet)
    return;
 80484ac:	90                   	nop
  va_start (args, format);
  vmsg (format, args, "\n");
  va_end (args);
}
 80484ad:	c9                   	leave  
 80484ae:	c3                   	ret    

080484af <fail>:

void
fail (const char *format, ...) 
{
 80484af:	55                   	push   %ebp
 80484b0:	89 e5                	mov    %esp,%ebp
 80484b2:	83 ec 28             	sub    $0x28,%esp
  va_list args;

  va_start (args, format);
 80484b5:	8d 45 0c             	lea    0xc(%ebp),%eax
 80484b8:	89 45 f4             	mov    %eax,-0xc(%ebp)
  vmsg (format, args, ": FAILED\n");
 80484bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80484be:	c7 44 24 08 14 af 04 	movl   $0x804af14,0x8(%esp)
 80484c5:	08 
 80484c6:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484ca:	8b 45 08             	mov    0x8(%ebp),%eax
 80484cd:	89 04 24             	mov    %eax,(%esp)
 80484d0:	e8 d3 fe ff ff       	call   80483a8 <vmsg>
  va_end (args);

  exit (1);
 80484d5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 80484dc:	e8 eb 25 00 00       	call   804aacc <exit>

080484e1 <swap>:
}

static void
swap (void *a_, void *b_, size_t size) 
{
 80484e1:	55                   	push   %ebp
 80484e2:	89 e5                	mov    %esp,%ebp
 80484e4:	83 ec 10             	sub    $0x10,%esp
  uint8_t *a = a_;
 80484e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80484ea:	89 45 f0             	mov    %eax,-0x10(%ebp)
  uint8_t *b = b_;
 80484ed:	8b 45 0c             	mov    0xc(%ebp),%eax
 80484f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
  size_t i;

  for (i = 0; i < size; i++) 
 80484f3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 80484fa:	eb 37                	jmp    8048533 <swap+0x52>
    {
      uint8_t t = a[i];
 80484fc:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80484ff:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048502:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048505:	0f b6 00             	movzbl (%eax),%eax
 8048508:	88 45 ff             	mov    %al,-0x1(%ebp)
      a[i] = b[i];
 804850b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804850e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048511:	01 c2                	add    %eax,%edx
 8048513:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048516:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8048519:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 804851c:	0f b6 00             	movzbl (%eax),%eax
 804851f:	88 02                	mov    %al,(%edx)
      b[i] = t;
 8048521:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048524:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8048527:	01 c2                	add    %eax,%edx
 8048529:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
 804852d:	88 02                	mov    %al,(%edx)
{
  uint8_t *a = a_;
  uint8_t *b = b_;
  size_t i;

  for (i = 0; i < size; i++) 
 804852f:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 8048533:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048536:	3b 45 10             	cmp    0x10(%ebp),%eax
 8048539:	72 c1                	jb     80484fc <swap+0x1b>
    {
      uint8_t t = a[i];
      a[i] = b[i];
      b[i] = t;
    }
}
 804853b:	c9                   	leave  
 804853c:	c3                   	ret    

0804853d <shuffle>:

void
shuffle (void *buf_, size_t cnt, size_t size) 
{
 804853d:	55                   	push   %ebp
 804853e:	89 e5                	mov    %esp,%ebp
 8048540:	83 ec 28             	sub    $0x28,%esp
  char *buf = buf_;
 8048543:	8b 45 08             	mov    0x8(%ebp),%eax
 8048546:	89 45 ec             	mov    %eax,-0x14(%ebp)
  size_t i;

  for (i = 0; i < cnt; i++)
 8048549:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 8048550:	eb 49                	jmp    804859b <shuffle+0x5e>
    {
      size_t j = i + random_ulong () % (cnt - i);
 8048552:	e8 12 07 00 00       	call   8048c69 <random_ulong>
 8048557:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804855a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 804855d:	29 d1                	sub    %edx,%ecx
 804855f:	ba 00 00 00 00       	mov    $0x0,%edx
 8048564:	f7 f1                	div    %ecx
 8048566:	89 d0                	mov    %edx,%eax
 8048568:	03 45 f0             	add    -0x10(%ebp),%eax
 804856b:	89 45 f4             	mov    %eax,-0xc(%ebp)
      swap (buf + i * size, buf + j * size, size);
 804856e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048571:	0f af 45 10          	imul   0x10(%ebp),%eax
 8048575:	89 c2                	mov    %eax,%edx
 8048577:	03 55 ec             	add    -0x14(%ebp),%edx
 804857a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804857d:	0f af 45 10          	imul   0x10(%ebp),%eax
 8048581:	03 45 ec             	add    -0x14(%ebp),%eax
 8048584:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8048587:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804858b:	89 54 24 04          	mov    %edx,0x4(%esp)
 804858f:	89 04 24             	mov    %eax,(%esp)
 8048592:	e8 4a ff ff ff       	call   80484e1 <swap>
shuffle (void *buf_, size_t cnt, size_t size) 
{
  char *buf = buf_;
  size_t i;

  for (i = 0; i < cnt; i++)
 8048597:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 804859b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804859e:	3b 45 0c             	cmp    0xc(%ebp),%eax
 80485a1:	72 af                	jb     8048552 <shuffle+0x15>
    {
      size_t j = i + random_ulong () % (cnt - i);
      swap (buf + i * size, buf + j * size, size);
    }
}
 80485a3:	c9                   	leave  
 80485a4:	c3                   	ret    

080485a5 <exec_children>:

void
exec_children (const char *child_name, pid_t pids[], size_t child_cnt) 
{
 80485a5:	55                   	push   %ebp
 80485a6:	89 e5                	mov    %esp,%ebp
 80485a8:	53                   	push   %ebx
 80485a9:	81 ec b4 00 00 00    	sub    $0xb4,%esp
  size_t i;

  for (i = 0; i < child_cnt; i++) 
 80485af:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80485b6:	e9 a0 00 00 00       	jmp    804865b <exec_children+0xb6>
    {
      char cmd_line[128];
      snprintf (cmd_line, sizeof cmd_line, "%s %zu", child_name, i);
 80485bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80485be:	89 44 24 10          	mov    %eax,0x10(%esp)
 80485c2:	8b 45 08             	mov    0x8(%ebp),%eax
 80485c5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80485c9:	c7 44 24 08 1e af 04 	movl   $0x804af1e,0x8(%esp)
 80485d0:	08 
 80485d1:	c7 44 24 04 80 00 00 	movl   $0x80,0x4(%esp)
 80485d8:	00 
 80485d9:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 80485df:	89 04 24             	mov    %eax,(%esp)
 80485e2:	e8 7b 07 00 00       	call   8048d62 <snprintf>
      CHECK ((pids[i] = exec (cmd_line)) != PID_ERROR,
 80485e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80485ea:	8d 50 01             	lea    0x1(%eax),%edx
 80485ed:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 80485f3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80485f7:	8b 45 10             	mov    0x10(%ebp),%eax
 80485fa:	89 44 24 08          	mov    %eax,0x8(%esp)
 80485fe:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048602:	c7 04 24 25 af 04 08 	movl   $0x804af25,(%esp)
 8048609:	e8 6b fe ff ff       	call   8048479 <msg>
 804860e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048611:	c1 e0 02             	shl    $0x2,%eax
 8048614:	89 c3                	mov    %eax,%ebx
 8048616:	03 5d 0c             	add    0xc(%ebp),%ebx
 8048619:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 804861f:	89 04 24             	mov    %eax,(%esp)
 8048622:	e8 dc 24 00 00       	call   804ab03 <exec>
 8048627:	89 03                	mov    %eax,(%ebx)
 8048629:	8b 03                	mov    (%ebx),%eax
 804862b:	83 f8 ff             	cmp    $0xffffffff,%eax
 804862e:	75 27                	jne    8048657 <exec_children+0xb2>
 8048630:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048633:	8d 50 01             	lea    0x1(%eax),%edx
 8048636:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 804863c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048640:	8b 45 10             	mov    0x10(%ebp),%eax
 8048643:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048647:	89 54 24 04          	mov    %edx,0x4(%esp)
 804864b:	c7 04 24 25 af 04 08 	movl   $0x804af25,(%esp)
 8048652:	e8 58 fe ff ff       	call   80484af <fail>
void
exec_children (const char *child_name, pid_t pids[], size_t child_cnt) 
{
  size_t i;

  for (i = 0; i < child_cnt; i++) 
 8048657:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804865b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804865e:	3b 45 10             	cmp    0x10(%ebp),%eax
 8048661:	0f 82 54 ff ff ff    	jb     80485bb <exec_children+0x16>
      char cmd_line[128];
      snprintf (cmd_line, sizeof cmd_line, "%s %zu", child_name, i);
      CHECK ((pids[i] = exec (cmd_line)) != PID_ERROR,
             "exec child %zu of %zu: \"%s\"", i + 1, child_cnt, cmd_line);
    }
}
 8048667:	81 c4 b4 00 00 00    	add    $0xb4,%esp
 804866d:	5b                   	pop    %ebx
 804866e:	5d                   	pop    %ebp
 804866f:	c3                   	ret    

08048670 <wait_children>:

void
wait_children (pid_t pids[], size_t child_cnt) 
{
 8048670:	55                   	push   %ebp
 8048671:	89 e5                	mov    %esp,%ebp
 8048673:	83 ec 38             	sub    $0x38,%esp
  size_t i;
  
  for (i = 0; i < child_cnt; i++) 
 8048676:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 804867d:	eb 78                	jmp    80486f7 <wait_children+0x87>
    {
      int status = wait (pids[i]);
 804867f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048682:	c1 e0 02             	shl    $0x2,%eax
 8048685:	03 45 08             	add    0x8(%ebp),%eax
 8048688:	8b 00                	mov    (%eax),%eax
 804868a:	89 04 24             	mov    %eax,(%esp)
 804868d:	e8 89 24 00 00       	call   804ab1b <wait>
 8048692:	89 45 f4             	mov    %eax,-0xc(%ebp)
      CHECK (status == (int) i,
 8048695:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048698:	8d 50 01             	lea    0x1(%eax),%edx
 804869b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804869e:	89 44 24 10          	mov    %eax,0x10(%esp)
 80486a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80486a5:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80486a9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80486ac:	89 44 24 08          	mov    %eax,0x8(%esp)
 80486b0:	89 54 24 04          	mov    %edx,0x4(%esp)
 80486b4:	c7 04 24 44 af 04 08 	movl   $0x804af44,(%esp)
 80486bb:	e8 b9 fd ff ff       	call   8048479 <msg>
 80486c0:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80486c3:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 80486c6:	74 2b                	je     80486f3 <wait_children+0x83>
 80486c8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80486cb:	8d 50 01             	lea    0x1(%eax),%edx
 80486ce:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80486d1:	89 44 24 10          	mov    %eax,0x10(%esp)
 80486d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80486d8:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80486dc:	8b 45 0c             	mov    0xc(%ebp),%eax
 80486df:	89 44 24 08          	mov    %eax,0x8(%esp)
 80486e3:	89 54 24 04          	mov    %edx,0x4(%esp)
 80486e7:	c7 04 24 44 af 04 08 	movl   $0x804af44,(%esp)
 80486ee:	e8 bc fd ff ff       	call   80484af <fail>
void
wait_children (pid_t pids[], size_t child_cnt) 
{
  size_t i;
  
  for (i = 0; i < child_cnt; i++) 
 80486f3:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 80486f7:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80486fa:	3b 45 0c             	cmp    0xc(%ebp),%eax
 80486fd:	72 80                	jb     804867f <wait_children+0xf>
      int status = wait (pids[i]);
      CHECK (status == (int) i,
             "wait for child %zu of %zu returned %d (expected %zu)",
             i + 1, child_cnt, status, i);
    }
}
 80486ff:	c9                   	leave  
 8048700:	c3                   	ret    

08048701 <check_file_handle>:

void
check_file_handle (int fd,
                   const char *file_name, const void *buf_, size_t size) 
{
 8048701:	55                   	push   %ebp
 8048702:	89 e5                	mov    %esp,%ebp
 8048704:	81 ec 48 02 00 00    	sub    $0x248,%esp
  const char *buf = buf_;
 804870a:	8b 45 10             	mov    0x10(%ebp),%eax
 804870d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  size_t ofs = 0;
 8048710:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
  size_t file_size;

  /* Warn about file of wrong size.  Don't fail yet because we
     may still be able to get more information by reading the
     file. */
  file_size = filesize (fd);
 8048717:	8b 45 08             	mov    0x8(%ebp),%eax
 804871a:	89 04 24             	mov    %eax,(%esp)
 804871d:	e8 66 24 00 00       	call   804ab88 <filesize>
 8048722:	89 45 ec             	mov    %eax,-0x14(%ebp)
  if (file_size != size)
 8048725:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048728:	3b 45 14             	cmp    0x14(%ebp),%eax
 804872b:	0f 84 c9 00 00 00    	je     80487fa <check_file_handle+0xf9>
    msg ("size of %s (%zu) differs from expected (%zu)",
 8048731:	8b 45 14             	mov    0x14(%ebp),%eax
 8048734:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048738:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804873b:	89 44 24 08          	mov    %eax,0x8(%esp)
 804873f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048742:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048746:	c7 04 24 7c af 04 08 	movl   $0x804af7c,(%esp)
 804874d:	e8 27 fd ff ff       	call   8048479 <msg>
          file_name, file_size, size);

  /* Read the file block-by-block, comparing data as we go. */
  while (ofs < size)
 8048752:	e9 a3 00 00 00       	jmp    80487fa <check_file_handle+0xf9>
    {
      char block[512];
      size_t block_size, ret_val;

      block_size = size - ofs;
 8048757:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804875a:	8b 55 14             	mov    0x14(%ebp),%edx
 804875d:	89 d1                	mov    %edx,%ecx
 804875f:	29 c1                	sub    %eax,%ecx
 8048761:	89 c8                	mov    %ecx,%eax
 8048763:	89 45 f0             	mov    %eax,-0x10(%ebp)
      if (block_size > sizeof block)
 8048766:	81 7d f0 00 02 00 00 	cmpl   $0x200,-0x10(%ebp)
 804876d:	76 07                	jbe    8048776 <check_file_handle+0x75>
        block_size = sizeof block;
 804876f:	c7 45 f0 00 02 00 00 	movl   $0x200,-0x10(%ebp)

      ret_val = read (fd, block, block_size);
 8048776:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048779:	89 44 24 08          	mov    %eax,0x8(%esp)
 804877d:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 8048783:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048787:	8b 45 08             	mov    0x8(%ebp),%eax
 804878a:	89 04 24             	mov    %eax,(%esp)
 804878d:	e8 0e 24 00 00       	call   804aba0 <read>
 8048792:	89 45 f4             	mov    %eax,-0xc(%ebp)
      if (ret_val != block_size)
 8048795:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048798:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804879b:	74 28                	je     80487c5 <check_file_handle+0xc4>
        fail ("read of %zu bytes at offset %zu in \"%s\" returned %zu",
 804879d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80487a0:	89 44 24 10          	mov    %eax,0x10(%esp)
 80487a4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80487a7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80487ab:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80487ae:	89 44 24 08          	mov    %eax,0x8(%esp)
 80487b2:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80487b5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487b9:	c7 04 24 ac af 04 08 	movl   $0x804afac,(%esp)
 80487c0:	e8 ea fc ff ff       	call   80484af <fail>
              block_size, ofs, file_name, ret_val);

      compare_bytes (block, buf + ofs, block_size, ofs, file_name);
 80487c5:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80487c8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80487cb:	01 c2                	add    %eax,%edx
 80487cd:	8b 45 0c             	mov    0xc(%ebp),%eax
 80487d0:	89 44 24 10          	mov    %eax,0x10(%esp)
 80487d4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80487d7:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80487db:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80487de:	89 44 24 08          	mov    %eax,0x8(%esp)
 80487e2:	89 54 24 04          	mov    %edx,0x4(%esp)
 80487e6:	8d 85 e4 fd ff ff    	lea    -0x21c(%ebp),%eax
 80487ec:	89 04 24             	mov    %eax,(%esp)
 80487ef:	e8 d0 00 00 00       	call   80488c4 <compare_bytes>
      ofs += block_size;
 80487f4:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80487f7:	01 45 e8             	add    %eax,-0x18(%ebp)
  if (file_size != size)
    msg ("size of %s (%zu) differs from expected (%zu)",
          file_name, file_size, size);

  /* Read the file block-by-block, comparing data as we go. */
  while (ofs < size)
 80487fa:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80487fd:	3b 45 14             	cmp    0x14(%ebp),%eax
 8048800:	0f 82 51 ff ff ff    	jb     8048757 <check_file_handle+0x56>
      compare_bytes (block, buf + ofs, block_size, ofs, file_name);
      ofs += block_size;
    }

  /* Now fail due to wrong file size. */
  if (file_size != size)
 8048806:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048809:	3b 45 14             	cmp    0x14(%ebp),%eax
 804880c:	74 21                	je     804882f <check_file_handle+0x12e>
    fail ("size of %s (%zu) differs from expected (%zu)",
 804880e:	8b 45 14             	mov    0x14(%ebp),%eax
 8048811:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048815:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048818:	89 44 24 08          	mov    %eax,0x8(%esp)
 804881c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804881f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048823:	c7 04 24 7c af 04 08 	movl   $0x804af7c,(%esp)
 804882a:	e8 80 fc ff ff       	call   80484af <fail>
          file_name, file_size, size);

  msg ("verified contents of \"%s\"", file_name);
 804882f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048832:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048836:	c7 04 24 e1 af 04 08 	movl   $0x804afe1,(%esp)
 804883d:	e8 37 fc ff ff       	call   8048479 <msg>
}
 8048842:	c9                   	leave  
 8048843:	c3                   	ret    

08048844 <check_file>:

void
check_file (const char *file_name, const void *buf, size_t size) 
{
 8048844:	55                   	push   %ebp
 8048845:	89 e5                	mov    %esp,%ebp
 8048847:	83 ec 28             	sub    $0x28,%esp
  int fd;

  CHECK ((fd = open (file_name)) > 1, "open \"%s\" for verification",
 804884a:	8b 45 08             	mov    0x8(%ebp),%eax
 804884d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048851:	c7 04 24 fb af 04 08 	movl   $0x804affb,(%esp)
 8048858:	e8 1c fc ff ff       	call   8048479 <msg>
 804885d:	8b 45 08             	mov    0x8(%ebp),%eax
 8048860:	89 04 24             	mov    %eax,(%esp)
 8048863:	e8 08 23 00 00       	call   804ab70 <open>
 8048868:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804886b:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
 804886f:	7f 13                	jg     8048884 <check_file+0x40>
 8048871:	8b 45 08             	mov    0x8(%ebp),%eax
 8048874:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048878:	c7 04 24 fb af 04 08 	movl   $0x804affb,(%esp)
 804887f:	e8 2b fc ff ff       	call   80484af <fail>
         file_name);
  check_file_handle (fd, file_name, buf, size);
 8048884:	8b 45 10             	mov    0x10(%ebp),%eax
 8048887:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804888b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804888e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048892:	8b 45 08             	mov    0x8(%ebp),%eax
 8048895:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048899:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804889c:	89 04 24             	mov    %eax,(%esp)
 804889f:	e8 5d fe ff ff       	call   8048701 <check_file_handle>
  msg ("close \"%s\"", file_name);
 80488a4:	8b 45 08             	mov    0x8(%ebp),%eax
 80488a7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80488ab:	c7 04 24 16 b0 04 08 	movl   $0x804b016,(%esp)
 80488b2:	e8 c2 fb ff ff       	call   8048479 <msg>
  close (fd);
 80488b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80488ba:	89 04 24             	mov    %eax,(%esp)
 80488bd:	e8 4a 23 00 00       	call   804ac0c <close>
}
 80488c2:	c9                   	leave  
 80488c3:	c3                   	ret    

080488c4 <compare_bytes>:

void
compare_bytes (const void *read_data_, const void *expected_data_, size_t size,
               size_t ofs, const char *file_name) 
{
 80488c4:	55                   	push   %ebp
 80488c5:	89 e5                	mov    %esp,%ebp
 80488c7:	83 ec 38             	sub    $0x38,%esp
  const uint8_t *read_data = read_data_;
 80488ca:	8b 45 08             	mov    0x8(%ebp),%eax
 80488cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  const uint8_t *expected_data = expected_data_;
 80488d0:	8b 45 0c             	mov    0xc(%ebp),%eax
 80488d3:	89 45 e8             	mov    %eax,-0x18(%ebp)
  size_t i, j;
  size_t show_cnt;

  if (!memcmp (read_data, expected_data, size))
 80488d6:	8b 45 10             	mov    0x10(%ebp),%eax
 80488d9:	89 44 24 08          	mov    %eax,0x8(%esp)
 80488dd:	8b 45 e8             	mov    -0x18(%ebp),%eax
 80488e0:	89 44 24 04          	mov    %eax,0x4(%esp)
 80488e4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80488e7:	89 04 24             	mov    %eax,(%esp)
 80488ea:	e8 85 14 00 00       	call   8049d74 <memcmp>
 80488ef:	85 c0                	test   %eax,%eax
 80488f1:	0f 84 73 01 00 00    	je     8048a6a <compare_bytes+0x1a6>
    return;
  
  for (i = 0; i < size; i++)
 80488f7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 80488fe:	eb 20                	jmp    8048920 <compare_bytes+0x5c>
    if (read_data[i] != expected_data[i])
 8048900:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048903:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 8048906:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048909:	0f b6 10             	movzbl (%eax),%edx
 804890c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804890f:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 8048912:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 8048915:	0f b6 00             	movzbl (%eax),%eax
 8048918:	38 c2                	cmp    %al,%dl
 804891a:	75 0e                	jne    804892a <compare_bytes+0x66>
  size_t show_cnt;

  if (!memcmp (read_data, expected_data, size))
    return;
  
  for (i = 0; i < size; i++)
 804891c:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 8048920:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048923:	3b 45 10             	cmp    0x10(%ebp),%eax
 8048926:	72 d8                	jb     8048900 <compare_bytes+0x3c>
 8048928:	eb 01                	jmp    804892b <compare_bytes+0x67>
    if (read_data[i] != expected_data[i])
      break;
 804892a:	90                   	nop
  for (j = i + 1; j < size; j++)
 804892b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804892e:	83 c0 01             	add    $0x1,%eax
 8048931:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8048934:	eb 20                	jmp    8048956 <compare_bytes+0x92>
    if (read_data[j] == expected_data[j])
 8048936:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048939:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 804893c:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804893f:	0f b6 10             	movzbl (%eax),%edx
 8048942:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048945:	8b 4d e8             	mov    -0x18(%ebp),%ecx
 8048948:	8d 04 01             	lea    (%ecx,%eax,1),%eax
 804894b:	0f b6 00             	movzbl (%eax),%eax
 804894e:	38 c2                	cmp    %al,%dl
 8048950:	74 0e                	je     8048960 <compare_bytes+0x9c>
    return;
  
  for (i = 0; i < size; i++)
    if (read_data[i] != expected_data[i])
      break;
  for (j = i + 1; j < size; j++)
 8048952:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8048956:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048959:	3b 45 10             	cmp    0x10(%ebp),%eax
 804895c:	72 d8                	jb     8048936 <compare_bytes+0x72>
 804895e:	eb 01                	jmp    8048961 <compare_bytes+0x9d>
    if (read_data[j] == expected_data[j])
      break;
 8048960:	90                   	nop

  quiet = false;
 8048961:	c6 05 40 ca 04 08 00 	movb   $0x0,0x804ca40
  msg ("%zu bytes read starting at offset %zu in \"%s\" differ "
 8048968:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804896b:	8b 55 14             	mov    0x14(%ebp),%edx
 804896e:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048971:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048974:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048977:	29 c2                	sub    %eax,%edx
 8048979:	8b 45 18             	mov    0x18(%ebp),%eax
 804897c:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048980:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8048984:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048988:	c7 04 24 24 b0 04 08 	movl   $0x804b024,(%esp)
 804898f:	e8 e5 fa ff ff       	call   8048479 <msg>
       "from expected.", j - i, ofs + i, file_name);
  show_cnt = j - i;
 8048994:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048997:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804899a:	89 d1                	mov    %edx,%ecx
 804899c:	29 c1                	sub    %eax,%ecx
 804899e:	89 c8                	mov    %ecx,%eax
 80489a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
  if (j - i > 64) 
 80489a3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80489a6:	8b 55 f0             	mov    -0x10(%ebp),%edx
 80489a9:	89 d1                	mov    %edx,%ecx
 80489ab:	29 c1                	sub    %eax,%ecx
 80489ad:	89 c8                	mov    %ecx,%eax
 80489af:	83 f8 40             	cmp    $0x40,%eax
 80489b2:	76 1a                	jbe    80489ce <compare_bytes+0x10a>
    {
      show_cnt = 64;
 80489b4:	c7 45 f4 40 00 00 00 	movl   $0x40,-0xc(%ebp)
      msg ("Showing first differing %zu bytes.", show_cnt);
 80489bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80489be:	89 44 24 04          	mov    %eax,0x4(%esp)
 80489c2:	c7 04 24 68 b0 04 08 	movl   $0x804b068,(%esp)
 80489c9:	e8 ab fa ff ff       	call   8048479 <msg>
    }
  msg ("Data actually read:");
 80489ce:	c7 04 24 8b b0 04 08 	movl   $0x804b08b,(%esp)
 80489d5:	e8 9f fa ff ff       	call   8048479 <msg>
  hex_dump (ofs + i, read_data + i, show_cnt, true);
 80489da:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80489dd:	8b 55 e4             	mov    -0x1c(%ebp),%edx
 80489e0:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 80489e3:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80489e6:	8b 55 14             	mov    0x14(%ebp),%edx
 80489e9:	01 c2                	add    %eax,%edx
 80489eb:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 80489f2:	00 
 80489f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80489f6:	89 44 24 08          	mov    %eax,0x8(%esp)
 80489fa:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 80489fe:	89 14 24             	mov    %edx,(%esp)
 8048a01:	e8 e7 0f 00 00       	call   80499ed <hex_dump>
  msg ("Expected data:");
 8048a06:	c7 04 24 9f b0 04 08 	movl   $0x804b09f,(%esp)
 8048a0d:	e8 67 fa ff ff       	call   8048479 <msg>
  hex_dump (ofs + i, expected_data + i, show_cnt, true);
 8048a12:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048a15:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8048a18:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048a1b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048a1e:	8b 55 14             	mov    0x14(%ebp),%edx
 8048a21:	01 c2                	add    %eax,%edx
 8048a23:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
 8048a2a:	00 
 8048a2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048a2e:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048a32:	89 4c 24 04          	mov    %ecx,0x4(%esp)
 8048a36:	89 14 24             	mov    %edx,(%esp)
 8048a39:	e8 af 0f 00 00       	call   80499ed <hex_dump>
  fail ("%zu bytes read starting at offset %zu in \"%s\" differ "
 8048a3e:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048a41:	8b 55 14             	mov    0x14(%ebp),%edx
 8048a44:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 8048a47:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048a4a:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048a4d:	29 c2                	sub    %eax,%edx
 8048a4f:	8b 45 18             	mov    0x18(%ebp),%eax
 8048a52:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048a56:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 8048a5a:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048a5e:	c7 04 24 b0 b0 04 08 	movl   $0x804b0b0,(%esp)
 8048a65:	e8 45 fa ff ff       	call   80484af <fail>
        "from expected", j - i, ofs + i, file_name);
}
 8048a6a:	c9                   	leave  
 8048a6b:	c3                   	ret    

08048a6c <main>:
#include "tests/main.h"

/* tests/main.c */
int
main (int argc UNUSED, char *argv[]) 
{
 8048a6c:	55                   	push   %ebp
 8048a6d:	89 e5                	mov    %esp,%ebp
 8048a6f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048a72:	83 ec 10             	sub    $0x10,%esp
  test_name = argv[0];
 8048a75:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048a78:	8b 00                	mov    (%eax),%eax
 8048a7a:	a3 68 cf 04 08       	mov    %eax,0x804cf68

  msg ("begin");
 8048a7f:	c7 04 24 f3 b0 04 08 	movl   $0x804b0f3,(%esp)
 8048a86:	e8 ee f9 ff ff       	call   8048479 <msg>
  random_init (0);
 8048a8b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048a92:	e8 5e 00 00 00       	call   8048af5 <random_init>
  test_main ();
 8048a97:	e8 38 f6 ff ff       	call   80480d4 <test_main>
  msg ("end");
 8048a9c:	c7 04 24 f9 b0 04 08 	movl   $0x804b0f9,(%esp)
 8048aa3:	e8 d1 f9 ff ff       	call   8048479 <msg>
  return 0;
 8048aa8:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8048aad:	c9                   	leave  
 8048aae:	c3                   	ret    
 8048aaf:	90                   	nop

08048ab0 <_start>:
int main (int, char *[]);
void _start (int argc, char *argv[]);

void
_start (int argc, char *argv[]) 
{
 8048ab0:	55                   	push   %ebp
 8048ab1:	89 e5                	mov    %esp,%ebp
 8048ab3:	83 ec 18             	sub    $0x18,%esp
  exit (main (argc, argv));
 8048ab6:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ab9:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048abd:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ac0:	89 04 24             	mov    %eax,(%esp)
 8048ac3:	e8 a4 ff ff ff       	call   8048a6c <main>
 8048ac8:	89 04 24             	mov    %eax,(%esp)
 8048acb:	e8 fc 1f 00 00       	call   804aacc <exit>

08048ad0 <swap_byte>:
static bool inited;     

/* Swaps the bytes pointed to by A and B. */
static inline void
swap_byte (uint8_t *a, uint8_t *b) 
{
 8048ad0:	55                   	push   %ebp
 8048ad1:	89 e5                	mov    %esp,%ebp
 8048ad3:	83 ec 10             	sub    $0x10,%esp
  uint8_t t = *a;
 8048ad6:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ad9:	0f b6 00             	movzbl (%eax),%eax
 8048adc:	88 45 ff             	mov    %al,-0x1(%ebp)
  *a = *b;
 8048adf:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ae2:	0f b6 10             	movzbl (%eax),%edx
 8048ae5:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ae8:	88 10                	mov    %dl,(%eax)
  *b = t;
 8048aea:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048aed:	0f b6 55 ff          	movzbl -0x1(%ebp),%edx
 8048af1:	88 10                	mov    %dl,(%eax)
}
 8048af3:	c9                   	leave  
 8048af4:	c3                   	ret    

08048af5 <random_init>:

/* Initializes or reinitializes the PRNG with the given SEED. */
void
random_init (unsigned seed)
{
 8048af5:	55                   	push   %ebp
 8048af6:	89 e5                	mov    %esp,%ebp
 8048af8:	83 ec 18             	sub    $0x18,%esp
  uint8_t *seedp = (uint8_t *) &seed;
 8048afb:	8d 45 08             	lea    0x8(%ebp),%eax
 8048afe:	89 45 f4             	mov    %eax,-0xc(%ebp)
  int i;
  uint8_t j;

  for (i = 0; i < 256; i++) 
 8048b01:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8048b08:	eb 10                	jmp    8048b1a <random_init+0x25>
    s[i] = i;
 8048b0a:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048b0d:	8b 55 f8             	mov    -0x8(%ebp),%edx
 8048b10:	88 90 60 ce 04 08    	mov    %dl,0x804ce60(%eax)
{
  uint8_t *seedp = (uint8_t *) &seed;
  int i;
  uint8_t j;

  for (i = 0; i < 256; i++) 
 8048b16:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 8048b1a:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%ebp)
 8048b21:	7e e7                	jle    8048b0a <random_init+0x15>
    s[i] = i;
  for (i = j = 0; i < 256; i++) 
 8048b23:	c6 45 ff 00          	movb   $0x0,-0x1(%ebp)
 8048b27:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
 8048b2e:	eb 3e                	jmp    8048b6e <random_init+0x79>
    {
      j += s[i] + seedp[i % sizeof seed];
 8048b30:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048b33:	0f b6 90 60 ce 04 08 	movzbl 0x804ce60(%eax),%edx
 8048b3a:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048b3d:	83 e0 03             	and    $0x3,%eax
 8048b40:	03 45 f4             	add    -0xc(%ebp),%eax
 8048b43:	0f b6 00             	movzbl (%eax),%eax
 8048b46:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048b49:	00 45 ff             	add    %al,-0x1(%ebp)
      swap_byte (s + i, s + j);
 8048b4c:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
 8048b50:	8d 90 60 ce 04 08    	lea    0x804ce60(%eax),%edx
 8048b56:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048b59:	05 60 ce 04 08       	add    $0x804ce60,%eax
 8048b5e:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048b62:	89 04 24             	mov    %eax,(%esp)
 8048b65:	e8 66 ff ff ff       	call   8048ad0 <swap_byte>
  int i;
  uint8_t j;

  for (i = 0; i < 256; i++) 
    s[i] = i;
  for (i = j = 0; i < 256; i++) 
 8048b6a:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 8048b6e:	81 7d f8 ff 00 00 00 	cmpl   $0xff,-0x8(%ebp)
 8048b75:	7e b9                	jle    8048b30 <random_init+0x3b>
    {
      j += s[i] + seedp[i % sizeof seed];
      swap_byte (s + i, s + j);
    }

  s_i = s_j = 0;
 8048b77:	c6 05 61 cf 04 08 00 	movb   $0x0,0x804cf61
 8048b7e:	0f b6 05 61 cf 04 08 	movzbl 0x804cf61,%eax
 8048b85:	a2 60 cf 04 08       	mov    %al,0x804cf60
  inited = true;
 8048b8a:	c6 05 62 cf 04 08 01 	movb   $0x1,0x804cf62
}
 8048b91:	c9                   	leave  
 8048b92:	c3                   	ret    

08048b93 <random_bytes>:

/* Writes SIZE random bytes into BUF. */
void
random_bytes (void *buf_, size_t size) 
{
 8048b93:	55                   	push   %ebp
 8048b94:	89 e5                	mov    %esp,%ebp
 8048b96:	83 ec 18             	sub    $0x18,%esp
  uint8_t *buf;

  if (!inited)
 8048b99:	0f b6 05 62 cf 04 08 	movzbl 0x804cf62,%eax
 8048ba0:	83 f0 01             	xor    $0x1,%eax
 8048ba3:	84 c0                	test   %al,%al
 8048ba5:	74 0c                	je     8048bb3 <random_bytes+0x20>
    random_init (0);
 8048ba7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048bae:	e8 42 ff ff ff       	call   8048af5 <random_init>

  for (buf = buf_; size-- > 0; buf++)
 8048bb3:	8b 45 08             	mov    0x8(%ebp),%eax
 8048bb6:	89 45 f8             	mov    %eax,-0x8(%ebp)
 8048bb9:	e9 96 00 00 00       	jmp    8048c54 <random_bytes+0xc1>
    {
      uint8_t s_k;
      
      s_i++;
 8048bbe:	0f b6 05 60 cf 04 08 	movzbl 0x804cf60,%eax
 8048bc5:	83 c0 01             	add    $0x1,%eax
 8048bc8:	a2 60 cf 04 08       	mov    %al,0x804cf60
      s_j += s[s_i];
 8048bcd:	0f b6 05 60 cf 04 08 	movzbl 0x804cf60,%eax
 8048bd4:	0f b6 c0             	movzbl %al,%eax
 8048bd7:	0f b6 90 60 ce 04 08 	movzbl 0x804ce60(%eax),%edx
 8048bde:	0f b6 05 61 cf 04 08 	movzbl 0x804cf61,%eax
 8048be5:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048be8:	a2 61 cf 04 08       	mov    %al,0x804cf61
      swap_byte (s + s_i, s + s_j);
 8048bed:	0f b6 05 61 cf 04 08 	movzbl 0x804cf61,%eax
 8048bf4:	0f b6 c0             	movzbl %al,%eax
 8048bf7:	8d 90 60 ce 04 08    	lea    0x804ce60(%eax),%edx
 8048bfd:	0f b6 05 60 cf 04 08 	movzbl 0x804cf60,%eax
 8048c04:	0f b6 c0             	movzbl %al,%eax
 8048c07:	05 60 ce 04 08       	add    $0x804ce60,%eax
 8048c0c:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048c10:	89 04 24             	mov    %eax,(%esp)
 8048c13:	e8 b8 fe ff ff       	call   8048ad0 <swap_byte>

      s_k = s[s_i] + s[s_j];
 8048c18:	0f b6 05 60 cf 04 08 	movzbl 0x804cf60,%eax
 8048c1f:	0f b6 c0             	movzbl %al,%eax
 8048c22:	0f b6 90 60 ce 04 08 	movzbl 0x804ce60(%eax),%edx
 8048c29:	0f b6 05 61 cf 04 08 	movzbl 0x804cf61,%eax
 8048c30:	0f b6 c0             	movzbl %al,%eax
 8048c33:	0f b6 80 60 ce 04 08 	movzbl 0x804ce60(%eax),%eax
 8048c3a:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8048c3d:	88 45 ff             	mov    %al,-0x1(%ebp)
      *buf = s[s_k];
 8048c40:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
 8048c44:	0f b6 90 60 ce 04 08 	movzbl 0x804ce60(%eax),%edx
 8048c4b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 8048c4e:	88 10                	mov    %dl,(%eax)
  uint8_t *buf;

  if (!inited)
    random_init (0);

  for (buf = buf_; size-- > 0; buf++)
 8048c50:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 8048c54:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8048c58:	0f 95 c0             	setne  %al
 8048c5b:	83 6d 0c 01          	subl   $0x1,0xc(%ebp)
 8048c5f:	84 c0                	test   %al,%al
 8048c61:	0f 85 57 ff ff ff    	jne    8048bbe <random_bytes+0x2b>
      swap_byte (s + s_i, s + s_j);

      s_k = s[s_i] + s[s_j];
      *buf = s[s_k];
    }
}
 8048c67:	c9                   	leave  
 8048c68:	c3                   	ret    

08048c69 <random_ulong>:
/* Returns a pseudo-random unsigned long.
   Use random_ulong() % n to obtain a random number in the range
   0...n (exclusive). */
unsigned long
random_ulong (void) 
{
 8048c69:	55                   	push   %ebp
 8048c6a:	89 e5                	mov    %esp,%ebp
 8048c6c:	83 ec 18             	sub    $0x18,%esp
  unsigned long ul;
  random_bytes (&ul, sizeof ul);
 8048c6f:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 8048c76:	00 
 8048c77:	8d 45 fc             	lea    -0x4(%ebp),%eax
 8048c7a:	89 04 24             	mov    %eax,(%esp)
 8048c7d:	e8 11 ff ff ff       	call   8048b93 <random_bytes>
  return ul;
 8048c82:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 8048c85:	c9                   	leave  
 8048c86:	c3                   	ret    
 8048c87:	90                   	nop

08048c88 <isdigit>:
#define __LIB_CTYPE_H

static inline int islower (int c) { return c >= 'a' && c <= 'z'; }
static inline int isupper (int c) { return c >= 'A' && c <= 'Z'; }
static inline int isalpha (int c) { return islower (c) || isupper (c); }
static inline int isdigit (int c) { return c >= '0' && c <= '9'; }
 8048c88:	55                   	push   %ebp
 8048c89:	89 e5                	mov    %esp,%ebp
 8048c8b:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)
 8048c8f:	7e 0d                	jle    8048c9e <isdigit+0x16>
 8048c91:	83 7d 08 39          	cmpl   $0x39,0x8(%ebp)
 8048c95:	7f 07                	jg     8048c9e <isdigit+0x16>
 8048c97:	b8 01 00 00 00       	mov    $0x1,%eax
 8048c9c:	eb 05                	jmp    8048ca3 <isdigit+0x1b>
 8048c9e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ca3:	5d                   	pop    %ebp
 8048ca4:	c3                   	ret    

08048ca5 <isprint>:
  return (c == ' ' || c == '\f' || c == '\n'
          || c == '\r' || c == '\t' || c == '\v');
}
static inline int isblank (int c) { return c == ' ' || c == '\t'; }
static inline int isgraph (int c) { return c > 32 && c < 127; }
static inline int isprint (int c) { return c >= 32 && c < 127; }
 8048ca5:	55                   	push   %ebp
 8048ca6:	89 e5                	mov    %esp,%ebp
 8048ca8:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)
 8048cac:	7e 0d                	jle    8048cbb <isprint+0x16>
 8048cae:	83 7d 08 7e          	cmpl   $0x7e,0x8(%ebp)
 8048cb2:	7f 07                	jg     8048cbb <isprint+0x16>
 8048cb4:	b8 01 00 00 00       	mov    $0x1,%eax
 8048cb9:	eb 05                	jmp    8048cc0 <isprint+0x1b>
 8048cbb:	b8 00 00 00 00       	mov    $0x0,%eax
 8048cc0:	5d                   	pop    %ebp
 8048cc1:	c3                   	ret    

08048cc2 <vsnprintf>:
int
vsnprintf (char *buffer, size_t buf_size, const char *format, va_list args) 
{
  /* Set up aux data for vsnprintf_helper(). */
  struct vsnprintf_aux aux;
  aux.p = buffer;
 8048cc2:	55                   	push   %ebp
 8048cc3:	89 e5                	mov    %esp,%ebp
 8048cc5:	83 ec 28             	sub    $0x28,%esp
 8048cc8:	8b 45 08             	mov    0x8(%ebp),%eax
 8048ccb:	89 45 ec             	mov    %eax,-0x14(%ebp)
  aux.length = 0;
 8048cce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  aux.max_length = buf_size > 0 ? buf_size - 1 : 0;
 8048cd5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8048cd9:	74 08                	je     8048ce3 <vsnprintf+0x21>
 8048cdb:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048cde:	83 e8 01             	sub    $0x1,%eax
 8048ce1:	eb 05                	jmp    8048ce8 <vsnprintf+0x26>
 8048ce3:	b8 00 00 00 00       	mov    $0x0,%eax
 8048ce8:	89 45 f4             	mov    %eax,-0xc(%ebp)

  /* Do most of the work. */
  __vprintf (format, args, vsnprintf_helper, &aux);
 8048ceb:	8d 45 ec             	lea    -0x14(%ebp),%eax
 8048cee:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048cf2:	c7 44 24 08 1d 8d 04 	movl   $0x8048d1d,0x8(%esp)
 8048cf9:	08 
 8048cfa:	8b 45 14             	mov    0x14(%ebp),%eax
 8048cfd:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d01:	8b 45 10             	mov    0x10(%ebp),%eax
 8048d04:	89 04 24             	mov    %eax,(%esp)
 8048d07:	e8 b0 00 00 00       	call   8048dbc <__vprintf>

  /* Add null terminator. */
  if (buf_size > 0)
 8048d0c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 8048d10:	74 06                	je     8048d18 <vsnprintf+0x56>
    *aux.p = '\0';
 8048d12:	8b 45 ec             	mov    -0x14(%ebp),%eax
 8048d15:	c6 00 00             	movb   $0x0,(%eax)

  return aux.length;
 8048d18:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
 8048d1b:	c9                   	leave  
 8048d1c:	c3                   	ret    

08048d1d <vsnprintf_helper>:

/* Helper function for vsnprintf(). */
static void
vsnprintf_helper (char ch, void *aux_)
{
 8048d1d:	55                   	push   %ebp
 8048d1e:	89 e5                	mov    %esp,%ebp
 8048d20:	83 ec 14             	sub    $0x14,%esp
 8048d23:	8b 45 08             	mov    0x8(%ebp),%eax
 8048d26:	88 45 ec             	mov    %al,-0x14(%ebp)
  struct vsnprintf_aux *aux = aux_;
 8048d29:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048d2c:	89 45 fc             	mov    %eax,-0x4(%ebp)

  if (aux->length++ < aux->max_length)
 8048d2f:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048d32:	8b 40 04             	mov    0x4(%eax),%eax
 8048d35:	8b 55 fc             	mov    -0x4(%ebp),%edx
 8048d38:	8b 52 08             	mov    0x8(%edx),%edx
 8048d3b:	39 d0                	cmp    %edx,%eax
 8048d3d:	0f 9c c2             	setl   %dl
 8048d40:	8d 48 01             	lea    0x1(%eax),%ecx
 8048d43:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048d46:	89 48 04             	mov    %ecx,0x4(%eax)
 8048d49:	84 d2                	test   %dl,%dl
 8048d4b:	74 13                	je     8048d60 <vsnprintf_helper+0x43>
    *aux->p++ = ch;
 8048d4d:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048d50:	8b 00                	mov    (%eax),%eax
 8048d52:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
 8048d56:	88 10                	mov    %dl,(%eax)
 8048d58:	8d 50 01             	lea    0x1(%eax),%edx
 8048d5b:	8b 45 fc             	mov    -0x4(%ebp),%eax
 8048d5e:	89 10                	mov    %edx,(%eax)
}
 8048d60:	c9                   	leave  
 8048d61:	c3                   	ret    

08048d62 <snprintf>:
snprintf (char *buffer, size_t buf_size, const char *format, ...) 
{
  va_list args;
  int retval;

  va_start (args, format);
 8048d62:	55                   	push   %ebp
 8048d63:	89 e5                	mov    %esp,%ebp
 8048d65:	83 ec 28             	sub    $0x28,%esp
 8048d68:	8d 45 14             	lea    0x14(%ebp),%eax
 8048d6b:	89 45 f0             	mov    %eax,-0x10(%ebp)
  retval = vsnprintf (buffer, buf_size, format, args);
 8048d6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048d71:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8048d75:	8b 45 10             	mov    0x10(%ebp),%eax
 8048d78:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048d7c:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048d7f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048d83:	8b 45 08             	mov    0x8(%ebp),%eax
 8048d86:	89 04 24             	mov    %eax,(%esp)
 8048d89:	e8 34 ff ff ff       	call   8048cc2 <vsnprintf>
 8048d8e:	89 45 f4             	mov    %eax,-0xc(%ebp)
  va_end (args);

  return retval;
 8048d91:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
 8048d94:	c9                   	leave  
 8048d95:	c3                   	ret    

08048d96 <printf>:
printf (const char *format, ...) 
{
  va_list args;
  int retval;

  va_start (args, format);
 8048d96:	55                   	push   %ebp
 8048d97:	89 e5                	mov    %esp,%ebp
 8048d99:	83 ec 28             	sub    $0x28,%esp
 8048d9c:	8d 45 0c             	lea    0xc(%ebp),%eax
 8048d9f:	89 45 f0             	mov    %eax,-0x10(%ebp)
  retval = vprintf (format, args);
 8048da2:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048da5:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048da9:	8b 45 08             	mov    0x8(%ebp),%eax
 8048dac:	89 04 24             	mov    %eax,(%esp)
 8048daf:	e8 2c 1f 00 00       	call   804ace0 <vprintf>
 8048db4:	89 45 f4             	mov    %eax,-0xc(%ebp)
  va_end (args);

  return retval;
 8048db7:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
 8048dba:	c9                   	leave  
 8048dbb:	c3                   	ret    

08048dbc <__vprintf>:
                           void (*output) (char, void *), void *aux);

void
__vprintf (const char *format, va_list args,
           void (*output) (char, void *), void *aux)
{
 8048dbc:	55                   	push   %ebp
 8048dbd:	89 e5                	mov    %esp,%ebp
 8048dbf:	57                   	push   %edi
 8048dc0:	56                   	push   %esi
 8048dc1:	53                   	push   %ebx
 8048dc2:	83 ec 6c             	sub    $0x6c,%esp
  for (; *format != '\0'; format++)
 8048dc5:	e9 0e 05 00 00       	jmp    80492d8 <__vprintf+0x51c>
    {
      struct printf_conversion c;

      /* Literally copy non-conversions to output. */
      if (*format != '%') 
 8048dca:	8b 45 08             	mov    0x8(%ebp),%eax
 8048dcd:	0f b6 00             	movzbl (%eax),%eax
 8048dd0:	3c 25                	cmp    $0x25,%al
 8048dd2:	74 1d                	je     8048df1 <__vprintf+0x35>
        {
          output (*format, aux);
 8048dd4:	8b 45 08             	mov    0x8(%ebp),%eax
 8048dd7:	0f b6 00             	movzbl (%eax),%eax
 8048dda:	0f be c0             	movsbl %al,%eax
 8048ddd:	8b 55 14             	mov    0x14(%ebp),%edx
 8048de0:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048de4:	89 04 24             	mov    %eax,(%esp)
 8048de7:	8b 45 10             	mov    0x10(%ebp),%eax
 8048dea:	ff d0                	call   *%eax
          continue;
 8048dec:	e9 e3 04 00 00       	jmp    80492d4 <__vprintf+0x518>
        }
      format++;
 8048df1:	83 45 08 01          	addl   $0x1,0x8(%ebp)

      /* %% => %. */
      if (*format == '%') 
 8048df5:	8b 45 08             	mov    0x8(%ebp),%eax
 8048df8:	0f b6 00             	movzbl (%eax),%eax
 8048dfb:	3c 25                	cmp    $0x25,%al
 8048dfd:	75 18                	jne    8048e17 <__vprintf+0x5b>
        {
          output ('%', aux);
 8048dff:	8b 45 14             	mov    0x14(%ebp),%eax
 8048e02:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048e06:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)
 8048e0d:	8b 45 10             	mov    0x10(%ebp),%eax
 8048e10:	ff d0                	call   *%eax
          continue;
 8048e12:	e9 bd 04 00 00       	jmp    80492d4 <__vprintf+0x518>
        }

      /* Parse conversion specifiers. */
      format = parse_conversion (format, &c, &args);
 8048e17:	8d 45 0c             	lea    0xc(%ebp),%eax
 8048e1a:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048e1e:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8048e21:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048e25:	8b 45 08             	mov    0x8(%ebp),%eax
 8048e28:	89 04 24             	mov    %eax,(%esp)
 8048e2b:	e8 be 04 00 00       	call   80492ee <parse_conversion>
 8048e30:	89 45 08             	mov    %eax,0x8(%ebp)

      /* Do conversion. */
      switch (*format) 
 8048e33:	8b 45 08             	mov    0x8(%ebp),%eax
 8048e36:	0f b6 00             	movzbl (%eax),%eax
 8048e39:	0f be c0             	movsbl %al,%eax
 8048e3c:	83 e8 45             	sub    $0x45,%eax
 8048e3f:	83 f8 33             	cmp    $0x33,%eax
 8048e42:	0f 87 65 04 00 00    	ja     80492ad <__vprintf+0x4f1>
 8048e48:	8b 04 85 e8 b1 04 08 	mov    0x804b1e8(,%eax,4),%eax
 8048e4f:	ff e0                	jmp    *%eax
        case 'i': 
          {
            /* Signed integer conversions. */
            intmax_t value;
            
            switch (c.type) 
 8048e51:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8048e54:	83 f8 08             	cmp    $0x8,%eax
 8048e57:	0f 87 f5 00 00 00    	ja     8048f52 <__vprintf+0x196>
 8048e5d:	8b 04 85 b8 b2 04 08 	mov    0x804b2b8(,%eax,4),%eax
 8048e64:	ff e0                	jmp    *%eax
              {
              case CHAR: 
                value = (signed char) va_arg (args, int);
 8048e66:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048e69:	8d 50 04             	lea    0x4(%eax),%edx
 8048e6c:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048e6f:	8b 00                	mov    (%eax),%eax
 8048e71:	0f be c0             	movsbl %al,%eax
 8048e74:	89 c2                	mov    %eax,%edx
 8048e76:	c1 fa 1f             	sar    $0x1f,%edx
 8048e79:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048e7c:	89 55 cc             	mov    %edx,-0x34(%ebp)
                break;
 8048e7f:	e9 f6 00 00 00       	jmp    8048f7a <__vprintf+0x1be>
              case SHORT:
                value = (short) va_arg (args, int);
 8048e84:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048e87:	8d 50 04             	lea    0x4(%eax),%edx
 8048e8a:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048e8d:	8b 00                	mov    (%eax),%eax
 8048e8f:	98                   	cwtl   
 8048e90:	89 c2                	mov    %eax,%edx
 8048e92:	c1 fa 1f             	sar    $0x1f,%edx
 8048e95:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048e98:	89 55 cc             	mov    %edx,-0x34(%ebp)
                break;
 8048e9b:	e9 da 00 00 00       	jmp    8048f7a <__vprintf+0x1be>
              case INT:
                value = va_arg (args, int);
 8048ea0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ea3:	8d 50 04             	lea    0x4(%eax),%edx
 8048ea6:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048ea9:	8b 00                	mov    (%eax),%eax
 8048eab:	89 c2                	mov    %eax,%edx
 8048ead:	c1 fa 1f             	sar    $0x1f,%edx
 8048eb0:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048eb3:	89 55 cc             	mov    %edx,-0x34(%ebp)
                break;
 8048eb6:	e9 bf 00 00 00       	jmp    8048f7a <__vprintf+0x1be>
              case INTMAX:
                value = va_arg (args, intmax_t);
 8048ebb:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ebe:	8d 50 08             	lea    0x8(%eax),%edx
 8048ec1:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048ec4:	8b 50 04             	mov    0x4(%eax),%edx
 8048ec7:	8b 00                	mov    (%eax),%eax
 8048ec9:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048ecc:	89 55 cc             	mov    %edx,-0x34(%ebp)
                break;
 8048ecf:	e9 a6 00 00 00       	jmp    8048f7a <__vprintf+0x1be>
              case LONG:
                value = va_arg (args, long);
 8048ed4:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ed7:	8d 50 04             	lea    0x4(%eax),%edx
 8048eda:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048edd:	8b 00                	mov    (%eax),%eax
 8048edf:	89 c2                	mov    %eax,%edx
 8048ee1:	c1 fa 1f             	sar    $0x1f,%edx
 8048ee4:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048ee7:	89 55 cc             	mov    %edx,-0x34(%ebp)
                break;
 8048eea:	e9 8b 00 00 00       	jmp    8048f7a <__vprintf+0x1be>
              case LONGLONG:
                value = va_arg (args, long long);
 8048eef:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ef2:	8d 50 08             	lea    0x8(%eax),%edx
 8048ef5:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048ef8:	8b 50 04             	mov    0x4(%eax),%edx
 8048efb:	8b 00                	mov    (%eax),%eax
 8048efd:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048f00:	89 55 cc             	mov    %edx,-0x34(%ebp)
                break;
 8048f03:	eb 75                	jmp    8048f7a <__vprintf+0x1be>
              case PTRDIFFT:
                value = va_arg (args, ptrdiff_t);
 8048f05:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048f08:	8d 50 04             	lea    0x4(%eax),%edx
 8048f0b:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048f0e:	8b 00                	mov    (%eax),%eax
 8048f10:	89 c2                	mov    %eax,%edx
 8048f12:	c1 fa 1f             	sar    $0x1f,%edx
 8048f15:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048f18:	89 55 cc             	mov    %edx,-0x34(%ebp)
                break;
 8048f1b:	eb 5d                	jmp    8048f7a <__vprintf+0x1be>
              case SIZET:
                value = va_arg (args, size_t);
 8048f1d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048f20:	8d 50 04             	lea    0x4(%eax),%edx
 8048f23:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048f26:	8b 00                	mov    (%eax),%eax
 8048f28:	ba 00 00 00 00       	mov    $0x0,%edx
 8048f2d:	89 45 c8             	mov    %eax,-0x38(%ebp)
 8048f30:	89 55 cc             	mov    %edx,-0x34(%ebp)
                if (value > SIZE_MAX / 2)
 8048f33:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
 8048f37:	78 3d                	js     8048f76 <__vprintf+0x1ba>
 8048f39:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
 8048f3d:	7f 09                	jg     8048f48 <__vprintf+0x18c>
 8048f3f:	81 7d c8 ff ff ff 7f 	cmpl   $0x7fffffff,-0x38(%ebp)
 8048f46:	76 31                	jbe    8048f79 <__vprintf+0x1bd>
                  value = value - SIZE_MAX - 1;
 8048f48:	83 45 c8 00          	addl   $0x0,-0x38(%ebp)
 8048f4c:	83 55 cc ff          	adcl   $0xffffffff,-0x34(%ebp)
                break;
 8048f50:	eb 28                	jmp    8048f7a <__vprintf+0x1be>
              default:
                NOT_REACHED ();
 8048f52:	c7 44 24 0c 80 b1 04 	movl   $0x804b180,0xc(%esp)
 8048f59:	08 
 8048f5a:	c7 44 24 08 a5 b3 04 	movl   $0x804b3a5,0x8(%esp)
 8048f61:	08 
 8048f62:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)
 8048f69:	00 
 8048f6a:	c7 04 24 a2 b1 04 08 	movl   $0x804b1a2,(%esp)
 8048f71:	e8 c6 1a 00 00       	call   804aa3c <debug_panic>
                break;
              case SIZET:
                value = va_arg (args, size_t);
                if (value > SIZE_MAX / 2)
                  value = value - SIZE_MAX - 1;
                break;
 8048f76:	90                   	nop
 8048f77:	eb 01                	jmp    8048f7a <__vprintf+0x1be>
 8048f79:	90                   	nop
              default:
                NOT_REACHED ();
              }

            format_integer (value < 0 ? -value : value,
 8048f7a:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8048f7d:	89 c7                	mov    %eax,%edi
 8048f7f:	c1 ef 1f             	shr    $0x1f,%edi
 8048f82:	8b 45 c8             	mov    -0x38(%ebp),%eax
 8048f85:	8b 55 cc             	mov    -0x34(%ebp),%edx
 8048f88:	89 d2                	mov    %edx,%edx
 8048f8a:	c1 fa 1f             	sar    $0x1f,%edx
 8048f8d:	89 d0                	mov    %edx,%eax
 8048f8f:	89 c3                	mov    %eax,%ebx
 8048f91:	33 5d c8             	xor    -0x38(%ebp),%ebx
 8048f94:	89 d6                	mov    %edx,%esi
 8048f96:	33 75 cc             	xor    -0x34(%ebp),%esi
 8048f99:	29 c3                	sub    %eax,%ebx
 8048f9b:	19 d6                	sbb    %edx,%esi
 8048f9d:	89 d8                	mov    %ebx,%eax
 8048f9f:	89 f2                	mov    %esi,%edx
 8048fa1:	8b 4d 14             	mov    0x14(%ebp),%ecx
 8048fa4:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 8048fa8:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8048fab:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 8048faf:	8d 4d b8             	lea    -0x48(%ebp),%ecx
 8048fb2:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 8048fb6:	c7 44 24 10 0c b1 04 	movl   $0x804b10c,0x10(%esp)
 8048fbd:	08 
 8048fbe:	89 7c 24 0c          	mov    %edi,0xc(%esp)
 8048fc2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 8048fc9:	00 
 8048fca:	89 04 24             	mov    %eax,(%esp)
 8048fcd:	89 54 24 04          	mov    %edx,0x4(%esp)
 8048fd1:	e8 e1 05 00 00       	call   80495b7 <format_integer>
                            true, value < 0, &base_d, &c, output, aux);
          }
          break;
 8048fd6:	e9 f9 02 00 00       	jmp    80492d4 <__vprintf+0x518>
          {
            /* Unsigned integer conversions. */
            uintmax_t value;
            const struct integer_base *b;

            switch (c.type) 
 8048fdb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 8048fde:	83 f8 08             	cmp    $0x8,%eax
 8048fe1:	0f 87 df 00 00 00    	ja     80490c6 <__vprintf+0x30a>
 8048fe7:	8b 04 85 dc b2 04 08 	mov    0x804b2dc(,%eax,4),%eax
 8048fee:	ff e0                	jmp    *%eax
              {
              case CHAR: 
                value = (unsigned char) va_arg (args, unsigned);
 8048ff0:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048ff3:	8d 50 04             	lea    0x4(%eax),%edx
 8048ff6:	89 55 0c             	mov    %edx,0xc(%ebp)
 8048ff9:	8b 00                	mov    (%eax),%eax
 8048ffb:	0f b6 c0             	movzbl %al,%eax
 8048ffe:	ba 00 00 00 00       	mov    $0x0,%edx
 8049003:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049006:	89 55 d4             	mov    %edx,-0x2c(%ebp)
                break;
 8049009:	e9 dc 00 00 00       	jmp    80490ea <__vprintf+0x32e>
              case SHORT:
                value = (unsigned short) va_arg (args, unsigned);
 804900e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049011:	8d 50 04             	lea    0x4(%eax),%edx
 8049014:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049017:	8b 00                	mov    (%eax),%eax
 8049019:	0f b7 c0             	movzwl %ax,%eax
 804901c:	ba 00 00 00 00       	mov    $0x0,%edx
 8049021:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049024:	89 55 d4             	mov    %edx,-0x2c(%ebp)
                break;
 8049027:	e9 be 00 00 00       	jmp    80490ea <__vprintf+0x32e>
              case INT:
                value = va_arg (args, unsigned);
 804902c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804902f:	8d 50 04             	lea    0x4(%eax),%edx
 8049032:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049035:	8b 00                	mov    (%eax),%eax
 8049037:	ba 00 00 00 00       	mov    $0x0,%edx
 804903c:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804903f:	89 55 d4             	mov    %edx,-0x2c(%ebp)
                break;
 8049042:	e9 a3 00 00 00       	jmp    80490ea <__vprintf+0x32e>
              case INTMAX:
                value = va_arg (args, uintmax_t);
 8049047:	8b 45 0c             	mov    0xc(%ebp),%eax
 804904a:	8d 50 08             	lea    0x8(%eax),%edx
 804904d:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049050:	8b 50 04             	mov    0x4(%eax),%edx
 8049053:	8b 00                	mov    (%eax),%eax
 8049055:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049058:	89 55 d4             	mov    %edx,-0x2c(%ebp)
                break;
 804905b:	e9 8a 00 00 00       	jmp    80490ea <__vprintf+0x32e>
              case LONG:
                value = va_arg (args, unsigned long);
 8049060:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049063:	8d 50 04             	lea    0x4(%eax),%edx
 8049066:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049069:	8b 00                	mov    (%eax),%eax
 804906b:	ba 00 00 00 00       	mov    $0x0,%edx
 8049070:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049073:	89 55 d4             	mov    %edx,-0x2c(%ebp)
                break;
 8049076:	eb 72                	jmp    80490ea <__vprintf+0x32e>
              case LONGLONG:
                value = va_arg (args, unsigned long long);
 8049078:	8b 45 0c             	mov    0xc(%ebp),%eax
 804907b:	8d 50 08             	lea    0x8(%eax),%edx
 804907e:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049081:	8b 50 04             	mov    0x4(%eax),%edx
 8049084:	8b 00                	mov    (%eax),%eax
 8049086:	89 45 d0             	mov    %eax,-0x30(%ebp)
 8049089:	89 55 d4             	mov    %edx,-0x2c(%ebp)
                break;
 804908c:	eb 5c                	jmp    80490ea <__vprintf+0x32e>
              case PTRDIFFT:
                value = va_arg (args, ptrdiff_t);
 804908e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049091:	8d 50 04             	lea    0x4(%eax),%edx
 8049094:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049097:	8b 00                	mov    (%eax),%eax
 8049099:	89 c2                	mov    %eax,%edx
 804909b:	c1 fa 1f             	sar    $0x1f,%edx
 804909e:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80490a1:	89 55 d4             	mov    %edx,-0x2c(%ebp)
#if UINTMAX_MAX != PTRDIFF_MAX
                value &= ((uintmax_t) PTRDIFF_MAX << 1) | 1;
 80490a4:	83 65 d0 ff          	andl   $0xffffffff,-0x30(%ebp)
 80490a8:	83 65 d4 00          	andl   $0x0,-0x2c(%ebp)
#endif
                break;
 80490ac:	eb 3c                	jmp    80490ea <__vprintf+0x32e>
              case SIZET:
                value = va_arg (args, size_t);
 80490ae:	8b 45 0c             	mov    0xc(%ebp),%eax
 80490b1:	8d 50 04             	lea    0x4(%eax),%edx
 80490b4:	89 55 0c             	mov    %edx,0xc(%ebp)
 80490b7:	8b 00                	mov    (%eax),%eax
 80490b9:	ba 00 00 00 00       	mov    $0x0,%edx
 80490be:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80490c1:	89 55 d4             	mov    %edx,-0x2c(%ebp)
                break;
 80490c4:	eb 24                	jmp    80490ea <__vprintf+0x32e>
              default:
                NOT_REACHED ();
 80490c6:	c7 44 24 0c 80 b1 04 	movl   $0x804b180,0xc(%esp)
 80490cd:	08 
 80490ce:	c7 44 24 08 a5 b3 04 	movl   $0x804b3a5,0x8(%esp)
 80490d5:	08 
 80490d6:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)
 80490dd:	00 
 80490de:	c7 04 24 a2 b1 04 08 	movl   $0x804b1a2,(%esp)
 80490e5:	e8 52 19 00 00       	call   804aa3c <debug_panic>
              }

            switch (*format) 
 80490ea:	8b 45 08             	mov    0x8(%ebp),%eax
 80490ed:	0f b6 00             	movzbl (%eax),%eax
 80490f0:	0f be c0             	movsbl %al,%eax
 80490f3:	83 f8 6f             	cmp    $0x6f,%eax
 80490f6:	74 18                	je     8049110 <__vprintf+0x354>
 80490f8:	83 f8 6f             	cmp    $0x6f,%eax
 80490fb:	7f 07                	jg     8049104 <__vprintf+0x348>
 80490fd:	83 f8 58             	cmp    $0x58,%eax
 8049100:	74 29                	je     804912b <__vprintf+0x36f>
 8049102:	eb 30                	jmp    8049134 <__vprintf+0x378>
 8049104:	83 f8 75             	cmp    $0x75,%eax
 8049107:	74 10                	je     8049119 <__vprintf+0x35d>
 8049109:	83 f8 78             	cmp    $0x78,%eax
 804910c:	74 14                	je     8049122 <__vprintf+0x366>
 804910e:	eb 24                	jmp    8049134 <__vprintf+0x378>
              {
              case 'o': b = &base_o; break;
 8049110:	c7 45 dc 28 b1 04 08 	movl   $0x804b128,-0x24(%ebp)
 8049117:	eb 3f                	jmp    8049158 <__vprintf+0x39c>
              case 'u': b = &base_d; break;
 8049119:	c7 45 dc 0c b1 04 08 	movl   $0x804b10c,-0x24(%ebp)
 8049120:	eb 36                	jmp    8049158 <__vprintf+0x39c>
              case 'x': b = &base_x; break;
 8049122:	c7 45 dc 4c b1 04 08 	movl   $0x804b14c,-0x24(%ebp)
 8049129:	eb 2d                	jmp    8049158 <__vprintf+0x39c>
              case 'X': b = &base_X; break;
 804912b:	c7 45 dc 70 b1 04 08 	movl   $0x804b170,-0x24(%ebp)
 8049132:	eb 24                	jmp    8049158 <__vprintf+0x39c>
              default: NOT_REACHED ();
 8049134:	c7 44 24 0c 80 b1 04 	movl   $0x804b180,0xc(%esp)
 804913b:	08 
 804913c:	c7 44 24 08 a5 b3 04 	movl   $0x804b3a5,0x8(%esp)
 8049143:	08 
 8049144:	c7 44 24 04 14 01 00 	movl   $0x114,0x4(%esp)
 804914b:	00 
 804914c:	c7 04 24 a2 b1 04 08 	movl   $0x804b1a2,(%esp)
 8049153:	e8 e4 18 00 00       	call   804aa3c <debug_panic>
              }

            format_integer (value, false, false, b, &c, output, aux);
 8049158:	8b 45 14             	mov    0x14(%ebp),%eax
 804915b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 804915f:	8b 45 10             	mov    0x10(%ebp),%eax
 8049162:	89 44 24 18          	mov    %eax,0x18(%esp)
 8049166:	8d 45 b8             	lea    -0x48(%ebp),%eax
 8049169:	89 44 24 14          	mov    %eax,0x14(%esp)
 804916d:	8b 45 dc             	mov    -0x24(%ebp),%eax
 8049170:	89 44 24 10          	mov    %eax,0x10(%esp)
 8049174:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804917b:	00 
 804917c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049183:	00 
 8049184:	8b 45 d0             	mov    -0x30(%ebp),%eax
 8049187:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804918a:	89 04 24             	mov    %eax,(%esp)
 804918d:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049191:	e8 21 04 00 00       	call   80495b7 <format_integer>
          }
          break;
 8049196:	e9 39 01 00 00       	jmp    80492d4 <__vprintf+0x518>

        case 'c': 
          {
            /* Treat character as single-character string. */
            char ch = va_arg (args, int);
 804919b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804919e:	8d 50 04             	lea    0x4(%eax),%edx
 80491a1:	89 55 0c             	mov    %edx,0xc(%ebp)
 80491a4:	8b 00                	mov    (%eax),%eax
 80491a6:	88 45 b7             	mov    %al,-0x49(%ebp)
            format_string (&ch, 1, &c, output, aux);
 80491a9:	8b 45 14             	mov    0x14(%ebp),%eax
 80491ac:	89 44 24 10          	mov    %eax,0x10(%esp)
 80491b0:	8b 45 10             	mov    0x10(%ebp),%eax
 80491b3:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80491b7:	8d 45 b8             	lea    -0x48(%ebp),%eax
 80491ba:	89 44 24 08          	mov    %eax,0x8(%esp)
 80491be:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
 80491c5:	00 
 80491c6:	8d 45 b7             	lea    -0x49(%ebp),%eax
 80491c9:	89 04 24             	mov    %eax,(%esp)
 80491cc:	e8 3a 07 00 00       	call   804990b <format_string>
          }
          break;
 80491d1:	e9 fe 00 00 00       	jmp    80492d4 <__vprintf+0x518>

        case 's':
          {
            /* String conversion. */
            const char *s = va_arg (args, char *);
 80491d6:	8b 45 0c             	mov    0xc(%ebp),%eax
 80491d9:	8d 50 04             	lea    0x4(%eax),%edx
 80491dc:	89 55 0c             	mov    %edx,0xc(%ebp)
 80491df:	8b 00                	mov    (%eax),%eax
 80491e1:	89 45 e0             	mov    %eax,-0x20(%ebp)
            if (s == NULL)
 80491e4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 80491e8:	75 07                	jne    80491f1 <__vprintf+0x435>
              s = "(null)";
 80491ea:	c7 45 e0 b4 b1 04 08 	movl   $0x804b1b4,-0x20(%ebp)

            /* Limit string length according to precision.
               Note: if c.precision == -1 then strnlen() will get
               SIZE_MAX for MAXLEN, which is just what we want. */
            format_string (s, strnlen (s, c.precision), &c, output, aux);
 80491f1:	8b 45 c0             	mov    -0x40(%ebp),%eax
 80491f4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80491f8:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80491fb:	89 04 24             	mov    %eax,(%esp)
 80491fe:	e8 81 11 00 00       	call   804a384 <strnlen>
 8049203:	8b 55 14             	mov    0x14(%ebp),%edx
 8049206:	89 54 24 10          	mov    %edx,0x10(%esp)
 804920a:	8b 55 10             	mov    0x10(%ebp),%edx
 804920d:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8049211:	8d 55 b8             	lea    -0x48(%ebp),%edx
 8049214:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049218:	89 44 24 04          	mov    %eax,0x4(%esp)
 804921c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804921f:	89 04 24             	mov    %eax,(%esp)
 8049222:	e8 e4 06 00 00       	call   804990b <format_string>
          }
          break;
 8049227:	e9 a8 00 00 00       	jmp    80492d4 <__vprintf+0x518>
          
        case 'p':
          {
            /* Pointer conversion.
               Format pointers as %#x. */
            void *p = va_arg (args, void *);
 804922c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804922f:	8d 50 04             	lea    0x4(%eax),%edx
 8049232:	89 55 0c             	mov    %edx,0xc(%ebp)
 8049235:	8b 00                	mov    (%eax),%eax
 8049237:	89 45 e4             	mov    %eax,-0x1c(%ebp)

            c.flags = POUND;
 804923a:	c7 45 b8 08 00 00 00 	movl   $0x8,-0x48(%ebp)
            format_integer ((uintptr_t) p, false, false,
 8049241:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049244:	ba 00 00 00 00       	mov    $0x0,%edx
 8049249:	8b 4d 14             	mov    0x14(%ebp),%ecx
 804924c:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
 8049250:	8b 4d 10             	mov    0x10(%ebp),%ecx
 8049253:	89 4c 24 18          	mov    %ecx,0x18(%esp)
 8049257:	8d 4d b8             	lea    -0x48(%ebp),%ecx
 804925a:	89 4c 24 14          	mov    %ecx,0x14(%esp)
 804925e:	c7 44 24 10 4c b1 04 	movl   $0x804b14c,0x10(%esp)
 8049265:	08 
 8049266:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
 804926d:	00 
 804926e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
 8049275:	00 
 8049276:	89 04 24             	mov    %eax,(%esp)
 8049279:	89 54 24 04          	mov    %edx,0x4(%esp)
 804927d:	e8 35 03 00 00       	call   80495b7 <format_integer>
                            &base_x, &c, output, aux);
          }
          break;
 8049282:	eb 50                	jmp    80492d4 <__vprintf+0x518>
        case 'g':
        case 'G':
        case 'n':
          /* We don't support floating-point arithmetic,
             and %n can be part of a security hole. */
          __printf ("<<no %%%c in kernel>>", output, aux, *format);
 8049284:	8b 45 08             	mov    0x8(%ebp),%eax
 8049287:	0f b6 00             	movzbl (%eax),%eax
 804928a:	0f be c0             	movsbl %al,%eax
 804928d:	89 44 24 0c          	mov    %eax,0xc(%esp)
 8049291:	8b 45 14             	mov    0x14(%ebp),%eax
 8049294:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049298:	8b 45 10             	mov    0x10(%ebp),%eax
 804929b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804929f:	c7 04 24 bb b1 04 08 	movl   $0x804b1bb,(%esp)
 80492a6:	e8 14 07 00 00       	call   80499bf <__printf>
          break;
 80492ab:	eb 27                	jmp    80492d4 <__vprintf+0x518>

        default:
          __printf ("<<no %%%c conversion>>", output, aux, *format);
 80492ad:	8b 45 08             	mov    0x8(%ebp),%eax
 80492b0:	0f b6 00             	movzbl (%eax),%eax
 80492b3:	0f be c0             	movsbl %al,%eax
 80492b6:	89 44 24 0c          	mov    %eax,0xc(%esp)
 80492ba:	8b 45 14             	mov    0x14(%ebp),%eax
 80492bd:	89 44 24 08          	mov    %eax,0x8(%esp)
 80492c1:	8b 45 10             	mov    0x10(%ebp),%eax
 80492c4:	89 44 24 04          	mov    %eax,0x4(%esp)
 80492c8:	c7 04 24 d1 b1 04 08 	movl   $0x804b1d1,(%esp)
 80492cf:	e8 eb 06 00 00       	call   80499bf <__printf>

void
__vprintf (const char *format, va_list args,
           void (*output) (char, void *), void *aux)
{
  for (; *format != '\0'; format++)
 80492d4:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 80492d8:	8b 45 08             	mov    0x8(%ebp),%eax
 80492db:	0f b6 00             	movzbl (%eax),%eax
 80492de:	84 c0                	test   %al,%al
 80492e0:	0f 85 e4 fa ff ff    	jne    8048dca <__vprintf+0xe>
        default:
          __printf ("<<no %%%c conversion>>", output, aux, *format);
          break;
        }
    }
}
 80492e6:	83 c4 6c             	add    $0x6c,%esp
 80492e9:	5b                   	pop    %ebx
 80492ea:	5e                   	pop    %esi
 80492eb:	5f                   	pop    %edi
 80492ec:	5d                   	pop    %ebp
 80492ed:	c3                   	ret    

080492ee <parse_conversion>:
   that indicates the conversion (e.g. the `d' in `%d').  Uses
   *ARGS for `*' field widths and precisions. */
static const char *
parse_conversion (const char *format, struct printf_conversion *c,
                  va_list *args) 
{
 80492ee:	55                   	push   %ebp
 80492ef:	89 e5                	mov    %esp,%ebp
 80492f1:	83 ec 04             	sub    $0x4,%esp
  /* Parse flag characters. */
  c->flags = 0;
 80492f4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80492f7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
  for (;;) 
    {
      switch (*format++) 
 80492fd:	8b 45 08             	mov    0x8(%ebp),%eax
 8049300:	0f b6 00             	movzbl (%eax),%eax
 8049303:	0f be c0             	movsbl %al,%eax
 8049306:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 804930a:	83 e8 20             	sub    $0x20,%eax
 804930d:	83 f8 10             	cmp    $0x10,%eax
 8049310:	77 6f                	ja     8049381 <parse_conversion+0x93>
 8049312:	8b 04 85 00 b3 04 08 	mov    0x804b300(,%eax,4),%eax
 8049319:	ff e0                	jmp    *%eax
        {
        case '-':
          c->flags |= MINUS;
 804931b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804931e:	8b 00                	mov    (%eax),%eax
 8049320:	89 c2                	mov    %eax,%edx
 8049322:	83 ca 01             	or     $0x1,%edx
 8049325:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049328:	89 10                	mov    %edx,(%eax)
          break;
 804932a:	eb 68                	jmp    8049394 <parse_conversion+0xa6>
        case '+':
          c->flags |= PLUS;
 804932c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804932f:	8b 00                	mov    (%eax),%eax
 8049331:	89 c2                	mov    %eax,%edx
 8049333:	83 ca 02             	or     $0x2,%edx
 8049336:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049339:	89 10                	mov    %edx,(%eax)
          break;
 804933b:	eb 57                	jmp    8049394 <parse_conversion+0xa6>
        case ' ':
          c->flags |= SPACE;
 804933d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049340:	8b 00                	mov    (%eax),%eax
 8049342:	89 c2                	mov    %eax,%edx
 8049344:	83 ca 04             	or     $0x4,%edx
 8049347:	8b 45 0c             	mov    0xc(%ebp),%eax
 804934a:	89 10                	mov    %edx,(%eax)
          break;
 804934c:	eb 46                	jmp    8049394 <parse_conversion+0xa6>
        case '#':
          c->flags |= POUND;
 804934e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049351:	8b 00                	mov    (%eax),%eax
 8049353:	89 c2                	mov    %eax,%edx
 8049355:	83 ca 08             	or     $0x8,%edx
 8049358:	8b 45 0c             	mov    0xc(%ebp),%eax
 804935b:	89 10                	mov    %edx,(%eax)
          break;
 804935d:	eb 35                	jmp    8049394 <parse_conversion+0xa6>
        case '0':
          c->flags |= ZERO;
 804935f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049362:	8b 00                	mov    (%eax),%eax
 8049364:	89 c2                	mov    %eax,%edx
 8049366:	83 ca 10             	or     $0x10,%edx
 8049369:	8b 45 0c             	mov    0xc(%ebp),%eax
 804936c:	89 10                	mov    %edx,(%eax)
          break;
 804936e:	eb 24                	jmp    8049394 <parse_conversion+0xa6>
        case '\'':
          c->flags |= GROUP;
 8049370:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049373:	8b 00                	mov    (%eax),%eax
 8049375:	89 c2                	mov    %eax,%edx
 8049377:	83 ca 20             	or     $0x20,%edx
 804937a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804937d:	89 10                	mov    %edx,(%eax)
          break;
 804937f:	eb 13                	jmp    8049394 <parse_conversion+0xa6>
        default:
          format--;
 8049381:	83 6d 08 01          	subl   $0x1,0x8(%ebp)
          goto not_a_flag;
 8049385:	90                   	nop
        }
    }
 not_a_flag:
  if (c->flags & MINUS)
 8049386:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049389:	8b 00                	mov    (%eax),%eax
 804938b:	83 e0 01             	and    $0x1,%eax
 804938e:	84 c0                	test   %al,%al
 8049390:	74 16                	je     80493a8 <parse_conversion+0xba>
 8049392:	eb 05                	jmp    8049399 <parse_conversion+0xab>
          break;
        default:
          format--;
          goto not_a_flag;
        }
    }
 8049394:	e9 64 ff ff ff       	jmp    80492fd <parse_conversion+0xf>
 not_a_flag:
  if (c->flags & MINUS)
    c->flags &= ~ZERO;
 8049399:	8b 45 0c             	mov    0xc(%ebp),%eax
 804939c:	8b 00                	mov    (%eax),%eax
 804939e:	89 c2                	mov    %eax,%edx
 80493a0:	83 e2 ef             	and    $0xffffffef,%edx
 80493a3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493a6:	89 10                	mov    %edx,(%eax)
  if (c->flags & PLUS)
 80493a8:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493ab:	8b 00                	mov    (%eax),%eax
 80493ad:	83 e0 02             	and    $0x2,%eax
 80493b0:	85 c0                	test   %eax,%eax
 80493b2:	74 0f                	je     80493c3 <parse_conversion+0xd5>
    c->flags &= ~SPACE;
 80493b4:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493b7:	8b 00                	mov    (%eax),%eax
 80493b9:	89 c2                	mov    %eax,%edx
 80493bb:	83 e2 fb             	and    $0xfffffffb,%edx
 80493be:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493c1:	89 10                	mov    %edx,(%eax)

  /* Parse field width. */
  c->width = 0;
 80493c3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493c6:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
  if (*format == '*')
 80493cd:	8b 45 08             	mov    0x8(%ebp),%eax
 80493d0:	0f b6 00             	movzbl (%eax),%eax
 80493d3:	3c 2a                	cmp    $0x2a,%al
 80493d5:	75 47                	jne    804941e <parse_conversion+0x130>
    {
      format++;
 80493d7:	83 45 08 01          	addl   $0x1,0x8(%ebp)
      c->width = va_arg (*args, int);
 80493db:	8b 45 10             	mov    0x10(%ebp),%eax
 80493de:	8b 00                	mov    (%eax),%eax
 80493e0:	8d 48 04             	lea    0x4(%eax),%ecx
 80493e3:	8b 55 10             	mov    0x10(%ebp),%edx
 80493e6:	89 0a                	mov    %ecx,(%edx)
 80493e8:	8b 10                	mov    (%eax),%edx
 80493ea:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493ed:	89 50 04             	mov    %edx,0x4(%eax)
 80493f0:	eb 42                	jmp    8049434 <parse_conversion+0x146>
    }
  else 
    {
      for (; isdigit (*format); format++)
        c->width = c->width * 10 + *format - '0';
 80493f2:	8b 45 0c             	mov    0xc(%ebp),%eax
 80493f5:	8b 50 04             	mov    0x4(%eax),%edx
 80493f8:	89 d0                	mov    %edx,%eax
 80493fa:	c1 e0 02             	shl    $0x2,%eax
 80493fd:	01 d0                	add    %edx,%eax
 80493ff:	01 c0                	add    %eax,%eax
 8049401:	89 c2                	mov    %eax,%edx
 8049403:	8b 45 08             	mov    0x8(%ebp),%eax
 8049406:	0f b6 00             	movzbl (%eax),%eax
 8049409:	0f be c0             	movsbl %al,%eax
 804940c:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804940f:	8d 50 d0             	lea    -0x30(%eax),%edx
 8049412:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049415:	89 50 04             	mov    %edx,0x4(%eax)
      format++;
      c->width = va_arg (*args, int);
    }
  else 
    {
      for (; isdigit (*format); format++)
 8049418:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 804941c:	eb 01                	jmp    804941f <parse_conversion+0x131>
 804941e:	90                   	nop
 804941f:	8b 45 08             	mov    0x8(%ebp),%eax
 8049422:	0f b6 00             	movzbl (%eax),%eax
 8049425:	0f be c0             	movsbl %al,%eax
 8049428:	89 04 24             	mov    %eax,(%esp)
 804942b:	e8 58 f8 ff ff       	call   8048c88 <isdigit>
 8049430:	85 c0                	test   %eax,%eax
 8049432:	75 be                	jne    80493f2 <parse_conversion+0x104>
        c->width = c->width * 10 + *format - '0';
    }
  if (c->width < 0) 
 8049434:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049437:	8b 40 04             	mov    0x4(%eax),%eax
 804943a:	85 c0                	test   %eax,%eax
 804943c:	79 1f                	jns    804945d <parse_conversion+0x16f>
    {
      c->width = -c->width;
 804943e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049441:	8b 40 04             	mov    0x4(%eax),%eax
 8049444:	89 c2                	mov    %eax,%edx
 8049446:	f7 da                	neg    %edx
 8049448:	8b 45 0c             	mov    0xc(%ebp),%eax
 804944b:	89 50 04             	mov    %edx,0x4(%eax)
      c->flags |= MINUS;
 804944e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049451:	8b 00                	mov    (%eax),%eax
 8049453:	89 c2                	mov    %eax,%edx
 8049455:	83 ca 01             	or     $0x1,%edx
 8049458:	8b 45 0c             	mov    0xc(%ebp),%eax
 804945b:	89 10                	mov    %edx,(%eax)
    }
      
  /* Parse precision. */
  c->precision = -1;
 804945d:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049460:	c7 40 08 ff ff ff ff 	movl   $0xffffffff,0x8(%eax)
  if (*format == '.') 
 8049467:	8b 45 08             	mov    0x8(%ebp),%eax
 804946a:	0f b6 00             	movzbl (%eax),%eax
 804946d:	3c 2e                	cmp    $0x2e,%al
 804946f:	0f 85 88 00 00 00    	jne    80494fd <parse_conversion+0x20f>
    {
      format++;
 8049475:	83 45 08 01          	addl   $0x1,0x8(%ebp)
      if (*format == '*') 
 8049479:	8b 45 08             	mov    0x8(%ebp),%eax
 804947c:	0f b6 00             	movzbl (%eax),%eax
 804947f:	3c 2a                	cmp    $0x2a,%al
 8049481:	75 1b                	jne    804949e <parse_conversion+0x1b0>
        {
          format++;
 8049483:	83 45 08 01          	addl   $0x1,0x8(%ebp)
          c->precision = va_arg (*args, int);
 8049487:	8b 45 10             	mov    0x10(%ebp),%eax
 804948a:	8b 00                	mov    (%eax),%eax
 804948c:	8d 48 04             	lea    0x4(%eax),%ecx
 804948f:	8b 55 10             	mov    0x10(%ebp),%edx
 8049492:	89 0a                	mov    %ecx,(%edx)
 8049494:	8b 10                	mov    (%eax),%edx
 8049496:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049499:	89 50 08             	mov    %edx,0x8(%eax)
 804949c:	eb 4b                	jmp    80494e9 <parse_conversion+0x1fb>
        }
      else 
        {
          c->precision = 0;
 804949e:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494a1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
          for (; isdigit (*format); format++)
 80494a8:	eb 2a                	jmp    80494d4 <parse_conversion+0x1e6>
            c->precision = c->precision * 10 + *format - '0';
 80494aa:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494ad:	8b 50 08             	mov    0x8(%eax),%edx
 80494b0:	89 d0                	mov    %edx,%eax
 80494b2:	c1 e0 02             	shl    $0x2,%eax
 80494b5:	01 d0                	add    %edx,%eax
 80494b7:	01 c0                	add    %eax,%eax
 80494b9:	89 c2                	mov    %eax,%edx
 80494bb:	8b 45 08             	mov    0x8(%ebp),%eax
 80494be:	0f b6 00             	movzbl (%eax),%eax
 80494c1:	0f be c0             	movsbl %al,%eax
 80494c4:	8d 04 02             	lea    (%edx,%eax,1),%eax
 80494c7:	8d 50 d0             	lea    -0x30(%eax),%edx
 80494ca:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494cd:	89 50 08             	mov    %edx,0x8(%eax)
          c->precision = va_arg (*args, int);
        }
      else 
        {
          c->precision = 0;
          for (; isdigit (*format); format++)
 80494d0:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 80494d4:	8b 45 08             	mov    0x8(%ebp),%eax
 80494d7:	0f b6 00             	movzbl (%eax),%eax
 80494da:	0f be c0             	movsbl %al,%eax
 80494dd:	89 04 24             	mov    %eax,(%esp)
 80494e0:	e8 a3 f7 ff ff       	call   8048c88 <isdigit>
 80494e5:	85 c0                	test   %eax,%eax
 80494e7:	75 c1                	jne    80494aa <parse_conversion+0x1bc>
            c->precision = c->precision * 10 + *format - '0';
        }
      if (c->precision < 0) 
 80494e9:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494ec:	8b 40 08             	mov    0x8(%eax),%eax
 80494ef:	85 c0                	test   %eax,%eax
 80494f1:	79 0a                	jns    80494fd <parse_conversion+0x20f>
        c->precision = -1;
 80494f3:	8b 45 0c             	mov    0xc(%ebp),%eax
 80494f6:	c7 40 08 ff ff ff ff 	movl   $0xffffffff,0x8(%eax)
    }
  if (c->precision >= 0)
 80494fd:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049500:	8b 40 08             	mov    0x8(%eax),%eax
 8049503:	85 c0                	test   %eax,%eax
 8049505:	78 0f                	js     8049516 <parse_conversion+0x228>
    c->flags &= ~ZERO;
 8049507:	8b 45 0c             	mov    0xc(%ebp),%eax
 804950a:	8b 00                	mov    (%eax),%eax
 804950c:	89 c2                	mov    %eax,%edx
 804950e:	83 e2 ef             	and    $0xffffffef,%edx
 8049511:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049514:	89 10                	mov    %edx,(%eax)

  /* Parse type. */
  c->type = INT;
 8049516:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049519:	c7 40 0c 03 00 00 00 	movl   $0x3,0xc(%eax)
  switch (*format++) 
 8049520:	8b 45 08             	mov    0x8(%ebp),%eax
 8049523:	0f b6 00             	movzbl (%eax),%eax
 8049526:	0f be c0             	movsbl %al,%eax
 8049529:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 804952d:	83 e8 68             	sub    $0x68,%eax
 8049530:	83 f8 12             	cmp    $0x12,%eax
 8049533:	77 79                	ja     80495ae <parse_conversion+0x2c0>
 8049535:	8b 04 85 44 b3 04 08 	mov    0x804b344(,%eax,4),%eax
 804953c:	ff e0                	jmp    *%eax
    {
    case 'h':
      if (*format == 'h') 
 804953e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049541:	0f b6 00             	movzbl (%eax),%eax
 8049544:	3c 68                	cmp    $0x68,%al
 8049546:	75 10                	jne    8049558 <parse_conversion+0x26a>
        {
          format++;
 8049548:	83 45 08 01          	addl   $0x1,0x8(%ebp)
          c->type = CHAR;
 804954c:	8b 45 0c             	mov    0xc(%ebp),%eax
 804954f:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
        }
      else
        c->type = SHORT;
      break;
 8049556:	eb 5a                	jmp    80495b2 <parse_conversion+0x2c4>
        {
          format++;
          c->type = CHAR;
        }
      else
        c->type = SHORT;
 8049558:	8b 45 0c             	mov    0xc(%ebp),%eax
 804955b:	c7 40 0c 02 00 00 00 	movl   $0x2,0xc(%eax)
      break;
 8049562:	eb 4e                	jmp    80495b2 <parse_conversion+0x2c4>
      
    case 'j':
      c->type = INTMAX;
 8049564:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049567:	c7 40 0c 04 00 00 00 	movl   $0x4,0xc(%eax)
      break;
 804956e:	eb 42                	jmp    80495b2 <parse_conversion+0x2c4>

    case 'l':
      if (*format == 'l')
 8049570:	8b 45 08             	mov    0x8(%ebp),%eax
 8049573:	0f b6 00             	movzbl (%eax),%eax
 8049576:	3c 6c                	cmp    $0x6c,%al
 8049578:	75 10                	jne    804958a <parse_conversion+0x29c>
        {
          format++;
 804957a:	83 45 08 01          	addl   $0x1,0x8(%ebp)
          c->type = LONGLONG;
 804957e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049581:	c7 40 0c 06 00 00 00 	movl   $0x6,0xc(%eax)
        }
      else
        c->type = LONG;
      break;
 8049588:	eb 28                	jmp    80495b2 <parse_conversion+0x2c4>
        {
          format++;
          c->type = LONGLONG;
        }
      else
        c->type = LONG;
 804958a:	8b 45 0c             	mov    0xc(%ebp),%eax
 804958d:	c7 40 0c 05 00 00 00 	movl   $0x5,0xc(%eax)
      break;
 8049594:	eb 1c                	jmp    80495b2 <parse_conversion+0x2c4>

    case 't':
      c->type = PTRDIFFT;
 8049596:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049599:	c7 40 0c 07 00 00 00 	movl   $0x7,0xc(%eax)
      break;
 80495a0:	eb 10                	jmp    80495b2 <parse_conversion+0x2c4>

    case 'z':
      c->type = SIZET;
 80495a2:	8b 45 0c             	mov    0xc(%ebp),%eax
 80495a5:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%eax)
      break;
 80495ac:	eb 04                	jmp    80495b2 <parse_conversion+0x2c4>

    default:
      format--;
 80495ae:	83 6d 08 01          	subl   $0x1,0x8(%ebp)
      break;
    }

  return format;
 80495b2:	8b 45 08             	mov    0x8(%ebp),%eax
}
 80495b5:	c9                   	leave  
 80495b6:	c3                   	ret    

080495b7 <format_integer>:
static void
format_integer (uintmax_t value, bool is_signed, bool negative, 
                const struct integer_base *b,
                const struct printf_conversion *c,
                void (*output) (char, void *), void *aux)
{
 80495b7:	55                   	push   %ebp
 80495b8:	89 e5                	mov    %esp,%ebp
 80495ba:	56                   	push   %esi
 80495bb:	53                   	push   %ebx
 80495bc:	83 c4 80             	add    $0xffffff80,%esp
 80495bf:	8b 55 10             	mov    0x10(%ebp),%edx
 80495c2:	8b 45 14             	mov    0x14(%ebp),%eax
 80495c5:	8b 4d 08             	mov    0x8(%ebp),%ecx
 80495c8:	89 4d 90             	mov    %ecx,-0x70(%ebp)
 80495cb:	8b 4d 0c             	mov    0xc(%ebp),%ecx
 80495ce:	89 4d 94             	mov    %ecx,-0x6c(%ebp)
 80495d1:	88 55 8c             	mov    %dl,-0x74(%ebp)
 80495d4:	88 45 88             	mov    %al,-0x78(%ebp)
  int digit_cnt;                /* # of digits output so far. */

  /* Determine sign character, if any.
     An unsigned conversion will never have a sign character,
     even if one of the flags requests one. */
  sign = 0;
 80495d7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
  if (is_signed) 
 80495de:	80 7d 8c 00          	cmpb   $0x0,-0x74(%ebp)
 80495e2:	74 53                	je     8049637 <format_integer+0x80>
    {
      if (c->flags & PLUS)
 80495e4:	8b 45 1c             	mov    0x1c(%ebp),%eax
 80495e7:	8b 00                	mov    (%eax),%eax
 80495e9:	83 e0 02             	and    $0x2,%eax
 80495ec:	85 c0                	test   %eax,%eax
 80495ee:	74 17                	je     8049607 <format_integer+0x50>
        sign = negative ? '-' : '+';
 80495f0:	80 7d 88 00          	cmpb   $0x0,-0x78(%ebp)
 80495f4:	74 07                	je     80495fd <format_integer+0x46>
 80495f6:	b8 2d 00 00 00       	mov    $0x2d,%eax
 80495fb:	eb 05                	jmp    8049602 <format_integer+0x4b>
 80495fd:	b8 2b 00 00 00       	mov    $0x2b,%eax
 8049602:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8049605:	eb 30                	jmp    8049637 <format_integer+0x80>
      else if (c->flags & SPACE)
 8049607:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804960a:	8b 00                	mov    (%eax),%eax
 804960c:	83 e0 04             	and    $0x4,%eax
 804960f:	85 c0                	test   %eax,%eax
 8049611:	74 17                	je     804962a <format_integer+0x73>
        sign = negative ? '-' : ' ';
 8049613:	80 7d 88 00          	cmpb   $0x0,-0x78(%ebp)
 8049617:	74 07                	je     8049620 <format_integer+0x69>
 8049619:	b8 2d 00 00 00       	mov    $0x2d,%eax
 804961e:	eb 05                	jmp    8049625 <format_integer+0x6e>
 8049620:	b8 20 00 00 00       	mov    $0x20,%eax
 8049625:	89 45 e8             	mov    %eax,-0x18(%ebp)
 8049628:	eb 0d                	jmp    8049637 <format_integer+0x80>
      else if (negative)
 804962a:	80 7d 88 00          	cmpb   $0x0,-0x78(%ebp)
 804962e:	74 07                	je     8049637 <format_integer+0x80>
        sign = '-';
 8049630:	c7 45 e8 2d 00 00 00 	movl   $0x2d,-0x18(%ebp)
    }

  /* Determine whether to include `0x' or `0X'.
     It will only be included with a hexadecimal conversion of a
     nonzero value with the # flag. */
  x = (c->flags & POUND) && value ? b->x : 0;
 8049637:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804963a:	8b 00                	mov    (%eax),%eax
 804963c:	83 e0 08             	and    $0x8,%eax
 804963f:	85 c0                	test   %eax,%eax
 8049641:	74 14                	je     8049657 <format_integer+0xa0>
 8049643:	8b 45 90             	mov    -0x70(%ebp),%eax
 8049646:	8b 55 94             	mov    -0x6c(%ebp),%edx
 8049649:	09 d0                	or     %edx,%eax
 804964b:	85 c0                	test   %eax,%eax
 804964d:	74 08                	je     8049657 <format_integer+0xa0>
 804964f:	8b 45 18             	mov    0x18(%ebp),%eax
 8049652:	8b 40 08             	mov    0x8(%eax),%eax
 8049655:	eb 05                	jmp    804965c <format_integer+0xa5>
 8049657:	b8 00 00 00 00       	mov    $0x0,%eax
 804965c:	89 45 e4             	mov    %eax,-0x1c(%ebp)

  /* Accumulate digits into buffer.
     This algorithm produces digits in reverse order, so later we
     will output the buffer's content in reverse. */
  cp = buf;
 804965f:	8d 45 a0             	lea    -0x60(%ebp),%eax
 8049662:	89 45 e0             	mov    %eax,-0x20(%ebp)
  digit_cnt = 0;
 8049665:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  while (value > 0) 
 804966c:	e9 9b 00 00 00       	jmp    804970c <format_integer+0x155>
    {
      if ((c->flags & GROUP) && digit_cnt > 0 && digit_cnt % b->group == 0)
 8049671:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8049674:	8b 00                	mov    (%eax),%eax
 8049676:	83 e0 20             	and    $0x20,%eax
 8049679:	85 c0                	test   %eax,%eax
 804967b:	74 26                	je     80496a3 <format_integer+0xec>
 804967d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8049681:	7e 20                	jle    80496a3 <format_integer+0xec>
 8049683:	8b 45 18             	mov    0x18(%ebp),%eax
 8049686:	8b 48 0c             	mov    0xc(%eax),%ecx
 8049689:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804968c:	89 c2                	mov    %eax,%edx
 804968e:	c1 fa 1f             	sar    $0x1f,%edx
 8049691:	f7 f9                	idiv   %ecx
 8049693:	89 d0                	mov    %edx,%eax
 8049695:	85 c0                	test   %eax,%eax
 8049697:	75 0a                	jne    80496a3 <format_integer+0xec>
        *cp++ = ',';
 8049699:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804969c:	c6 00 2c             	movb   $0x2c,(%eax)
 804969f:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
      *cp++ = b->digits[value % b->base];
 80496a3:	8b 45 18             	mov    0x18(%ebp),%eax
 80496a6:	8b 70 04             	mov    0x4(%eax),%esi
 80496a9:	8b 45 18             	mov    0x18(%ebp),%eax
 80496ac:	8b 00                	mov    (%eax),%eax
 80496ae:	89 c1                	mov    %eax,%ecx
 80496b0:	89 c3                	mov    %eax,%ebx
 80496b2:	c1 fb 1f             	sar    $0x1f,%ebx
 80496b5:	8b 45 90             	mov    -0x70(%ebp),%eax
 80496b8:	8b 55 94             	mov    -0x6c(%ebp),%edx
 80496bb:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 80496bf:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
 80496c3:	89 04 24             	mov    %eax,(%esp)
 80496c6:	89 54 24 04          	mov    %edx,0x4(%esp)
 80496ca:	e8 25 13 00 00       	call   804a9f4 <__umoddi3>
 80496cf:	8d 04 06             	lea    (%esi,%eax,1),%eax
 80496d2:	0f b6 10             	movzbl (%eax),%edx
 80496d5:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80496d8:	88 10                	mov    %dl,(%eax)
 80496da:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
      value /= b->base;
 80496de:	8b 45 18             	mov    0x18(%ebp),%eax
 80496e1:	8b 00                	mov    (%eax),%eax
 80496e3:	89 c2                	mov    %eax,%edx
 80496e5:	c1 fa 1f             	sar    $0x1f,%edx
 80496e8:	89 44 24 08          	mov    %eax,0x8(%esp)
 80496ec:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80496f0:	8b 45 90             	mov    -0x70(%ebp),%eax
 80496f3:	8b 55 94             	mov    -0x6c(%ebp),%edx
 80496f6:	89 04 24             	mov    %eax,(%esp)
 80496f9:	89 54 24 04          	mov    %edx,0x4(%esp)
 80496fd:	e8 b2 12 00 00       	call   804a9b4 <__udivdi3>
 8049702:	89 45 90             	mov    %eax,-0x70(%ebp)
 8049705:	89 55 94             	mov    %edx,-0x6c(%ebp)
      digit_cnt++;
 8049708:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  /* Accumulate digits into buffer.
     This algorithm produces digits in reverse order, so later we
     will output the buffer's content in reverse. */
  cp = buf;
  digit_cnt = 0;
  while (value > 0) 
 804970c:	8b 45 90             	mov    -0x70(%ebp),%eax
 804970f:	8b 55 94             	mov    -0x6c(%ebp),%edx
 8049712:	09 d0                	or     %edx,%eax
 8049714:	85 c0                	test   %eax,%eax
 8049716:	0f 85 55 ff ff ff    	jne    8049671 <format_integer+0xba>
  /* Append enough zeros to match precision.
     If requested precision is 0, then a value of zero is
     rendered as a null string, otherwise as "0".
     If the # flag is used with base 8, the result must always
     begin with a zero. */
  precision = c->precision < 0 ? 1 : c->precision;
 804971c:	8b 45 1c             	mov    0x1c(%ebp),%eax
 804971f:	8b 40 08             	mov    0x8(%eax),%eax
 8049722:	85 c0                	test   %eax,%eax
 8049724:	78 08                	js     804972e <format_integer+0x177>
 8049726:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8049729:	8b 40 08             	mov    0x8(%eax),%eax
 804972c:	eb 05                	jmp    8049733 <format_integer+0x17c>
 804972e:	b8 01 00 00 00       	mov    $0x1,%eax
 8049733:	89 45 ec             	mov    %eax,-0x14(%ebp)
  while (cp - buf < precision && cp < buf + sizeof buf - 1)
 8049736:	eb 0a                	jmp    8049742 <format_integer+0x18b>
    *cp++ = '0';
 8049738:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804973b:	c6 00 30             	movb   $0x30,(%eax)
 804973e:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)
     If requested precision is 0, then a value of zero is
     rendered as a null string, otherwise as "0".
     If the # flag is used with base 8, the result must always
     begin with a zero. */
  precision = c->precision < 0 ? 1 : c->precision;
  while (cp - buf < precision && cp < buf + sizeof buf - 1)
 8049742:	8b 55 e0             	mov    -0x20(%ebp),%edx
 8049745:	8d 45 a0             	lea    -0x60(%ebp),%eax
 8049748:	89 d1                	mov    %edx,%ecx
 804974a:	29 c1                	sub    %eax,%ecx
 804974c:	89 c8                	mov    %ecx,%eax
 804974e:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 8049751:	7d 0b                	jge    804975e <format_integer+0x1a7>
 8049753:	8d 45 a0             	lea    -0x60(%ebp),%eax
 8049756:	83 c0 3f             	add    $0x3f,%eax
 8049759:	39 45 e0             	cmp    %eax,-0x20(%ebp)
 804975c:	72 da                	jb     8049738 <format_integer+0x181>
    *cp++ = '0';
  if ((c->flags & POUND) && b->base == 8 && (cp == buf || cp[-1] != '0'))
 804975e:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8049761:	8b 00                	mov    (%eax),%eax
 8049763:	83 e0 08             	and    $0x8,%eax
 8049766:	85 c0                	test   %eax,%eax
 8049768:	74 29                	je     8049793 <format_integer+0x1dc>
 804976a:	8b 45 18             	mov    0x18(%ebp),%eax
 804976d:	8b 00                	mov    (%eax),%eax
 804976f:	83 f8 08             	cmp    $0x8,%eax
 8049772:	75 1f                	jne    8049793 <format_integer+0x1dc>
 8049774:	8d 45 a0             	lea    -0x60(%ebp),%eax
 8049777:	39 45 e0             	cmp    %eax,-0x20(%ebp)
 804977a:	74 0d                	je     8049789 <format_integer+0x1d2>
 804977c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804977f:	83 e8 01             	sub    $0x1,%eax
 8049782:	0f b6 00             	movzbl (%eax),%eax
 8049785:	3c 30                	cmp    $0x30,%al
 8049787:	74 0a                	je     8049793 <format_integer+0x1dc>
    *cp++ = '0';
 8049789:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804978c:	c6 00 30             	movb   $0x30,(%eax)
 804978f:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)

  /* Calculate number of pad characters to fill field width. */
  pad_cnt = c->width - (cp - buf) - (x ? 2 : 0) - (sign != 0);
 8049793:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8049796:	8b 40 04             	mov    0x4(%eax),%eax
 8049799:	8d 4d a0             	lea    -0x60(%ebp),%ecx
 804979c:	8b 55 e0             	mov    -0x20(%ebp),%edx
 804979f:	89 cb                	mov    %ecx,%ebx
 80497a1:	29 d3                	sub    %edx,%ebx
 80497a3:	89 da                	mov    %ebx,%edx
 80497a5:	8d 14 10             	lea    (%eax,%edx,1),%edx
 80497a8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 80497ac:	74 07                	je     80497b5 <format_integer+0x1fe>
 80497ae:	b8 02 00 00 00       	mov    $0x2,%eax
 80497b3:	eb 05                	jmp    80497ba <format_integer+0x203>
 80497b5:	b8 00 00 00 00       	mov    $0x0,%eax
 80497ba:	29 c2                	sub    %eax,%edx
 80497bc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 80497c0:	0f 95 c0             	setne  %al
 80497c3:	0f b6 c0             	movzbl %al,%eax
 80497c6:	89 d1                	mov    %edx,%ecx
 80497c8:	29 c1                	sub    %eax,%ecx
 80497ca:	89 c8                	mov    %ecx,%eax
 80497cc:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (pad_cnt < 0)
 80497cf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 80497d3:	79 07                	jns    80497dc <format_integer+0x225>
    pad_cnt = 0;
 80497d5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)

  /* Do output. */
  if ((c->flags & (MINUS | ZERO)) == 0)
 80497dc:	8b 45 1c             	mov    0x1c(%ebp),%eax
 80497df:	8b 00                	mov    (%eax),%eax
 80497e1:	83 e0 11             	and    $0x11,%eax
 80497e4:	85 c0                	test   %eax,%eax
 80497e6:	75 21                	jne    8049809 <format_integer+0x252>
    output_dup (' ', pad_cnt, output, aux);
 80497e8:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80497eb:	8b 55 24             	mov    0x24(%ebp),%edx
 80497ee:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80497f2:	8b 55 20             	mov    0x20(%ebp),%edx
 80497f5:	89 54 24 08          	mov    %edx,0x8(%esp)
 80497f9:	89 44 24 04          	mov    %eax,0x4(%esp)
 80497fd:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 8049804:	e8 d0 00 00 00       	call   80498d9 <output_dup>
  if (sign)
 8049809:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
 804980d:	74 15                	je     8049824 <format_integer+0x26d>
    output (sign, aux);
 804980f:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049812:	0f be c0             	movsbl %al,%eax
 8049815:	8b 55 24             	mov    0x24(%ebp),%edx
 8049818:	89 54 24 04          	mov    %edx,0x4(%esp)
 804981c:	89 04 24             	mov    %eax,(%esp)
 804981f:	8b 45 20             	mov    0x20(%ebp),%eax
 8049822:	ff d0                	call   *%eax
  if (x) 
 8049824:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
 8049828:	74 28                	je     8049852 <format_integer+0x29b>
    {
      output ('0', aux);
 804982a:	8b 45 24             	mov    0x24(%ebp),%eax
 804982d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049831:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)
 8049838:	8b 45 20             	mov    0x20(%ebp),%eax
 804983b:	ff d0                	call   *%eax
      output (x, aux); 
 804983d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049840:	0f be c0             	movsbl %al,%eax
 8049843:	8b 55 24             	mov    0x24(%ebp),%edx
 8049846:	89 54 24 04          	mov    %edx,0x4(%esp)
 804984a:	89 04 24             	mov    %eax,(%esp)
 804984d:	8b 45 20             	mov    0x20(%ebp),%eax
 8049850:	ff d0                	call   *%eax
    }
  if (c->flags & ZERO)
 8049852:	8b 45 1c             	mov    0x1c(%ebp),%eax
 8049855:	8b 00                	mov    (%eax),%eax
 8049857:	83 e0 10             	and    $0x10,%eax
 804985a:	85 c0                	test   %eax,%eax
 804985c:	74 3f                	je     804989d <format_integer+0x2e6>
    output_dup ('0', pad_cnt, output, aux);
 804985e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049861:	8b 55 24             	mov    0x24(%ebp),%edx
 8049864:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8049868:	8b 55 20             	mov    0x20(%ebp),%edx
 804986b:	89 54 24 08          	mov    %edx,0x8(%esp)
 804986f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049873:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)
 804987a:	e8 5a 00 00 00       	call   80498d9 <output_dup>
  while (cp > buf)
 804987f:	eb 1c                	jmp    804989d <format_integer+0x2e6>
    output (*--cp, aux);
 8049881:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
 8049885:	8b 45 e0             	mov    -0x20(%ebp),%eax
 8049888:	0f b6 00             	movzbl (%eax),%eax
 804988b:	0f be c0             	movsbl %al,%eax
 804988e:	8b 55 24             	mov    0x24(%ebp),%edx
 8049891:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049895:	89 04 24             	mov    %eax,(%esp)
 8049898:	8b 45 20             	mov    0x20(%ebp),%eax
 804989b:	ff d0                	call   *%eax
      output ('0', aux);
      output (x, aux); 
    }
  if (c->flags & ZERO)
    output_dup ('0', pad_cnt, output, aux);
  while (cp > buf)
 804989d:	8d 45 a0             	lea    -0x60(%ebp),%eax
 80498a0:	39 45 e0             	cmp    %eax,-0x20(%ebp)
 80498a3:	77 dc                	ja     8049881 <format_integer+0x2ca>
    output (*--cp, aux);
  if (c->flags & MINUS)
 80498a5:	8b 45 1c             	mov    0x1c(%ebp),%eax
 80498a8:	8b 00                	mov    (%eax),%eax
 80498aa:	83 e0 01             	and    $0x1,%eax
 80498ad:	84 c0                	test   %al,%al
 80498af:	74 21                	je     80498d2 <format_integer+0x31b>
    output_dup (' ', pad_cnt, output, aux);
 80498b1:	8b 45 f0             	mov    -0x10(%ebp),%eax
 80498b4:	8b 55 24             	mov    0x24(%ebp),%edx
 80498b7:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80498bb:	8b 55 20             	mov    0x20(%ebp),%edx
 80498be:	89 54 24 08          	mov    %edx,0x8(%esp)
 80498c2:	89 44 24 04          	mov    %eax,0x4(%esp)
 80498c6:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 80498cd:	e8 07 00 00 00       	call   80498d9 <output_dup>
}
 80498d2:	83 ec 80             	sub    $0xffffff80,%esp
 80498d5:	5b                   	pop    %ebx
 80498d6:	5e                   	pop    %esi
 80498d7:	5d                   	pop    %ebp
 80498d8:	c3                   	ret    

080498d9 <output_dup>:

/* Writes CH to OUTPUT with auxiliary data AUX, CNT times. */
static void
output_dup (char ch, size_t cnt, void (*output) (char, void *), void *aux) 
{
 80498d9:	55                   	push   %ebp
 80498da:	89 e5                	mov    %esp,%ebp
 80498dc:	83 ec 28             	sub    $0x28,%esp
 80498df:	8b 45 08             	mov    0x8(%ebp),%eax
 80498e2:	88 45 f4             	mov    %al,-0xc(%ebp)
  while (cnt-- > 0)
 80498e5:	eb 13                	jmp    80498fa <output_dup+0x21>
    output (ch, aux);
 80498e7:	0f be 45 f4          	movsbl -0xc(%ebp),%eax
 80498eb:	8b 55 14             	mov    0x14(%ebp),%edx
 80498ee:	89 54 24 04          	mov    %edx,0x4(%esp)
 80498f2:	89 04 24             	mov    %eax,(%esp)
 80498f5:	8b 45 10             	mov    0x10(%ebp),%eax
 80498f8:	ff d0                	call   *%eax

/* Writes CH to OUTPUT with auxiliary data AUX, CNT times. */
static void
output_dup (char ch, size_t cnt, void (*output) (char, void *), void *aux) 
{
  while (cnt-- > 0)
 80498fa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 80498fe:	0f 95 c0             	setne  %al
 8049901:	83 6d 0c 01          	subl   $0x1,0xc(%ebp)
 8049905:	84 c0                	test   %al,%al
 8049907:	75 de                	jne    80498e7 <output_dup+0xe>
    output (ch, aux);
}
 8049909:	c9                   	leave  
 804990a:	c3                   	ret    

0804990b <format_string>:
   auxiliary data AUX. */
static void
format_string (const char *string, int length,
               struct printf_conversion *c,
               void (*output) (char, void *), void *aux) 
{
 804990b:	55                   	push   %ebp
 804990c:	89 e5                	mov    %esp,%ebp
 804990e:	83 ec 28             	sub    $0x28,%esp
  int i;
  if (c->width > length && (c->flags & MINUS) == 0)
 8049911:	8b 45 10             	mov    0x10(%ebp),%eax
 8049914:	8b 40 04             	mov    0x4(%eax),%eax
 8049917:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804991a:	7e 33                	jle    804994f <format_string+0x44>
 804991c:	8b 45 10             	mov    0x10(%ebp),%eax
 804991f:	8b 00                	mov    (%eax),%eax
 8049921:	83 e0 01             	and    $0x1,%eax
 8049924:	85 c0                	test   %eax,%eax
 8049926:	75 27                	jne    804994f <format_string+0x44>
    output_dup (' ', c->width - length, output, aux);
 8049928:	8b 45 10             	mov    0x10(%ebp),%eax
 804992b:	8b 40 04             	mov    0x4(%eax),%eax
 804992e:	2b 45 0c             	sub    0xc(%ebp),%eax
 8049931:	8b 55 18             	mov    0x18(%ebp),%edx
 8049934:	89 54 24 0c          	mov    %edx,0xc(%esp)
 8049938:	8b 55 14             	mov    0x14(%ebp),%edx
 804993b:	89 54 24 08          	mov    %edx,0x8(%esp)
 804993f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049943:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 804994a:	e8 8a ff ff ff       	call   80498d9 <output_dup>
  for (i = 0; i < length; i++)
 804994f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049956:	eb 1f                	jmp    8049977 <format_string+0x6c>
    output (string[i], aux);
 8049958:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804995b:	03 45 08             	add    0x8(%ebp),%eax
 804995e:	0f b6 00             	movzbl (%eax),%eax
 8049961:	0f be c0             	movsbl %al,%eax
 8049964:	8b 55 18             	mov    0x18(%ebp),%edx
 8049967:	89 54 24 04          	mov    %edx,0x4(%esp)
 804996b:	89 04 24             	mov    %eax,(%esp)
 804996e:	8b 45 14             	mov    0x14(%ebp),%eax
 8049971:	ff d0                	call   *%eax
               void (*output) (char, void *), void *aux) 
{
  int i;
  if (c->width > length && (c->flags & MINUS) == 0)
    output_dup (' ', c->width - length, output, aux);
  for (i = 0; i < length; i++)
 8049973:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049977:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804997a:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804997d:	7c d9                	jl     8049958 <format_string+0x4d>
    output (string[i], aux);
  if (c->width > length && (c->flags & MINUS) != 0)
 804997f:	8b 45 10             	mov    0x10(%ebp),%eax
 8049982:	8b 40 04             	mov    0x4(%eax),%eax
 8049985:	3b 45 0c             	cmp    0xc(%ebp),%eax
 8049988:	7e 33                	jle    80499bd <format_string+0xb2>
 804998a:	8b 45 10             	mov    0x10(%ebp),%eax
 804998d:	8b 00                	mov    (%eax),%eax
 804998f:	83 e0 01             	and    $0x1,%eax
 8049992:	84 c0                	test   %al,%al
 8049994:	74 27                	je     80499bd <format_string+0xb2>
    output_dup (' ', c->width - length, output, aux);
 8049996:	8b 45 10             	mov    0x10(%ebp),%eax
 8049999:	8b 40 04             	mov    0x4(%eax),%eax
 804999c:	2b 45 0c             	sub    0xc(%ebp),%eax
 804999f:	8b 55 18             	mov    0x18(%ebp),%edx
 80499a2:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80499a6:	8b 55 14             	mov    0x14(%ebp),%edx
 80499a9:	89 54 24 08          	mov    %edx,0x8(%esp)
 80499ad:	89 44 24 04          	mov    %eax,0x4(%esp)
 80499b1:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 80499b8:	e8 1c ff ff ff       	call   80498d9 <output_dup>
}
 80499bd:	c9                   	leave  
 80499be:	c3                   	ret    

080499bf <__printf>:
/* Wrapper for __vprintf() that converts varargs into a
   va_list. */
void
__printf (const char *format,
          void (*output) (char, void *), void *aux, ...) 
{
 80499bf:	55                   	push   %ebp
 80499c0:	89 e5                	mov    %esp,%ebp
 80499c2:	83 ec 28             	sub    $0x28,%esp
  va_list args;

  va_start (args, aux);
 80499c5:	8d 45 14             	lea    0x14(%ebp),%eax
 80499c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
  __vprintf (format, args, output, aux);
 80499cb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80499ce:	8b 55 10             	mov    0x10(%ebp),%edx
 80499d1:	89 54 24 0c          	mov    %edx,0xc(%esp)
 80499d5:	8b 55 0c             	mov    0xc(%ebp),%edx
 80499d8:	89 54 24 08          	mov    %edx,0x8(%esp)
 80499dc:	89 44 24 04          	mov    %eax,0x4(%esp)
 80499e0:	8b 45 08             	mov    0x8(%ebp),%eax
 80499e3:	89 04 24             	mov    %eax,(%esp)
 80499e6:	e8 d1 f3 ff ff       	call   8048dbc <__vprintf>
  va_end (args);
}
 80499eb:	c9                   	leave  
 80499ec:	c3                   	ret    

080499ed <hex_dump>:
   starting at OFS for the first byte in BUF.  If ASCII is true
   then the corresponding ASCII characters are also rendered
   alongside. */   
void
hex_dump (uintptr_t ofs, const void *buf_, size_t size, bool ascii)
{
 80499ed:	55                   	push   %ebp
 80499ee:	89 e5                	mov    %esp,%ebp
 80499f0:	53                   	push   %ebx
 80499f1:	83 ec 44             	sub    $0x44,%esp
 80499f4:	8b 45 14             	mov    0x14(%ebp),%eax
 80499f7:	88 45 d4             	mov    %al,-0x2c(%ebp)
  const uint8_t *buf = buf_;
 80499fa:	8b 45 0c             	mov    0xc(%ebp),%eax
 80499fd:	89 45 e0             	mov    %eax,-0x20(%ebp)
  const size_t per_line = 16; /* Maximum bytes per line. */
 8049a00:	c7 45 e4 10 00 00 00 	movl   $0x10,-0x1c(%ebp)

  while (size > 0)
 8049a07:	e9 c1 01 00 00       	jmp    8049bcd <hex_dump+0x1e0>
    {
      size_t start, end, n;
      size_t i;
      
      /* Number of bytes on this line. */
      start = ofs % per_line;
 8049a0c:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a0f:	ba 00 00 00 00       	mov    $0x0,%edx
 8049a14:	f7 75 e4             	divl   -0x1c(%ebp)
 8049a17:	89 55 e8             	mov    %edx,-0x18(%ebp)
      end = per_line;
 8049a1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049a1d:	89 45 ec             	mov    %eax,-0x14(%ebp)
      if (end - start > size)
 8049a20:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049a23:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8049a26:	89 d1                	mov    %edx,%ecx
 8049a28:	29 c1                	sub    %eax,%ecx
 8049a2a:	89 c8                	mov    %ecx,%eax
 8049a2c:	3b 45 10             	cmp    0x10(%ebp),%eax
 8049a2f:	76 0c                	jbe    8049a3d <hex_dump+0x50>
        end = start + size;
 8049a31:	8b 45 10             	mov    0x10(%ebp),%eax
 8049a34:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8049a37:	8d 04 02             	lea    (%edx,%eax,1),%eax
 8049a3a:	89 45 ec             	mov    %eax,-0x14(%ebp)
      n = end - start;
 8049a3d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049a40:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8049a43:	89 d3                	mov    %edx,%ebx
 8049a45:	29 c3                	sub    %eax,%ebx
 8049a47:	89 d8                	mov    %ebx,%eax
 8049a49:	89 45 f0             	mov    %eax,-0x10(%ebp)

      /* Print line. */
      printf ("%08jx  ", (uintmax_t) ROUND_DOWN (ofs, per_line));
 8049a4c:	8b 45 08             	mov    0x8(%ebp),%eax
 8049a4f:	ba 00 00 00 00       	mov    $0x0,%edx
 8049a54:	f7 75 e4             	divl   -0x1c(%ebp)
 8049a57:	0f af 45 e4          	imul   -0x1c(%ebp),%eax
 8049a5b:	ba 00 00 00 00       	mov    $0x0,%edx
 8049a60:	89 44 24 04          	mov    %eax,0x4(%esp)
 8049a64:	89 54 24 08          	mov    %edx,0x8(%esp)
 8049a68:	c7 04 24 90 b3 04 08 	movl   $0x804b390,(%esp)
 8049a6f:	e8 22 f3 ff ff       	call   8048d96 <printf>
      for (i = 0; i < start; i++)
 8049a74:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049a7b:	eb 10                	jmp    8049a8d <hex_dump+0xa0>
        printf ("   ");
 8049a7d:	c7 04 24 98 b3 04 08 	movl   $0x804b398,(%esp)
 8049a84:	e8 0d f3 ff ff       	call   8048d96 <printf>
        end = start + size;
      n = end - start;

      /* Print line. */
      printf ("%08jx  ", (uintmax_t) ROUND_DOWN (ofs, per_line));
      for (i = 0; i < start; i++)
 8049a89:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049a8d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049a90:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 8049a93:	72 e8                	jb     8049a7d <hex_dump+0x90>
        printf ("   ");
      for (; i < end; i++) 
 8049a95:	eb 46                	jmp    8049add <hex_dump+0xf0>
        printf ("%02hhx%c",
                buf[i - start], i == per_line / 2 - 1? '-' : ' ');
 8049a97:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 8049a9a:	d1 e8                	shr    %eax
 8049a9c:	83 e8 01             	sub    $0x1,%eax
      /* Print line. */
      printf ("%08jx  ", (uintmax_t) ROUND_DOWN (ofs, per_line));
      for (i = 0; i < start; i++)
        printf ("   ");
      for (; i < end; i++) 
        printf ("%02hhx%c",
 8049a9f:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 8049aa2:	75 07                	jne    8049aab <hex_dump+0xbe>
 8049aa4:	b8 2d 00 00 00       	mov    $0x2d,%eax
 8049aa9:	eb 05                	jmp    8049ab0 <hex_dump+0xc3>
 8049aab:	b8 20 00 00 00       	mov    $0x20,%eax
                buf[i - start], i == per_line / 2 - 1? '-' : ' ');
 8049ab0:	8b 55 e8             	mov    -0x18(%ebp),%edx
 8049ab3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 8049ab6:	89 cb                	mov    %ecx,%ebx
 8049ab8:	29 d3                	sub    %edx,%ebx
 8049aba:	89 da                	mov    %ebx,%edx
 8049abc:	03 55 e0             	add    -0x20(%ebp),%edx
 8049abf:	0f b6 12             	movzbl (%edx),%edx
      /* Print line. */
      printf ("%08jx  ", (uintmax_t) ROUND_DOWN (ofs, per_line));
      for (i = 0; i < start; i++)
        printf ("   ");
      for (; i < end; i++) 
        printf ("%02hhx%c",
 8049ac2:	0f b6 d2             	movzbl %dl,%edx
 8049ac5:	89 44 24 08          	mov    %eax,0x8(%esp)
 8049ac9:	89 54 24 04          	mov    %edx,0x4(%esp)
 8049acd:	c7 04 24 9c b3 04 08 	movl   $0x804b39c,(%esp)
 8049ad4:	e8 bd f2 ff ff       	call   8048d96 <printf>

      /* Print line. */
      printf ("%08jx  ", (uintmax_t) ROUND_DOWN (ofs, per_line));
      for (i = 0; i < start; i++)
        printf ("   ");
      for (; i < end; i++) 
 8049ad9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049add:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049ae0:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 8049ae3:	72 b2                	jb     8049a97 <hex_dump+0xaa>
        printf ("%02hhx%c",
                buf[i - start], i == per_line / 2 - 1? '-' : ' ');
      if (ascii) 
 8049ae5:	80 7d d4 00          	cmpb   $0x0,-0x2c(%ebp)
 8049ae9:	0f 84 c0 00 00 00    	je     8049baf <hex_dump+0x1c2>
        {
          for (; i < per_line; i++)
 8049aef:	eb 10                	jmp    8049b01 <hex_dump+0x114>
            printf ("   ");
 8049af1:	c7 04 24 98 b3 04 08 	movl   $0x804b398,(%esp)
 8049af8:	e8 99 f2 ff ff       	call   8048d96 <printf>
      for (; i < end; i++) 
        printf ("%02hhx%c",
                buf[i - start], i == per_line / 2 - 1? '-' : ' ');
      if (ascii) 
        {
          for (; i < per_line; i++)
 8049afd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049b01:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049b04:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 8049b07:	72 e8                	jb     8049af1 <hex_dump+0x104>
            printf ("   ");
          printf ("|");
 8049b09:	c7 04 24 7c 00 00 00 	movl   $0x7c,(%esp)
 8049b10:	e8 55 12 00 00       	call   804ad6a <putchar>
          for (i = 0; i < start; i++)
 8049b15:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8049b1c:	eb 10                	jmp    8049b2e <hex_dump+0x141>
            printf (" ");
 8049b1e:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 8049b25:	e8 40 12 00 00       	call   804ad6a <putchar>
      if (ascii) 
        {
          for (; i < per_line; i++)
            printf ("   ");
          printf ("|");
          for (i = 0; i < start; i++)
 8049b2a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049b2e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049b31:	3b 45 e8             	cmp    -0x18(%ebp),%eax
 8049b34:	72 e8                	jb     8049b1e <hex_dump+0x131>
            printf (" ");
          for (; i < end; i++)
 8049b36:	eb 49                	jmp    8049b81 <hex_dump+0x194>
            printf ("%c",
                    isprint (buf[i - start]) ? buf[i - start] : '.');
 8049b38:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049b3b:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049b3e:	89 d1                	mov    %edx,%ecx
 8049b40:	29 c1                	sub    %eax,%ecx
 8049b42:	89 c8                	mov    %ecx,%eax
 8049b44:	03 45 e0             	add    -0x20(%ebp),%eax
 8049b47:	0f b6 00             	movzbl (%eax),%eax
 8049b4a:	0f b6 c0             	movzbl %al,%eax
 8049b4d:	89 04 24             	mov    %eax,(%esp)
 8049b50:	e8 50 f1 ff ff       	call   8048ca5 <isprint>
            printf ("   ");
          printf ("|");
          for (i = 0; i < start; i++)
            printf (" ");
          for (; i < end; i++)
            printf ("%c",
 8049b55:	85 c0                	test   %eax,%eax
 8049b57:	74 17                	je     8049b70 <hex_dump+0x183>
                    isprint (buf[i - start]) ? buf[i - start] : '.');
 8049b59:	8b 45 e8             	mov    -0x18(%ebp),%eax
 8049b5c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 8049b5f:	89 d3                	mov    %edx,%ebx
 8049b61:	29 c3                	sub    %eax,%ebx
 8049b63:	89 d8                	mov    %ebx,%eax
 8049b65:	03 45 e0             	add    -0x20(%ebp),%eax
 8049b68:	0f b6 00             	movzbl (%eax),%eax
            printf ("   ");
          printf ("|");
          for (i = 0; i < start; i++)
            printf (" ");
          for (; i < end; i++)
            printf ("%c",
 8049b6b:	0f b6 c0             	movzbl %al,%eax
 8049b6e:	eb 05                	jmp    8049b75 <hex_dump+0x188>
 8049b70:	b8 2e 00 00 00       	mov    $0x2e,%eax
 8049b75:	89 04 24             	mov    %eax,(%esp)
 8049b78:	e8 ed 11 00 00       	call   804ad6a <putchar>
          for (; i < per_line; i++)
            printf ("   ");
          printf ("|");
          for (i = 0; i < start; i++)
            printf (" ");
          for (; i < end; i++)
 8049b7d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049b81:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049b84:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 8049b87:	72 af                	jb     8049b38 <hex_dump+0x14b>
            printf ("%c",
                    isprint (buf[i - start]) ? buf[i - start] : '.');
          for (; i < per_line; i++)
 8049b89:	eb 10                	jmp    8049b9b <hex_dump+0x1ae>
            printf (" ");
 8049b8b:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
 8049b92:	e8 d3 11 00 00       	call   804ad6a <putchar>
          for (i = 0; i < start; i++)
            printf (" ");
          for (; i < end; i++)
            printf ("%c",
                    isprint (buf[i - start]) ? buf[i - start] : '.');
          for (; i < per_line; i++)
 8049b97:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049b9b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049b9e:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
 8049ba1:	72 e8                	jb     8049b8b <hex_dump+0x19e>
            printf (" ");
          printf ("|");
 8049ba3:	c7 04 24 7c 00 00 00 	movl   $0x7c,(%esp)
 8049baa:	e8 bb 11 00 00       	call   804ad6a <putchar>
        }
      printf ("\n");
 8049baf:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8049bb6:	e8 af 11 00 00       	call   804ad6a <putchar>

      ofs += n;
 8049bbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049bbe:	01 45 08             	add    %eax,0x8(%ebp)
      buf += n;
 8049bc1:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049bc4:	01 45 e0             	add    %eax,-0x20(%ebp)
      size -= n;
 8049bc7:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049bca:	29 45 10             	sub    %eax,0x10(%ebp)
hex_dump (uintptr_t ofs, const void *buf_, size_t size, bool ascii)
{
  const uint8_t *buf = buf_;
  const size_t per_line = 16; /* Maximum bytes per line. */

  while (size > 0)
 8049bcd:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049bd1:	0f 85 35 fe ff ff    	jne    8049a0c <hex_dump+0x1f>

      ofs += n;
      buf += n;
      size -= n;
    }
}
 8049bd7:	83 c4 44             	add    $0x44,%esp
 8049bda:	5b                   	pop    %ebx
 8049bdb:	5d                   	pop    %ebp
 8049bdc:	c3                   	ret    
 8049bdd:	90                   	nop
 8049bde:	90                   	nop
 8049bdf:	90                   	nop

08049be0 <memcpy>:
/* Copies SIZE bytes from SRC to DST, which must not overlap.
   Returns DST. */
void *
memcpy (void *dst_, const void *src_, size_t size) 
{
  unsigned char *dst = dst_;
 8049be0:	55                   	push   %ebp
 8049be1:	89 e5                	mov    %esp,%ebp
 8049be3:	83 ec 38             	sub    $0x38,%esp
 8049be6:	8b 45 08             	mov    0x8(%ebp),%eax
 8049be9:	89 45 f0             	mov    %eax,-0x10(%ebp)
  const unsigned char *src = src_;
 8049bec:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049bef:	89 45 f4             	mov    %eax,-0xc(%ebp)

  ASSERT (dst != NULL || size == 0);
 8049bf2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8049bf6:	75 32                	jne    8049c2a <memcpy+0x4a>
 8049bf8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049bfc:	74 2c                	je     8049c2a <memcpy+0x4a>
 8049bfe:	c7 44 24 10 af b3 04 	movl   $0x804b3af,0x10(%esp)
 8049c05:	08 
 8049c06:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049c0d:	08 
 8049c0e:	c7 44 24 08 08 b5 04 	movl   $0x804b508,0x8(%esp)
 8049c15:	08 
 8049c16:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)
 8049c1d:	00 
 8049c1e:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049c25:	e8 12 0e 00 00       	call   804aa3c <debug_panic>
  ASSERT (src != NULL || size == 0);
 8049c2a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8049c2e:	75 47                	jne    8049c77 <memcpy+0x97>
 8049c30:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049c34:	74 44                	je     8049c7a <memcpy+0x9a>
 8049c36:	c7 44 24 10 f2 b3 04 	movl   $0x804b3f2,0x10(%esp)
 8049c3d:	08 
 8049c3e:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049c45:	08 
 8049c46:	c7 44 24 08 08 b5 04 	movl   $0x804b508,0x8(%esp)
 8049c4d:	08 
 8049c4e:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)
 8049c55:	00 
 8049c56:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049c5d:	e8 da 0d 00 00       	call   804aa3c <debug_panic>

  while (size-- > 0)
    *dst++ = *src++;
 8049c62:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049c65:	0f b6 10             	movzbl (%eax),%edx
 8049c68:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049c6b:	88 10                	mov    %dl,(%eax)
 8049c6d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8049c71:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049c75:	eb 04                	jmp    8049c7b <memcpy+0x9b>
  const unsigned char *src = src_;

  ASSERT (dst != NULL || size == 0);
  ASSERT (src != NULL || size == 0);

  while (size-- > 0)
 8049c77:	90                   	nop
 8049c78:	eb 01                	jmp    8049c7b <memcpy+0x9b>
 8049c7a:	90                   	nop
 8049c7b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049c7f:	0f 95 c0             	setne  %al
 8049c82:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 8049c86:	84 c0                	test   %al,%al
 8049c88:	75 d8                	jne    8049c62 <memcpy+0x82>
    *dst++ = *src++;

  return dst_;
 8049c8a:	8b 45 08             	mov    0x8(%ebp),%eax
}
 8049c8d:	c9                   	leave  
 8049c8e:	c3                   	ret    

08049c8f <memmove>:
/* Copies SIZE bytes from SRC to DST, which are allowed to
   overlap.  Returns DST. */
void *
memmove (void *dst_, const void *src_, size_t size) 
{
  unsigned char *dst = dst_;
 8049c8f:	55                   	push   %ebp
 8049c90:	89 e5                	mov    %esp,%ebp
 8049c92:	83 ec 38             	sub    $0x38,%esp
 8049c95:	8b 45 08             	mov    0x8(%ebp),%eax
 8049c98:	89 45 f0             	mov    %eax,-0x10(%ebp)
  const unsigned char *src = src_;
 8049c9b:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049c9e:	89 45 f4             	mov    %eax,-0xc(%ebp)

  ASSERT (dst != NULL || size == 0);
 8049ca1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8049ca5:	75 32                	jne    8049cd9 <memmove+0x4a>
 8049ca7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049cab:	74 2c                	je     8049cd9 <memmove+0x4a>
 8049cad:	c7 44 24 10 af b3 04 	movl   $0x804b3af,0x10(%esp)
 8049cb4:	08 
 8049cb5:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049cbc:	08 
 8049cbd:	c7 44 24 08 00 b5 04 	movl   $0x804b500,0x8(%esp)
 8049cc4:	08 
 8049cc5:	c7 44 24 04 1d 00 00 	movl   $0x1d,0x4(%esp)
 8049ccc:	00 
 8049ccd:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049cd4:	e8 63 0d 00 00       	call   804aa3c <debug_panic>
  ASSERT (src != NULL || size == 0);
 8049cd9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8049cdd:	75 32                	jne    8049d11 <memmove+0x82>
 8049cdf:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049ce3:	74 2c                	je     8049d11 <memmove+0x82>
 8049ce5:	c7 44 24 10 f2 b3 04 	movl   $0x804b3f2,0x10(%esp)
 8049cec:	08 
 8049ced:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049cf4:	08 
 8049cf5:	c7 44 24 08 00 b5 04 	movl   $0x804b500,0x8(%esp)
 8049cfc:	08 
 8049cfd:	c7 44 24 04 1e 00 00 	movl   $0x1e,0x4(%esp)
 8049d04:	00 
 8049d05:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049d0c:	e8 2b 0d 00 00       	call   804aa3c <debug_panic>

  if (dst < src) 
 8049d11:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049d14:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 8049d17:	73 26                	jae    8049d3f <memmove+0xb0>
    {
      while (size-- > 0)
 8049d19:	eb 13                	jmp    8049d2e <memmove+0x9f>
        *dst++ = *src++;
 8049d1b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049d1e:	0f b6 10             	movzbl (%eax),%edx
 8049d21:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049d24:	88 10                	mov    %dl,(%eax)
 8049d26:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8049d2a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  ASSERT (dst != NULL || size == 0);
  ASSERT (src != NULL || size == 0);

  if (dst < src) 
    {
      while (size-- > 0)
 8049d2e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049d32:	0f 95 c0             	setne  %al
 8049d35:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 8049d39:	84 c0                	test   %al,%al
 8049d3b:	75 de                	jne    8049d1b <memmove+0x8c>
 8049d3d:	eb 30                	jmp    8049d6f <memmove+0xe0>
        *dst++ = *src++;
    }
  else 
    {
      dst += size;
 8049d3f:	8b 45 10             	mov    0x10(%ebp),%eax
 8049d42:	01 45 f0             	add    %eax,-0x10(%ebp)
      src += size;
 8049d45:	8b 45 10             	mov    0x10(%ebp),%eax
 8049d48:	01 45 f4             	add    %eax,-0xc(%ebp)
      while (size-- > 0)
 8049d4b:	eb 13                	jmp    8049d60 <memmove+0xd1>
        *--dst = *--src;
 8049d4d:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
 8049d51:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
 8049d55:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049d58:	0f b6 10             	movzbl (%eax),%edx
 8049d5b:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049d5e:	88 10                	mov    %dl,(%eax)
    }
  else 
    {
      dst += size;
      src += size;
      while (size-- > 0)
 8049d60:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049d64:	0f 95 c0             	setne  %al
 8049d67:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 8049d6b:	84 c0                	test   %al,%al
 8049d6d:	75 de                	jne    8049d4d <memmove+0xbe>
        *--dst = *--src;
    }

  return dst;
 8049d6f:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
 8049d72:	c9                   	leave  
 8049d73:	c3                   	ret    

08049d74 <memcmp>:
   greater, a negative value if the byte in B is greater, or zero
   if blocks A and B are equal. */
int
memcmp (const void *a_, const void *b_, size_t size) 
{
  const unsigned char *a = a_;
 8049d74:	55                   	push   %ebp
 8049d75:	89 e5                	mov    %esp,%ebp
 8049d77:	83 ec 38             	sub    $0x38,%esp
 8049d7a:	8b 45 08             	mov    0x8(%ebp),%eax
 8049d7d:	89 45 f0             	mov    %eax,-0x10(%ebp)
  const unsigned char *b = b_;
 8049d80:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049d83:	89 45 f4             	mov    %eax,-0xc(%ebp)

  ASSERT (a != NULL || size == 0);
 8049d86:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8049d8a:	75 32                	jne    8049dbe <memcmp+0x4a>
 8049d8c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049d90:	74 2c                	je     8049dbe <memcmp+0x4a>
 8049d92:	c7 44 24 10 0b b4 04 	movl   $0x804b40b,0x10(%esp)
 8049d99:	08 
 8049d9a:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049da1:	08 
 8049da2:	c7 44 24 08 f9 b4 04 	movl   $0x804b4f9,0x8(%esp)
 8049da9:	08 
 8049daa:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)
 8049db1:	00 
 8049db2:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049db9:	e8 7e 0c 00 00       	call   804aa3c <debug_panic>
  ASSERT (b != NULL || size == 0);
 8049dbe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8049dc2:	75 6a                	jne    8049e2e <memcmp+0xba>
 8049dc4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049dc8:	74 67                	je     8049e31 <memcmp+0xbd>
 8049dca:	c7 44 24 10 22 b4 04 	movl   $0x804b422,0x10(%esp)
 8049dd1:	08 
 8049dd2:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049dd9:	08 
 8049dda:	c7 44 24 08 f9 b4 04 	movl   $0x804b4f9,0x8(%esp)
 8049de1:	08 
 8049de2:	c7 44 24 04 3b 00 00 	movl   $0x3b,0x4(%esp)
 8049de9:	00 
 8049dea:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049df1:	e8 46 0c 00 00       	call   804aa3c <debug_panic>

  for (; size-- > 0; a++, b++)
    if (*a != *b)
 8049df6:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049df9:	0f b6 10             	movzbl (%eax),%edx
 8049dfc:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049dff:	0f b6 00             	movzbl (%eax),%eax
 8049e02:	38 c2                	cmp    %al,%dl
 8049e04:	74 1e                	je     8049e24 <memcmp+0xb0>
      return *a > *b ? +1 : -1;
 8049e06:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049e09:	0f b6 10             	movzbl (%eax),%edx
 8049e0c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049e0f:	0f b6 00             	movzbl (%eax),%eax
 8049e12:	38 c2                	cmp    %al,%dl
 8049e14:	76 07                	jbe    8049e1d <memcmp+0xa9>
 8049e16:	b8 01 00 00 00       	mov    $0x1,%eax
 8049e1b:	eb 05                	jmp    8049e22 <memcmp+0xae>
 8049e1d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 8049e22:	eb 22                	jmp    8049e46 <memcmp+0xd2>
  const unsigned char *b = b_;

  ASSERT (a != NULL || size == 0);
  ASSERT (b != NULL || size == 0);

  for (; size-- > 0; a++, b++)
 8049e24:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8049e28:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049e2c:	eb 04                	jmp    8049e32 <memcmp+0xbe>
 8049e2e:	90                   	nop
 8049e2f:	eb 01                	jmp    8049e32 <memcmp+0xbe>
 8049e31:	90                   	nop
 8049e32:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049e36:	0f 95 c0             	setne  %al
 8049e39:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 8049e3d:	84 c0                	test   %al,%al
 8049e3f:	75 b5                	jne    8049df6 <memcmp+0x82>
    if (*a != *b)
      return *a > *b ? +1 : -1;
  return 0;
 8049e41:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8049e46:	c9                   	leave  
 8049e47:	c3                   	ret    

08049e48 <strcmp>:
   an unsigned char) is greater, or zero if strings A and B are
   equal. */
int
strcmp (const char *a_, const char *b_) 
{
  const unsigned char *a = (const unsigned char *) a_;
 8049e48:	55                   	push   %ebp
 8049e49:	89 e5                	mov    %esp,%ebp
 8049e4b:	83 ec 38             	sub    $0x38,%esp
 8049e4e:	8b 45 08             	mov    0x8(%ebp),%eax
 8049e51:	89 45 f0             	mov    %eax,-0x10(%ebp)
  const unsigned char *b = (const unsigned char *) b_;
 8049e54:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049e57:	89 45 f4             	mov    %eax,-0xc(%ebp)

  ASSERT (a != NULL);
 8049e5a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8049e5e:	74 08                	je     8049e68 <strcmp+0x20>
  ASSERT (b != NULL);
 8049e60:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 8049e64:	75 64                	jne    8049eca <strcmp+0x82>
 8049e66:	eb 2c                	jmp    8049e94 <strcmp+0x4c>
strcmp (const char *a_, const char *b_) 
{
  const unsigned char *a = (const unsigned char *) a_;
  const unsigned char *b = (const unsigned char *) b_;

  ASSERT (a != NULL);
 8049e68:	c7 44 24 10 39 b4 04 	movl   $0x804b439,0x10(%esp)
 8049e6f:	08 
 8049e70:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049e77:	08 
 8049e78:	c7 44 24 08 f2 b4 04 	movl   $0x804b4f2,0x8(%esp)
 8049e7f:	08 
 8049e80:	c7 44 24 04 4e 00 00 	movl   $0x4e,0x4(%esp)
 8049e87:	00 
 8049e88:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049e8f:	e8 a8 0b 00 00       	call   804aa3c <debug_panic>
  ASSERT (b != NULL);
 8049e94:	c7 44 24 10 43 b4 04 	movl   $0x804b443,0x10(%esp)
 8049e9b:	08 
 8049e9c:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049ea3:	08 
 8049ea4:	c7 44 24 08 f2 b4 04 	movl   $0x804b4f2,0x8(%esp)
 8049eab:	08 
 8049eac:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)
 8049eb3:	00 
 8049eb4:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049ebb:	e8 7c 0b 00 00       	call   804aa3c <debug_panic>

  while (*a != '\0' && *a == *b) 
    {
      a++;
 8049ec0:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
      b++;
 8049ec4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8049ec8:	eb 01                	jmp    8049ecb <strcmp+0x83>
  const unsigned char *b = (const unsigned char *) b_;

  ASSERT (a != NULL);
  ASSERT (b != NULL);

  while (*a != '\0' && *a == *b) 
 8049eca:	90                   	nop
 8049ecb:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049ece:	0f b6 00             	movzbl (%eax),%eax
 8049ed1:	84 c0                	test   %al,%al
 8049ed3:	74 10                	je     8049ee5 <strcmp+0x9d>
 8049ed5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049ed8:	0f b6 10             	movzbl (%eax),%edx
 8049edb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049ede:	0f b6 00             	movzbl (%eax),%eax
 8049ee1:	38 c2                	cmp    %al,%dl
 8049ee3:	74 db                	je     8049ec0 <strcmp+0x78>
    {
      a++;
      b++;
    }

  return *a < *b ? -1 : *a > *b;
 8049ee5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049ee8:	0f b6 10             	movzbl (%eax),%edx
 8049eeb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049eee:	0f b6 00             	movzbl (%eax),%eax
 8049ef1:	38 c2                	cmp    %al,%dl
 8049ef3:	72 16                	jb     8049f0b <strcmp+0xc3>
 8049ef5:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049ef8:	0f b6 10             	movzbl (%eax),%edx
 8049efb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8049efe:	0f b6 00             	movzbl (%eax),%eax
 8049f01:	38 c2                	cmp    %al,%dl
 8049f03:	0f 97 c0             	seta   %al
 8049f06:	0f b6 c0             	movzbl %al,%eax
 8049f09:	eb 05                	jmp    8049f10 <strcmp+0xc8>
 8049f0b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
}
 8049f10:	c9                   	leave  
 8049f11:	c3                   	ret    

08049f12 <memchr>:
   SIZE bytes starting at BLOCK.  Returns a null pointer if CH
   does not occur in BLOCK. */
void *
memchr (const void *block_, int ch_, size_t size) 
{
  const unsigned char *block = block_;
 8049f12:	55                   	push   %ebp
 8049f13:	89 e5                	mov    %esp,%ebp
 8049f15:	83 ec 38             	sub    $0x38,%esp
 8049f18:	8b 45 08             	mov    0x8(%ebp),%eax
 8049f1b:	89 45 f0             	mov    %eax,-0x10(%ebp)
  unsigned char ch = ch_;
 8049f1e:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049f21:	88 45 f7             	mov    %al,-0x9(%ebp)

  ASSERT (block != NULL || size == 0);
 8049f24:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
 8049f28:	75 48                	jne    8049f72 <memchr+0x60>
 8049f2a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049f2e:	74 45                	je     8049f75 <memchr+0x63>
 8049f30:	c7 44 24 10 4d b4 04 	movl   $0x804b44d,0x10(%esp)
 8049f37:	08 
 8049f38:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049f3f:	08 
 8049f40:	c7 44 24 08 eb b4 04 	movl   $0x804b4eb,0x8(%esp)
 8049f47:	08 
 8049f48:	c7 44 24 04 63 00 00 	movl   $0x63,0x4(%esp)
 8049f4f:	00 
 8049f50:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049f57:	e8 e0 0a 00 00       	call   804aa3c <debug_panic>

  for (; size-- > 0; block++)
    if (*block == ch)
 8049f5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049f5f:	0f b6 00             	movzbl (%eax),%eax
 8049f62:	3a 45 f7             	cmp    -0x9(%ebp),%al
 8049f65:	75 05                	jne    8049f6c <memchr+0x5a>
      return (void *) block;
 8049f67:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8049f6a:	eb 1e                	jmp    8049f8a <memchr+0x78>
  const unsigned char *block = block_;
  unsigned char ch = ch_;

  ASSERT (block != NULL || size == 0);

  for (; size-- > 0; block++)
 8049f6c:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 8049f70:	eb 04                	jmp    8049f76 <memchr+0x64>
 8049f72:	90                   	nop
 8049f73:	eb 01                	jmp    8049f76 <memchr+0x64>
 8049f75:	90                   	nop
 8049f76:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 8049f7a:	0f 95 c0             	setne  %al
 8049f7d:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 8049f81:	84 c0                	test   %al,%al
 8049f83:	75 d7                	jne    8049f5c <memchr+0x4a>
    if (*block == ch)
      return (void *) block;

  return NULL;
 8049f85:	b8 00 00 00 00       	mov    $0x0,%eax
}
 8049f8a:	c9                   	leave  
 8049f8b:	c3                   	ret    

08049f8c <strchr>:
   then returns a pointer to the null terminator at the end of
   STRING. */
char *
strchr (const char *string, int c_) 
{
  char c = c_;
 8049f8c:	55                   	push   %ebp
 8049f8d:	89 e5                	mov    %esp,%ebp
 8049f8f:	83 ec 38             	sub    $0x38,%esp
 8049f92:	8b 45 0c             	mov    0xc(%ebp),%eax
 8049f95:	88 45 f7             	mov    %al,-0x9(%ebp)

  ASSERT (string != NULL);
 8049f98:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 8049f9c:	75 2c                	jne    8049fca <strchr+0x3e>
 8049f9e:	c7 44 24 10 68 b4 04 	movl   $0x804b468,0x10(%esp)
 8049fa5:	08 
 8049fa6:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 8049fad:	08 
 8049fae:	c7 44 24 08 e4 b4 04 	movl   $0x804b4e4,0x8(%esp)
 8049fb5:	08 
 8049fb6:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)
 8049fbd:	00 
 8049fbe:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 8049fc5:	e8 72 0a 00 00       	call   804aa3c <debug_panic>

  for (;;) 
    if (*string == c)
 8049fca:	8b 45 08             	mov    0x8(%ebp),%eax
 8049fcd:	0f b6 00             	movzbl (%eax),%eax
 8049fd0:	3a 45 f7             	cmp    -0x9(%ebp),%al
 8049fd3:	75 05                	jne    8049fda <strchr+0x4e>
      return (char *) string;
 8049fd5:	8b 45 08             	mov    0x8(%ebp),%eax
 8049fd8:	eb 17                	jmp    8049ff1 <strchr+0x65>
    else if (*string == '\0')
 8049fda:	8b 45 08             	mov    0x8(%ebp),%eax
 8049fdd:	0f b6 00             	movzbl (%eax),%eax
 8049fe0:	84 c0                	test   %al,%al
 8049fe2:	75 07                	jne    8049feb <strchr+0x5f>
      return NULL;
 8049fe4:	b8 00 00 00 00       	mov    $0x0,%eax
 8049fe9:	eb 06                	jmp    8049ff1 <strchr+0x65>
    else
      string++;
 8049feb:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 8049fef:	eb d9                	jmp    8049fca <strchr+0x3e>
}
 8049ff1:	c9                   	leave  
 8049ff2:	c3                   	ret    

08049ff3 <strcspn>:
size_t
strcspn (const char *string, const char *stop) 
{
  size_t length;

  for (length = 0; string[length] != '\0'; length++)
 8049ff3:	55                   	push   %ebp
 8049ff4:	89 e5                	mov    %esp,%ebp
 8049ff6:	83 ec 28             	sub    $0x28,%esp
 8049ff9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a000:	eb 26                	jmp    804a028 <strcspn+0x35>
    if (strchr (stop, string[length]) != NULL)
 804a002:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a005:	8b 55 08             	mov    0x8(%ebp),%edx
 804a008:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a00b:	0f b6 00             	movzbl (%eax),%eax
 804a00e:	0f be c0             	movsbl %al,%eax
 804a011:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a015:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a018:	89 04 24             	mov    %eax,(%esp)
 804a01b:	e8 6c ff ff ff       	call   8049f8c <strchr>
 804a020:	85 c0                	test   %eax,%eax
 804a022:	75 16                	jne    804a03a <strcspn+0x47>
size_t
strcspn (const char *string, const char *stop) 
{
  size_t length;

  for (length = 0; string[length] != '\0'; length++)
 804a024:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a028:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a02b:	8b 55 08             	mov    0x8(%ebp),%edx
 804a02e:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a031:	0f b6 00             	movzbl (%eax),%eax
 804a034:	84 c0                	test   %al,%al
 804a036:	75 ca                	jne    804a002 <strcspn+0xf>
 804a038:	eb 01                	jmp    804a03b <strcspn+0x48>
    if (strchr (stop, string[length]) != NULL)
      break;
 804a03a:	90                   	nop
  return length;
 804a03b:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
 804a03e:	c9                   	leave  
 804a03f:	c3                   	ret    

0804a040 <strpbrk>:
   also in STOP.  If no character in STRING is in STOP, returns a
   null pointer. */
char *
strpbrk (const char *string, const char *stop) 
{
  for (; *string != '\0'; string++)
 804a040:	55                   	push   %ebp
 804a041:	89 e5                	mov    %esp,%ebp
 804a043:	83 ec 18             	sub    $0x18,%esp
 804a046:	eb 25                	jmp    804a06d <strpbrk+0x2d>
    if (strchr (stop, *string) != NULL)
 804a048:	8b 45 08             	mov    0x8(%ebp),%eax
 804a04b:	0f b6 00             	movzbl (%eax),%eax
 804a04e:	0f be c0             	movsbl %al,%eax
 804a051:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a055:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a058:	89 04 24             	mov    %eax,(%esp)
 804a05b:	e8 2c ff ff ff       	call   8049f8c <strchr>
 804a060:	85 c0                	test   %eax,%eax
 804a062:	74 05                	je     804a069 <strpbrk+0x29>
      return (char *) string;
 804a064:	8b 45 08             	mov    0x8(%ebp),%eax
 804a067:	eb 13                	jmp    804a07c <strpbrk+0x3c>
   also in STOP.  If no character in STRING is in STOP, returns a
   null pointer. */
char *
strpbrk (const char *string, const char *stop) 
{
  for (; *string != '\0'; string++)
 804a069:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 804a06d:	8b 45 08             	mov    0x8(%ebp),%eax
 804a070:	0f b6 00             	movzbl (%eax),%eax
 804a073:	84 c0                	test   %al,%al
 804a075:	75 d1                	jne    804a048 <strpbrk+0x8>
    if (strchr (stop, *string) != NULL)
      return (char *) string;
  return NULL;
 804a077:	b8 00 00 00 00       	mov    $0x0,%eax
}
 804a07c:	c9                   	leave  
 804a07d:	c3                   	ret    

0804a07e <strrchr>:
/* Returns a pointer to the last occurrence of C in STRING.
   Returns a null pointer if C does not occur in STRING. */
char *
strrchr (const char *string, int c_) 
{
  char c = c_;
 804a07e:	55                   	push   %ebp
 804a07f:	89 e5                	mov    %esp,%ebp
 804a081:	83 ec 10             	sub    $0x10,%esp
 804a084:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a087:	88 45 fb             	mov    %al,-0x5(%ebp)
  const char *p = NULL;
 804a08a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)

  for (; *string != '\0'; string++)
 804a091:	eb 15                	jmp    804a0a8 <strrchr+0x2a>
    if (*string == c)
 804a093:	8b 45 08             	mov    0x8(%ebp),%eax
 804a096:	0f b6 00             	movzbl (%eax),%eax
 804a099:	3a 45 fb             	cmp    -0x5(%ebp),%al
 804a09c:	75 06                	jne    804a0a4 <strrchr+0x26>
      p = string;
 804a09e:	8b 45 08             	mov    0x8(%ebp),%eax
 804a0a1:	89 45 fc             	mov    %eax,-0x4(%ebp)
strrchr (const char *string, int c_) 
{
  char c = c_;
  const char *p = NULL;

  for (; *string != '\0'; string++)
 804a0a4:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 804a0a8:	8b 45 08             	mov    0x8(%ebp),%eax
 804a0ab:	0f b6 00             	movzbl (%eax),%eax
 804a0ae:	84 c0                	test   %al,%al
 804a0b0:	75 e1                	jne    804a093 <strrchr+0x15>
    if (*string == c)
      p = string;
  return (char *) p;
 804a0b2:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804a0b5:	c9                   	leave  
 804a0b6:	c3                   	ret    

0804a0b7 <strspn>:
size_t
strspn (const char *string, const char *skip) 
{
  size_t length;
  
  for (length = 0; string[length] != '\0'; length++)
 804a0b7:	55                   	push   %ebp
 804a0b8:	89 e5                	mov    %esp,%ebp
 804a0ba:	83 ec 28             	sub    $0x28,%esp
 804a0bd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a0c4:	eb 26                	jmp    804a0ec <strspn+0x35>
    if (strchr (skip, string[length]) == NULL)
 804a0c6:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a0c9:	8b 55 08             	mov    0x8(%ebp),%edx
 804a0cc:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a0cf:	0f b6 00             	movzbl (%eax),%eax
 804a0d2:	0f be c0             	movsbl %al,%eax
 804a0d5:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a0d9:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a0dc:	89 04 24             	mov    %eax,(%esp)
 804a0df:	e8 a8 fe ff ff       	call   8049f8c <strchr>
 804a0e4:	85 c0                	test   %eax,%eax
 804a0e6:	74 16                	je     804a0fe <strspn+0x47>
size_t
strspn (const char *string, const char *skip) 
{
  size_t length;
  
  for (length = 0; string[length] != '\0'; length++)
 804a0e8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a0ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a0ef:	8b 55 08             	mov    0x8(%ebp),%edx
 804a0f2:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a0f5:	0f b6 00             	movzbl (%eax),%eax
 804a0f8:	84 c0                	test   %al,%al
 804a0fa:	75 ca                	jne    804a0c6 <strspn+0xf>
 804a0fc:	eb 01                	jmp    804a0ff <strspn+0x48>
    if (strchr (skip, string[length]) == NULL)
      break;
 804a0fe:	90                   	nop
  return length;
 804a0ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
 804a102:	c9                   	leave  
 804a103:	c3                   	ret    

0804a104 <strstr>:
   HAYSTACK.  Returns a null pointer if NEEDLE does not exist
   within HAYSTACK. */
char *
strstr (const char *haystack, const char *needle) 
{
  size_t haystack_len = strlen (haystack);
 804a104:	55                   	push   %ebp
 804a105:	89 e5                	mov    %esp,%ebp
 804a107:	83 ec 28             	sub    $0x28,%esp
 804a10a:	8b 45 08             	mov    0x8(%ebp),%eax
 804a10d:	89 04 24             	mov    %eax,(%esp)
 804a110:	e8 13 02 00 00       	call   804a328 <strlen>
 804a115:	89 45 ec             	mov    %eax,-0x14(%ebp)
  size_t needle_len = strlen (needle);
 804a118:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a11b:	89 04 24             	mov    %eax,(%esp)
 804a11e:	e8 05 02 00 00       	call   804a328 <strlen>
 804a123:	89 45 f0             	mov    %eax,-0x10(%ebp)

  if (haystack_len >= needle_len) 
 804a126:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a129:	3b 45 f0             	cmp    -0x10(%ebp),%eax
 804a12c:	72 4b                	jb     804a179 <strstr+0x75>
    {
      size_t i;

      for (i = 0; i <= haystack_len - needle_len; i++)
 804a12e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 804a135:	eb 31                	jmp    804a168 <strstr+0x64>
        if (!memcmp (haystack + i, needle, needle_len))
 804a137:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a13a:	8b 55 08             	mov    0x8(%ebp),%edx
 804a13d:	01 c2                	add    %eax,%edx
 804a13f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a142:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a146:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a149:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a14d:	89 14 24             	mov    %edx,(%esp)
 804a150:	e8 1f fc ff ff       	call   8049d74 <memcmp>
 804a155:	85 c0                	test   %eax,%eax
 804a157:	75 0b                	jne    804a164 <strstr+0x60>
          return (char *) haystack + i;
 804a159:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a15c:	8b 55 08             	mov    0x8(%ebp),%edx
 804a15f:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a162:	eb 1a                	jmp    804a17e <strstr+0x7a>

  if (haystack_len >= needle_len) 
    {
      size_t i;

      for (i = 0; i <= haystack_len - needle_len; i++)
 804a164:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a168:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a16b:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a16e:	89 d1                	mov    %edx,%ecx
 804a170:	29 c1                	sub    %eax,%ecx
 804a172:	89 c8                	mov    %ecx,%eax
 804a174:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a177:	73 be                	jae    804a137 <strstr+0x33>
        if (!memcmp (haystack + i, needle, needle_len))
          return (char *) haystack + i;
    }

  return NULL;
 804a179:	b8 00 00 00 00       	mov    $0x0,%eax
}
 804a17e:	c9                   	leave  
 804a17f:	c3                   	ret    

0804a180 <strtok_r>:
     'to'
     'tokenize.'
*/
char *
strtok_r (char *s, const char *delimiters, char **save_ptr) 
{
 804a180:	55                   	push   %ebp
 804a181:	89 e5                	mov    %esp,%ebp
 804a183:	83 ec 38             	sub    $0x38,%esp
  char *token;
  
  ASSERT (delimiters != NULL);
 804a186:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804a18a:	74 08                	je     804a194 <strtok_r+0x14>
  ASSERT (save_ptr != NULL);
 804a18c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804a190:	75 2e                	jne    804a1c0 <strtok_r+0x40>
 804a192:	eb 34                	jmp    804a1c8 <strtok_r+0x48>
char *
strtok_r (char *s, const char *delimiters, char **save_ptr) 
{
  char *token;
  
  ASSERT (delimiters != NULL);
 804a194:	c7 44 24 10 77 b4 04 	movl   $0x804b477,0x10(%esp)
 804a19b:	08 
 804a19c:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a1a3:	08 
 804a1a4:	c7 44 24 08 db b4 04 	movl   $0x804b4db,0x8(%esp)
 804a1ab:	08 
 804a1ac:	c7 44 24 04 ef 00 00 	movl   $0xef,0x4(%esp)
 804a1b3:	00 
 804a1b4:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a1bb:	e8 7c 08 00 00       	call   804aa3c <debug_panic>
  ASSERT (save_ptr != NULL);

  /* If S is nonnull, start from it.
     If S is null, start from saved position. */
  if (s == NULL)
 804a1c0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804a1c4:	74 2e                	je     804a1f4 <strtok_r+0x74>
 804a1c6:	eb 34                	jmp    804a1fc <strtok_r+0x7c>
strtok_r (char *s, const char *delimiters, char **save_ptr) 
{
  char *token;
  
  ASSERT (delimiters != NULL);
  ASSERT (save_ptr != NULL);
 804a1c8:	c7 44 24 10 8a b4 04 	movl   $0x804b48a,0x10(%esp)
 804a1cf:	08 
 804a1d0:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a1d7:	08 
 804a1d8:	c7 44 24 08 db b4 04 	movl   $0x804b4db,0x8(%esp)
 804a1df:	08 
 804a1e0:	c7 44 24 04 f0 00 00 	movl   $0xf0,0x4(%esp)
 804a1e7:	00 
 804a1e8:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a1ef:	e8 48 08 00 00       	call   804aa3c <debug_panic>

  /* If S is nonnull, start from it.
     If S is null, start from saved position. */
  if (s == NULL)
    s = *save_ptr;
 804a1f4:	8b 45 10             	mov    0x10(%ebp),%eax
 804a1f7:	8b 00                	mov    (%eax),%eax
 804a1f9:	89 45 08             	mov    %eax,0x8(%ebp)
  ASSERT (s != NULL);
 804a1fc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804a200:	75 4b                	jne    804a24d <strtok_r+0xcd>
 804a202:	c7 44 24 10 9b b4 04 	movl   $0x804b49b,0x10(%esp)
 804a209:	08 
 804a20a:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a211:	08 
 804a212:	c7 44 24 08 db b4 04 	movl   $0x804b4db,0x8(%esp)
 804a219:	08 
 804a21a:	c7 44 24 04 f6 00 00 	movl   $0xf6,0x4(%esp)
 804a221:	00 
 804a222:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a229:	e8 0e 08 00 00       	call   804aa3c <debug_panic>
  while (strchr (delimiters, *s) != NULL) 
    {
      /* strchr() will always return nonnull if we're searching
         for a null byte, because every string contains a null
         byte (at the end). */
      if (*s == '\0')
 804a22e:	8b 45 08             	mov    0x8(%ebp),%eax
 804a231:	0f b6 00             	movzbl (%eax),%eax
 804a234:	84 c0                	test   %al,%al
 804a236:	75 0f                	jne    804a247 <strtok_r+0xc7>
        {
          *save_ptr = s;
 804a238:	8b 45 10             	mov    0x10(%ebp),%eax
 804a23b:	8b 55 08             	mov    0x8(%ebp),%edx
 804a23e:	89 10                	mov    %edx,(%eax)
          return NULL;
 804a240:	b8 00 00 00 00       	mov    $0x0,%eax
 804a245:	eb 73                	jmp    804a2ba <strtok_r+0x13a>
        }

      s++;
 804a247:	83 45 08 01          	addl   $0x1,0x8(%ebp)
 804a24b:	eb 01                	jmp    804a24e <strtok_r+0xce>
  if (s == NULL)
    s = *save_ptr;
  ASSERT (s != NULL);

  /* Skip any DELIMITERS at our current position. */
  while (strchr (delimiters, *s) != NULL) 
 804a24d:	90                   	nop
 804a24e:	8b 45 08             	mov    0x8(%ebp),%eax
 804a251:	0f b6 00             	movzbl (%eax),%eax
 804a254:	0f be c0             	movsbl %al,%eax
 804a257:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a25b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a25e:	89 04 24             	mov    %eax,(%esp)
 804a261:	e8 26 fd ff ff       	call   8049f8c <strchr>
 804a266:	85 c0                	test   %eax,%eax
 804a268:	75 c4                	jne    804a22e <strtok_r+0xae>

      s++;
    }

  /* Skip any non-DELIMITERS up to the end of the string. */
  token = s;
 804a26a:	8b 45 08             	mov    0x8(%ebp),%eax
 804a26d:	89 45 f4             	mov    %eax,-0xc(%ebp)
  while (strchr (delimiters, *s) == NULL)
 804a270:	eb 04                	jmp    804a276 <strtok_r+0xf6>
    s++;
 804a272:	83 45 08 01          	addl   $0x1,0x8(%ebp)
      s++;
    }

  /* Skip any non-DELIMITERS up to the end of the string. */
  token = s;
  while (strchr (delimiters, *s) == NULL)
 804a276:	8b 45 08             	mov    0x8(%ebp),%eax
 804a279:	0f b6 00             	movzbl (%eax),%eax
 804a27c:	0f be c0             	movsbl %al,%eax
 804a27f:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a283:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a286:	89 04 24             	mov    %eax,(%esp)
 804a289:	e8 fe fc ff ff       	call   8049f8c <strchr>
 804a28e:	85 c0                	test   %eax,%eax
 804a290:	74 e0                	je     804a272 <strtok_r+0xf2>
    s++;
  if (*s != '\0') 
 804a292:	8b 45 08             	mov    0x8(%ebp),%eax
 804a295:	0f b6 00             	movzbl (%eax),%eax
 804a298:	84 c0                	test   %al,%al
 804a29a:	74 13                	je     804a2af <strtok_r+0x12f>
    {
      *s = '\0';
 804a29c:	8b 45 08             	mov    0x8(%ebp),%eax
 804a29f:	c6 00 00             	movb   $0x0,(%eax)
      *save_ptr = s + 1;
 804a2a2:	8b 45 08             	mov    0x8(%ebp),%eax
 804a2a5:	8d 50 01             	lea    0x1(%eax),%edx
 804a2a8:	8b 45 10             	mov    0x10(%ebp),%eax
 804a2ab:	89 10                	mov    %edx,(%eax)
 804a2ad:	eb 08                	jmp    804a2b7 <strtok_r+0x137>
    }
  else 
    *save_ptr = s;
 804a2af:	8b 45 10             	mov    0x10(%ebp),%eax
 804a2b2:	8b 55 08             	mov    0x8(%ebp),%edx
 804a2b5:	89 10                	mov    %edx,(%eax)
  return token;
 804a2b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
 804a2ba:	c9                   	leave  
 804a2bb:	c3                   	ret    

0804a2bc <memset>:

/* Sets the SIZE bytes in DST to VALUE. */
void *
memset (void *dst_, int value, size_t size) 
{
  unsigned char *dst = dst_;
 804a2bc:	55                   	push   %ebp
 804a2bd:	89 e5                	mov    %esp,%ebp
 804a2bf:	83 ec 38             	sub    $0x38,%esp
 804a2c2:	8b 45 08             	mov    0x8(%ebp),%eax
 804a2c5:	89 45 f4             	mov    %eax,-0xc(%ebp)

  ASSERT (dst != NULL || size == 0);
 804a2c8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804a2cc:	75 42                	jne    804a310 <memset+0x54>
 804a2ce:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804a2d2:	74 3f                	je     804a313 <memset+0x57>
 804a2d4:	c7 44 24 10 af b3 04 	movl   $0x804b3af,0x10(%esp)
 804a2db:	08 
 804a2dc:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a2e3:	08 
 804a2e4:	c7 44 24 08 d4 b4 04 	movl   $0x804b4d4,0x8(%esp)
 804a2eb:	08 
 804a2ec:	c7 44 24 04 1b 01 00 	movl   $0x11b,0x4(%esp)
 804a2f3:	00 
 804a2f4:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a2fb:	e8 3c 07 00 00       	call   804aa3c <debug_panic>
  
  while (size-- > 0)
    *dst++ = value;
 804a300:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a303:	89 c2                	mov    %eax,%edx
 804a305:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a308:	88 10                	mov    %dl,(%eax)
 804a30a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a30e:	eb 04                	jmp    804a314 <memset+0x58>
{
  unsigned char *dst = dst_;

  ASSERT (dst != NULL || size == 0);
  
  while (size-- > 0)
 804a310:	90                   	nop
 804a311:	eb 01                	jmp    804a314 <memset+0x58>
 804a313:	90                   	nop
 804a314:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804a318:	0f 95 c0             	setne  %al
 804a31b:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
 804a31f:	84 c0                	test   %al,%al
 804a321:	75 dd                	jne    804a300 <memset+0x44>
    *dst++ = value;

  return dst_;
 804a323:	8b 45 08             	mov    0x8(%ebp),%eax
}
 804a326:	c9                   	leave  
 804a327:	c3                   	ret    

0804a328 <strlen>:
size_t
strlen (const char *string) 
{
  const char *p;

  ASSERT (string != NULL);
 804a328:	55                   	push   %ebp
 804a329:	89 e5                	mov    %esp,%ebp
 804a32b:	83 ec 38             	sub    $0x38,%esp
 804a32e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804a332:	74 08                	je     804a33c <strlen+0x14>

  for (p = string; *p != '\0'; p++)
 804a334:	8b 45 08             	mov    0x8(%ebp),%eax
 804a337:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a33a:	eb 30                	jmp    804a36c <strlen+0x44>
size_t
strlen (const char *string) 
{
  const char *p;

  ASSERT (string != NULL);
 804a33c:	c7 44 24 10 68 b4 04 	movl   $0x804b468,0x10(%esp)
 804a343:	08 
 804a344:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a34b:	08 
 804a34c:	c7 44 24 08 cd b4 04 	movl   $0x804b4cd,0x8(%esp)
 804a353:	08 
 804a354:	c7 44 24 04 29 01 00 	movl   $0x129,0x4(%esp)
 804a35b:	00 
 804a35c:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a363:	e8 d4 06 00 00       	call   804aa3c <debug_panic>

  for (p = string; *p != '\0'; p++)
 804a368:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 804a36c:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a36f:	0f b6 00             	movzbl (%eax),%eax
 804a372:	84 c0                	test   %al,%al
 804a374:	75 f2                	jne    804a368 <strlen+0x40>
    continue;
  return p - string;
 804a376:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a379:	8b 45 08             	mov    0x8(%ebp),%eax
 804a37c:	89 d1                	mov    %edx,%ecx
 804a37e:	29 c1                	sub    %eax,%ecx
 804a380:	89 c8                	mov    %ecx,%eax
}
 804a382:	c9                   	leave  
 804a383:	c3                   	ret    

0804a384 <strnlen>:

/* If STRING is less than MAXLEN characters in length, returns
   its actual length.  Otherwise, returns MAXLEN. */
size_t
strnlen (const char *string, size_t maxlen) 
{
 804a384:	55                   	push   %ebp
 804a385:	89 e5                	mov    %esp,%ebp
 804a387:	83 ec 10             	sub    $0x10,%esp
  size_t length;

  for (length = 0; string[length] != '\0' && length < maxlen; length++)
 804a38a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 804a391:	eb 04                	jmp    804a397 <strnlen+0x13>
    continue;
 804a393:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
size_t
strnlen (const char *string, size_t maxlen) 
{
  size_t length;

  for (length = 0; string[length] != '\0' && length < maxlen; length++)
 804a397:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804a39a:	8b 55 08             	mov    0x8(%ebp),%edx
 804a39d:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a3a0:	0f b6 00             	movzbl (%eax),%eax
 804a3a3:	84 c0                	test   %al,%al
 804a3a5:	74 08                	je     804a3af <strnlen+0x2b>
 804a3a7:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804a3aa:	3b 45 0c             	cmp    0xc(%ebp),%eax
 804a3ad:	72 e4                	jb     804a393 <strnlen+0xf>
    continue;
  return length;
 804a3af:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804a3b2:	c9                   	leave  
 804a3b3:	c3                   	ret    

0804a3b4 <strlcpy>:
   increasingly popular extension.  See
   http://www.courtesan.com/todd/papers/strlcpy.html for
   information on strlcpy(). */
size_t
strlcpy (char *dst, const char *src, size_t size) 
{
 804a3b4:	55                   	push   %ebp
 804a3b5:	89 e5                	mov    %esp,%ebp
 804a3b7:	83 ec 38             	sub    $0x38,%esp
  size_t src_len;

  ASSERT (dst != NULL);
 804a3ba:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804a3be:	74 08                	je     804a3c8 <strlcpy+0x14>
  ASSERT (src != NULL);
 804a3c0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804a3c4:	75 2e                	jne    804a3f4 <strlcpy+0x40>
 804a3c6:	eb 42                	jmp    804a40a <strlcpy+0x56>
size_t
strlcpy (char *dst, const char *src, size_t size) 
{
  size_t src_len;

  ASSERT (dst != NULL);
 804a3c8:	c7 44 24 10 a5 b4 04 	movl   $0x804b4a5,0x10(%esp)
 804a3cf:	08 
 804a3d0:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a3d7:	08 
 804a3d8:	c7 44 24 08 c5 b4 04 	movl   $0x804b4c5,0x8(%esp)
 804a3df:	08 
 804a3e0:	c7 44 24 04 4a 01 00 	movl   $0x14a,0x4(%esp)
 804a3e7:	00 
 804a3e8:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a3ef:	e8 48 06 00 00       	call   804aa3c <debug_panic>
  ASSERT (src != NULL);

  src_len = strlen (src);
 804a3f4:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a3f7:	89 04 24             	mov    %eax,(%esp)
 804a3fa:	e8 29 ff ff ff       	call   804a328 <strlen>
 804a3ff:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (size > 0) 
 804a402:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804a406:	75 2e                	jne    804a436 <strlcpy+0x82>
 804a408:	eb 68                	jmp    804a472 <strlcpy+0xbe>
strlcpy (char *dst, const char *src, size_t size) 
{
  size_t src_len;

  ASSERT (dst != NULL);
  ASSERT (src != NULL);
 804a40a:	c7 44 24 10 b1 b4 04 	movl   $0x804b4b1,0x10(%esp)
 804a411:	08 
 804a412:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a419:	08 
 804a41a:	c7 44 24 08 c5 b4 04 	movl   $0x804b4c5,0x8(%esp)
 804a421:	08 
 804a422:	c7 44 24 04 4b 01 00 	movl   $0x14b,0x4(%esp)
 804a429:	00 
 804a42a:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a431:	e8 06 06 00 00       	call   804aa3c <debug_panic>

  src_len = strlen (src);
  if (size > 0) 
    {
      size_t dst_len = size - 1;
 804a436:	8b 45 10             	mov    0x10(%ebp),%eax
 804a439:	83 e8 01             	sub    $0x1,%eax
 804a43c:	89 45 f4             	mov    %eax,-0xc(%ebp)
      if (src_len < dst_len)
 804a43f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a442:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a445:	73 06                	jae    804a44d <strlcpy+0x99>
        dst_len = src_len;
 804a447:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a44a:	89 45 f4             	mov    %eax,-0xc(%ebp)
      memcpy (dst, src, dst_len);
 804a44d:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a450:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a454:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a457:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a45b:	8b 45 08             	mov    0x8(%ebp),%eax
 804a45e:	89 04 24             	mov    %eax,(%esp)
 804a461:	e8 7a f7 ff ff       	call   8049be0 <memcpy>
      dst[dst_len] = '\0';
 804a466:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a469:	8b 55 08             	mov    0x8(%ebp),%edx
 804a46c:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a46f:	c6 00 00             	movb   $0x0,(%eax)
    }
  return src_len;
 804a472:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
 804a475:	c9                   	leave  
 804a476:	c3                   	ret    

0804a477 <strlcat>:
   increasingly popular extension.  See
   http://www.courtesan.com/todd/papers/strlcpy.html for
   information on strlcpy(). */
size_t
strlcat (char *dst, const char *src, size_t size) 
{
 804a477:	55                   	push   %ebp
 804a478:	89 e5                	mov    %esp,%ebp
 804a47a:	83 ec 38             	sub    $0x38,%esp
  size_t src_len, dst_len;

  ASSERT (dst != NULL);
 804a47d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
 804a481:	74 08                	je     804a48b <strlcat+0x14>
  ASSERT (src != NULL);
 804a483:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
 804a487:	75 2e                	jne    804a4b7 <strlcat+0x40>
 804a489:	eb 53                	jmp    804a4de <strlcat+0x67>
size_t
strlcat (char *dst, const char *src, size_t size) 
{
  size_t src_len, dst_len;

  ASSERT (dst != NULL);
 804a48b:	c7 44 24 10 a5 b4 04 	movl   $0x804b4a5,0x10(%esp)
 804a492:	08 
 804a493:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a49a:	08 
 804a49b:	c7 44 24 08 bd b4 04 	movl   $0x804b4bd,0x8(%esp)
 804a4a2:	08 
 804a4a3:	c7 44 24 04 68 01 00 	movl   $0x168,0x4(%esp)
 804a4aa:	00 
 804a4ab:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a4b2:	e8 85 05 00 00       	call   804aa3c <debug_panic>
  ASSERT (src != NULL);

  src_len = strlen (src);
 804a4b7:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a4ba:	89 04 24             	mov    %eax,(%esp)
 804a4bd:	e8 66 fe ff ff       	call   804a328 <strlen>
 804a4c2:	89 45 ec             	mov    %eax,-0x14(%ebp)
  dst_len = strlen (dst);
 804a4c5:	8b 45 08             	mov    0x8(%ebp),%eax
 804a4c8:	89 04 24             	mov    %eax,(%esp)
 804a4cb:	e8 58 fe ff ff       	call   804a328 <strlen>
 804a4d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
  if (size > 0 && dst_len < size) 
 804a4d3:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
 804a4d7:	75 31                	jne    804a50a <strlcat+0x93>
 804a4d9:	e9 81 00 00 00       	jmp    804a55f <strlcat+0xe8>
strlcat (char *dst, const char *src, size_t size) 
{
  size_t src_len, dst_len;

  ASSERT (dst != NULL);
  ASSERT (src != NULL);
 804a4de:	c7 44 24 10 b1 b4 04 	movl   $0x804b4b1,0x10(%esp)
 804a4e5:	08 
 804a4e6:	c7 44 24 0c c8 b3 04 	movl   $0x804b3c8,0xc(%esp)
 804a4ed:	08 
 804a4ee:	c7 44 24 08 bd b4 04 	movl   $0x804b4bd,0x8(%esp)
 804a4f5:	08 
 804a4f6:	c7 44 24 04 69 01 00 	movl   $0x169,0x4(%esp)
 804a4fd:	00 
 804a4fe:	c7 04 24 df b3 04 08 	movl   $0x804b3df,(%esp)
 804a505:	e8 32 05 00 00       	call   804aa3c <debug_panic>

  src_len = strlen (src);
  dst_len = strlen (dst);
  if (size > 0 && dst_len < size) 
 804a50a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a50d:	3b 45 10             	cmp    0x10(%ebp),%eax
 804a510:	73 4d                	jae    804a55f <strlcat+0xe8>
    {
      size_t copy_cnt = size - dst_len - 1;
 804a512:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a515:	8b 55 10             	mov    0x10(%ebp),%edx
 804a518:	89 d1                	mov    %edx,%ecx
 804a51a:	29 c1                	sub    %eax,%ecx
 804a51c:	89 c8                	mov    %ecx,%eax
 804a51e:	83 e8 01             	sub    $0x1,%eax
 804a521:	89 45 f4             	mov    %eax,-0xc(%ebp)
      if (src_len < copy_cnt)
 804a524:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a527:	3b 45 f4             	cmp    -0xc(%ebp),%eax
 804a52a:	73 06                	jae    804a532 <strlcat+0xbb>
        copy_cnt = src_len;
 804a52c:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804a52f:	89 45 f4             	mov    %eax,-0xc(%ebp)
      memcpy (dst + dst_len, src, copy_cnt);
 804a532:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a535:	8b 55 08             	mov    0x8(%ebp),%edx
 804a538:	01 c2                	add    %eax,%edx
 804a53a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a53d:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a541:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a544:	89 44 24 04          	mov    %eax,0x4(%esp)
 804a548:	89 14 24             	mov    %edx,(%esp)
 804a54b:	e8 90 f6 ff ff       	call   8049be0 <memcpy>
      dst[dst_len + copy_cnt] = '\0';
 804a550:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a553:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a556:	8d 04 02             	lea    (%edx,%eax,1),%eax
 804a559:	03 45 08             	add    0x8(%ebp),%eax
 804a55c:	c6 00 00             	movb   $0x0,(%eax)
    }
  return src_len + dst_len;
 804a55f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a562:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a565:	8d 04 02             	lea    (%edx,%eax,1),%eax
}
 804a568:	c9                   	leave  
 804a569:	c3                   	ret    
 804a56a:	90                   	nop
 804a56b:	90                   	nop

0804a56c <divl>:
   yield a 32-bit quotient.  Returns the quotient.
   Traps with a divide error (#DE) if the quotient does not fit
   in 32 bits. */
static inline uint32_t
divl (uint64_t n, uint32_t d)
{
 804a56c:	55                   	push   %ebp
 804a56d:	89 e5                	mov    %esp,%ebp
 804a56f:	83 ec 18             	sub    $0x18,%esp
 804a572:	8b 45 08             	mov    0x8(%ebp),%eax
 804a575:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a578:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a57b:	89 45 ec             	mov    %eax,-0x14(%ebp)
  uint32_t n1 = n >> 32;
 804a57e:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a581:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a584:	89 d0                	mov    %edx,%eax
 804a586:	31 d2                	xor    %edx,%edx
 804a588:	89 45 f0             	mov    %eax,-0x10(%ebp)
  uint32_t n0 = n;
 804a58b:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a58e:	89 45 f4             	mov    %eax,-0xc(%ebp)
  uint32_t q, r;

  asm ("divl %4"
 804a591:	8b 55 f0             	mov    -0x10(%ebp),%edx
 804a594:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804a597:	f7 75 10             	divl   0x10(%ebp)
 804a59a:	89 55 fc             	mov    %edx,-0x4(%ebp)
 804a59d:	89 45 f8             	mov    %eax,-0x8(%ebp)
       : "=d" (r), "=a" (q)
       : "0" (n1), "1" (n0), "rm" (d));

  return q;
 804a5a0:	8b 45 f8             	mov    -0x8(%ebp),%eax
}
 804a5a3:	c9                   	leave  
 804a5a4:	c3                   	ret    

0804a5a5 <nlz>:

/* Returns the number of leading zero bits in X,
   which must be nonzero. */
static int
nlz (uint32_t x) 
{
 804a5a5:	55                   	push   %ebp
 804a5a6:	89 e5                	mov    %esp,%ebp
 804a5a8:	83 ec 10             	sub    $0x10,%esp
  /* This technique is portable, but there are better ways to do
     it on particular systems.  With sufficiently new enough GCC,
     you can use __builtin_clz() to take advantage of GCC's
     knowledge of how to do it.  Or you can use the x86 BSR
     instruction directly. */
  int n = 0;
 804a5ab:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  if (x <= 0x0000FFFF)
 804a5b2:	81 7d 08 ff ff 00 00 	cmpl   $0xffff,0x8(%ebp)
 804a5b9:	77 08                	ja     804a5c3 <nlz+0x1e>
    {
      n += 16;
 804a5bb:	83 45 fc 10          	addl   $0x10,-0x4(%ebp)
      x <<= 16; 
 804a5bf:	c1 65 08 10          	shll   $0x10,0x8(%ebp)
    }
  if (x <= 0x00FFFFFF)
 804a5c3:	81 7d 08 ff ff ff 00 	cmpl   $0xffffff,0x8(%ebp)
 804a5ca:	77 08                	ja     804a5d4 <nlz+0x2f>
    {
      n += 8;
 804a5cc:	83 45 fc 08          	addl   $0x8,-0x4(%ebp)
      x <<= 8; 
 804a5d0:	c1 65 08 08          	shll   $0x8,0x8(%ebp)
    }
  if (x <= 0x0FFFFFFF)
 804a5d4:	81 7d 08 ff ff ff 0f 	cmpl   $0xfffffff,0x8(%ebp)
 804a5db:	77 08                	ja     804a5e5 <nlz+0x40>
    {
      n += 4;
 804a5dd:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
      x <<= 4;
 804a5e1:	c1 65 08 04          	shll   $0x4,0x8(%ebp)
    }
  if (x <= 0x3FFFFFFF)
 804a5e5:	81 7d 08 ff ff ff 3f 	cmpl   $0x3fffffff,0x8(%ebp)
 804a5ec:	77 08                	ja     804a5f6 <nlz+0x51>
    {
      n += 2;
 804a5ee:	83 45 fc 02          	addl   $0x2,-0x4(%ebp)
      x <<= 2; 
 804a5f2:	c1 65 08 02          	shll   $0x2,0x8(%ebp)
    }
  if (x <= 0x7FFFFFFF)
 804a5f6:	8b 45 08             	mov    0x8(%ebp),%eax
 804a5f9:	85 c0                	test   %eax,%eax
 804a5fb:	78 04                	js     804a601 <nlz+0x5c>
    n++;
 804a5fd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  return n;
 804a601:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804a604:	c9                   	leave  
 804a605:	c3                   	ret    

0804a606 <udiv64>:

/* Divides unsigned 64-bit N by unsigned 64-bit D and returns the
   quotient. */
static uint64_t
udiv64 (uint64_t n, uint64_t d)
{
 804a606:	55                   	push   %ebp
 804a607:	89 e5                	mov    %esp,%ebp
 804a609:	57                   	push   %edi
 804a60a:	56                   	push   %esi
 804a60b:	53                   	push   %ebx
 804a60c:	83 ec 54             	sub    $0x54,%esp
 804a60f:	8b 45 08             	mov    0x8(%ebp),%eax
 804a612:	89 45 b8             	mov    %eax,-0x48(%ebp)
 804a615:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a618:	89 45 bc             	mov    %eax,-0x44(%ebp)
 804a61b:	8b 45 10             	mov    0x10(%ebp),%eax
 804a61e:	89 45 b0             	mov    %eax,-0x50(%ebp)
 804a621:	8b 45 14             	mov    0x14(%ebp),%eax
 804a624:	89 45 b4             	mov    %eax,-0x4c(%ebp)
  if ((d >> 32) == 0) 
 804a627:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804a62a:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804a62d:	89 d0                	mov    %edx,%eax
 804a62f:	31 d2                	xor    %edx,%edx
 804a631:	09 d0                	or     %edx,%eax
 804a633:	85 c0                	test   %eax,%eax
 804a635:	0f 85 a2 00 00 00    	jne    804a6dd <udiv64+0xd7>
             <=> [(bd - 1)/d] < b
             <=> [b - 1/d] < b
         which is a tautology.

         Therefore, this code is correct and will not trap. */
      uint64_t b = 1ULL << 32;
 804a63b:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 804a642:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
      uint32_t n1 = n >> 32;
 804a649:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804a64c:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804a64f:	89 d0                	mov    %edx,%eax
 804a651:	31 d2                	xor    %edx,%edx
 804a653:	89 45 d4             	mov    %eax,-0x2c(%ebp)
      uint32_t n0 = n; 
 804a656:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804a659:	89 45 d8             	mov    %eax,-0x28(%ebp)
      uint32_t d0 = d;
 804a65c:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804a65f:	89 45 dc             	mov    %eax,-0x24(%ebp)

      return divl (b * (n1 % d0) + n0, d0) + b * (n1 / d0); 
 804a662:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a665:	ba 00 00 00 00       	mov    $0x0,%edx
 804a66a:	f7 75 dc             	divl   -0x24(%ebp)
 804a66d:	89 d0                	mov    %edx,%eax
 804a66f:	ba 00 00 00 00       	mov    $0x0,%edx
 804a674:	8b 4d c8             	mov    -0x38(%ebp),%ecx
 804a677:	0f af ca             	imul   %edx,%ecx
 804a67a:	8b 5d cc             	mov    -0x34(%ebp),%ebx
 804a67d:	0f af d8             	imul   %eax,%ebx
 804a680:	01 d9                	add    %ebx,%ecx
 804a682:	f7 65 c8             	mull   -0x38(%ebp)
 804a685:	01 d1                	add    %edx,%ecx
 804a687:	89 ca                	mov    %ecx,%edx
 804a689:	8b 4d d8             	mov    -0x28(%ebp),%ecx
 804a68c:	bb 00 00 00 00       	mov    $0x0,%ebx
 804a691:	01 c8                	add    %ecx,%eax
 804a693:	11 da                	adc    %ebx,%edx
 804a695:	8b 4d dc             	mov    -0x24(%ebp),%ecx
 804a698:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804a69c:	89 04 24             	mov    %eax,(%esp)
 804a69f:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a6a3:	e8 c4 fe ff ff       	call   804a56c <divl>
 804a6a8:	89 c1                	mov    %eax,%ecx
 804a6aa:	bb 00 00 00 00       	mov    $0x0,%ebx
 804a6af:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a6b2:	ba 00 00 00 00       	mov    $0x0,%edx
 804a6b7:	f7 75 dc             	divl   -0x24(%ebp)
 804a6ba:	ba 00 00 00 00       	mov    $0x0,%edx
 804a6bf:	8b 75 c8             	mov    -0x38(%ebp),%esi
 804a6c2:	0f af f2             	imul   %edx,%esi
 804a6c5:	8b 7d cc             	mov    -0x34(%ebp),%edi
 804a6c8:	0f af f8             	imul   %eax,%edi
 804a6cb:	01 fe                	add    %edi,%esi
 804a6cd:	f7 65 c8             	mull   -0x38(%ebp)
 804a6d0:	01 d6                	add    %edx,%esi
 804a6d2:	89 f2                	mov    %esi,%edx
 804a6d4:	01 c8                	add    %ecx,%eax
 804a6d6:	11 da                	adc    %ebx,%edx
 804a6d8:	e9 eb 00 00 00       	jmp    804a7c8 <udiv64+0x1c2>
    }
  else 
    {
      /* Based on the algorithm and proof available from
         http://www.hackersdelight.org/revisions.pdf. */
      if (n < d)
 804a6dd:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804a6e0:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804a6e3:	3b 55 b4             	cmp    -0x4c(%ebp),%edx
 804a6e6:	77 19                	ja     804a701 <udiv64+0xfb>
 804a6e8:	3b 55 b4             	cmp    -0x4c(%ebp),%edx
 804a6eb:	72 05                	jb     804a6f2 <udiv64+0xec>
 804a6ed:	3b 45 b0             	cmp    -0x50(%ebp),%eax
 804a6f0:	73 0f                	jae    804a701 <udiv64+0xfb>
        return 0;
 804a6f2:	b8 00 00 00 00       	mov    $0x0,%eax
 804a6f7:	ba 00 00 00 00       	mov    $0x0,%edx
 804a6fc:	e9 c7 00 00 00       	jmp    804a7c8 <udiv64+0x1c2>
      else 
        {
          uint32_t d1 = d >> 32;
 804a701:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804a704:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804a707:	89 d0                	mov    %edx,%eax
 804a709:	31 d2                	xor    %edx,%edx
 804a70b:	89 45 e0             	mov    %eax,-0x20(%ebp)
          int s = nlz (d1);
 804a70e:	8b 45 e0             	mov    -0x20(%ebp),%eax
 804a711:	89 04 24             	mov    %eax,(%esp)
 804a714:	e8 8c fe ff ff       	call   804a5a5 <nlz>
 804a719:	89 45 e4             	mov    %eax,-0x1c(%ebp)
          uint64_t q = divl (n >> 1, (d << s) >> 32) >> (31 - s);
 804a71c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 804a71f:	8b 45 b0             	mov    -0x50(%ebp),%eax
 804a722:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 804a725:	0f a5 c2             	shld   %cl,%eax,%edx
 804a728:	d3 e0                	shl    %cl,%eax
 804a72a:	f6 c1 20             	test   $0x20,%cl
 804a72d:	74 04                	je     804a733 <udiv64+0x12d>
 804a72f:	89 c2                	mov    %eax,%edx
 804a731:	31 c0                	xor    %eax,%eax
 804a733:	89 d0                	mov    %edx,%eax
 804a735:	31 d2                	xor    %edx,%edx
 804a737:	89 c1                	mov    %eax,%ecx
 804a739:	8b 45 b8             	mov    -0x48(%ebp),%eax
 804a73c:	8b 55 bc             	mov    -0x44(%ebp),%edx
 804a73f:	0f ac d0 01          	shrd   $0x1,%edx,%eax
 804a743:	d1 ea                	shr    %edx
 804a745:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804a749:	89 04 24             	mov    %eax,(%esp)
 804a74c:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a750:	e8 17 fe ff ff       	call   804a56c <divl>
 804a755:	89 c2                	mov    %eax,%edx
 804a757:	b8 1f 00 00 00       	mov    $0x1f,%eax
 804a75c:	2b 45 e4             	sub    -0x1c(%ebp),%eax
 804a75f:	89 d3                	mov    %edx,%ebx
 804a761:	89 c1                	mov    %eax,%ecx
 804a763:	d3 eb                	shr    %cl,%ebx
 804a765:	89 d8                	mov    %ebx,%eax
 804a767:	ba 00 00 00 00       	mov    $0x0,%edx
 804a76c:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a76f:	89 55 ec             	mov    %edx,-0x14(%ebp)
          return n - (q - 1) * d < d ? q - 1 : q; 
 804a772:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a775:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a778:	83 c0 ff             	add    $0xffffffff,%eax
 804a77b:	83 d2 ff             	adc    $0xffffffff,%edx
 804a77e:	8b 4d b0             	mov    -0x50(%ebp),%ecx
 804a781:	0f af ca             	imul   %edx,%ecx
 804a784:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
 804a787:	0f af d8             	imul   %eax,%ebx
 804a78a:	01 d9                	add    %ebx,%ecx
 804a78c:	f7 65 b0             	mull   -0x50(%ebp)
 804a78f:	01 d1                	add    %edx,%ecx
 804a791:	89 ca                	mov    %ecx,%edx
 804a793:	8b 4d b8             	mov    -0x48(%ebp),%ecx
 804a796:	8b 5d bc             	mov    -0x44(%ebp),%ebx
 804a799:	89 ce                	mov    %ecx,%esi
 804a79b:	89 df                	mov    %ebx,%edi
 804a79d:	29 c6                	sub    %eax,%esi
 804a79f:	19 d7                	sbb    %edx,%edi
 804a7a1:	89 f0                	mov    %esi,%eax
 804a7a3:	89 fa                	mov    %edi,%edx
 804a7a5:	3b 55 b4             	cmp    -0x4c(%ebp),%edx
 804a7a8:	77 18                	ja     804a7c2 <udiv64+0x1bc>
 804a7aa:	3b 55 b4             	cmp    -0x4c(%ebp),%edx
 804a7ad:	72 05                	jb     804a7b4 <udiv64+0x1ae>
 804a7af:	3b 45 b0             	cmp    -0x50(%ebp),%eax
 804a7b2:	73 0e                	jae    804a7c2 <udiv64+0x1bc>
 804a7b4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a7b7:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a7ba:	83 c0 ff             	add    $0xffffffff,%eax
 804a7bd:	83 d2 ff             	adc    $0xffffffff,%edx
 804a7c0:	eb 06                	jmp    804a7c8 <udiv64+0x1c2>
 804a7c2:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a7c5:	8b 55 ec             	mov    -0x14(%ebp),%edx
        }
    }
}
 804a7c8:	83 c4 54             	add    $0x54,%esp
 804a7cb:	5b                   	pop    %ebx
 804a7cc:	5e                   	pop    %esi
 804a7cd:	5f                   	pop    %edi
 804a7ce:	5d                   	pop    %ebp
 804a7cf:	c3                   	ret    

0804a7d0 <umod64>:

/* Divides unsigned 64-bit N by unsigned 64-bit D and returns the
   remainder. */
static uint32_t
umod64 (uint64_t n, uint64_t d)
{
 804a7d0:	55                   	push   %ebp
 804a7d1:	89 e5                	mov    %esp,%ebp
 804a7d3:	53                   	push   %ebx
 804a7d4:	83 ec 24             	sub    $0x24,%esp
 804a7d7:	8b 45 08             	mov    0x8(%ebp),%eax
 804a7da:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a7dd:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a7e0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a7e3:	8b 45 10             	mov    0x10(%ebp),%eax
 804a7e6:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a7e9:	8b 45 14             	mov    0x14(%ebp),%eax
 804a7ec:	89 45 ec             	mov    %eax,-0x14(%ebp)
  return n - d * udiv64 (n, d);
 804a7ef:	8b 5d f0             	mov    -0x10(%ebp),%ebx
 804a7f2:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a7f5:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a7f8:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a7fc:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804a800:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a803:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a806:	89 04 24             	mov    %eax,(%esp)
 804a809:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a80d:	e8 f4 fd ff ff       	call   804a606 <udiv64>
 804a812:	89 c2                	mov    %eax,%edx
 804a814:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a817:	0f af c2             	imul   %edx,%eax
 804a81a:	89 da                	mov    %ebx,%edx
 804a81c:	29 c2                	sub    %eax,%edx
 804a81e:	89 d0                	mov    %edx,%eax
}
 804a820:	83 c4 24             	add    $0x24,%esp
 804a823:	5b                   	pop    %ebx
 804a824:	5d                   	pop    %ebp
 804a825:	c3                   	ret    

0804a826 <sdiv64>:

/* Divides signed 64-bit N by signed 64-bit D and returns the
   quotient. */
static int64_t
sdiv64 (int64_t n, int64_t d)
{
 804a826:	55                   	push   %ebp
 804a827:	89 e5                	mov    %esp,%ebp
 804a829:	83 ec 40             	sub    $0x40,%esp
 804a82c:	8b 45 08             	mov    0x8(%ebp),%eax
 804a82f:	89 45 d8             	mov    %eax,-0x28(%ebp)
 804a832:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a835:	89 45 dc             	mov    %eax,-0x24(%ebp)
 804a838:	8b 45 10             	mov    0x10(%ebp),%eax
 804a83b:	89 45 d0             	mov    %eax,-0x30(%ebp)
 804a83e:	8b 45 14             	mov    0x14(%ebp),%eax
 804a841:	89 45 d4             	mov    %eax,-0x2c(%ebp)
  uint64_t n_abs = n >= 0 ? (uint64_t) n : -(uint64_t) n;
 804a844:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
 804a848:	78 08                	js     804a852 <sdiv64+0x2c>
 804a84a:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804a84d:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804a850:	eb 0d                	jmp    804a85f <sdiv64+0x39>
 804a852:	8b 45 d8             	mov    -0x28(%ebp),%eax
 804a855:	8b 55 dc             	mov    -0x24(%ebp),%edx
 804a858:	f7 d8                	neg    %eax
 804a85a:	83 d2 00             	adc    $0x0,%edx
 804a85d:	f7 da                	neg    %edx
 804a85f:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a862:	89 55 ec             	mov    %edx,-0x14(%ebp)
  uint64_t d_abs = d >= 0 ? (uint64_t) d : -(uint64_t) d;
 804a865:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 804a869:	78 08                	js     804a873 <sdiv64+0x4d>
 804a86b:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a86e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804a871:	eb 0d                	jmp    804a880 <sdiv64+0x5a>
 804a873:	8b 45 d0             	mov    -0x30(%ebp),%eax
 804a876:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804a879:	f7 d8                	neg    %eax
 804a87b:	83 d2 00             	adc    $0x0,%edx
 804a87e:	f7 da                	neg    %edx
 804a880:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a883:	89 55 f4             	mov    %edx,-0xc(%ebp)
  uint64_t q_abs = udiv64 (n_abs, d_abs);
 804a886:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a889:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a88c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a890:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804a894:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a897:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a89a:	89 04 24             	mov    %eax,(%esp)
 804a89d:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a8a1:	e8 60 fd ff ff       	call   804a606 <udiv64>
 804a8a6:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804a8a9:	89 55 fc             	mov    %edx,-0x4(%ebp)
  return (n < 0) == (d < 0) ? (int64_t) q_abs : -(int64_t) q_abs;
 804a8ac:	8b 45 dc             	mov    -0x24(%ebp),%eax
 804a8af:	f7 d0                	not    %eax
 804a8b1:	c1 e8 1f             	shr    $0x1f,%eax
 804a8b4:	89 c2                	mov    %eax,%edx
 804a8b6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804a8b9:	c1 e8 1f             	shr    $0x1f,%eax
 804a8bc:	31 d0                	xor    %edx,%eax
 804a8be:	84 c0                	test   %al,%al
 804a8c0:	74 08                	je     804a8ca <sdiv64+0xa4>
 804a8c2:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804a8c5:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804a8c8:	eb 0d                	jmp    804a8d7 <sdiv64+0xb1>
 804a8ca:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804a8cd:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804a8d0:	f7 d8                	neg    %eax
 804a8d2:	83 d2 00             	adc    $0x0,%edx
 804a8d5:	f7 da                	neg    %edx
}
 804a8d7:	c9                   	leave  
 804a8d8:	c3                   	ret    

0804a8d9 <smod64>:

/* Divides signed 64-bit N by signed 64-bit D and returns the
   remainder. */
static int32_t
smod64 (int64_t n, int64_t d)
{
 804a8d9:	55                   	push   %ebp
 804a8da:	89 e5                	mov    %esp,%ebp
 804a8dc:	53                   	push   %ebx
 804a8dd:	83 ec 24             	sub    $0x24,%esp
 804a8e0:	8b 45 08             	mov    0x8(%ebp),%eax
 804a8e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a8e6:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a8e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804a8ec:	8b 45 10             	mov    0x10(%ebp),%eax
 804a8ef:	89 45 e8             	mov    %eax,-0x18(%ebp)
 804a8f2:	8b 45 14             	mov    0x14(%ebp),%eax
 804a8f5:	89 45 ec             	mov    %eax,-0x14(%ebp)
  return n - d * sdiv64 (n, d);
 804a8f8:	8b 5d f0             	mov    -0x10(%ebp),%ebx
 804a8fb:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a8fe:	8b 55 ec             	mov    -0x14(%ebp),%edx
 804a901:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a905:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804a909:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a90c:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a90f:	89 04 24             	mov    %eax,(%esp)
 804a912:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a916:	e8 0b ff ff ff       	call   804a826 <sdiv64>
 804a91b:	89 c2                	mov    %eax,%edx
 804a91d:	8b 45 e8             	mov    -0x18(%ebp),%eax
 804a920:	0f af c2             	imul   %edx,%eax
 804a923:	89 da                	mov    %ebx,%edx
 804a925:	29 c2                	sub    %eax,%edx
 804a927:	89 d0                	mov    %edx,%eax
}
 804a929:	83 c4 24             	add    $0x24,%esp
 804a92c:	5b                   	pop    %ebx
 804a92d:	5d                   	pop    %ebp
 804a92e:	c3                   	ret    

0804a92f <__divdi3>:
unsigned long long __umoddi3 (unsigned long long n, unsigned long long d);

/* Signed 64-bit division. */
long long
__divdi3 (long long n, long long d) 
{
 804a92f:	55                   	push   %ebp
 804a930:	89 e5                	mov    %esp,%ebp
 804a932:	83 ec 20             	sub    $0x20,%esp
 804a935:	8b 45 08             	mov    0x8(%ebp),%eax
 804a938:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804a93b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a93e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804a941:	8b 45 10             	mov    0x10(%ebp),%eax
 804a944:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a947:	8b 45 14             	mov    0x14(%ebp),%eax
 804a94a:	89 45 f4             	mov    %eax,-0xc(%ebp)
  return sdiv64 (n, d);
 804a94d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a950:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a953:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a957:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804a95b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804a95e:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804a961:	89 04 24             	mov    %eax,(%esp)
 804a964:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a968:	e8 b9 fe ff ff       	call   804a826 <sdiv64>
}
 804a96d:	c9                   	leave  
 804a96e:	c3                   	ret    

0804a96f <__moddi3>:

/* Signed 64-bit remainder. */
long long
__moddi3 (long long n, long long d) 
{
 804a96f:	55                   	push   %ebp
 804a970:	89 e5                	mov    %esp,%ebp
 804a972:	83 ec 20             	sub    $0x20,%esp
 804a975:	8b 45 08             	mov    0x8(%ebp),%eax
 804a978:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804a97b:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a97e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804a981:	8b 45 10             	mov    0x10(%ebp),%eax
 804a984:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a987:	8b 45 14             	mov    0x14(%ebp),%eax
 804a98a:	89 45 f4             	mov    %eax,-0xc(%ebp)
  return smod64 (n, d);
 804a98d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a990:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a993:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a997:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804a99b:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804a99e:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804a9a1:	89 04 24             	mov    %eax,(%esp)
 804a9a4:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a9a8:	e8 2c ff ff ff       	call   804a8d9 <smod64>
 804a9ad:	89 c2                	mov    %eax,%edx
 804a9af:	c1 fa 1f             	sar    $0x1f,%edx
}
 804a9b2:	c9                   	leave  
 804a9b3:	c3                   	ret    

0804a9b4 <__udivdi3>:

/* Unsigned 64-bit division. */
unsigned long long
__udivdi3 (unsigned long long n, unsigned long long d) 
{
 804a9b4:	55                   	push   %ebp
 804a9b5:	89 e5                	mov    %esp,%ebp
 804a9b7:	83 ec 20             	sub    $0x20,%esp
 804a9ba:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9bd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804a9c0:	8b 45 0c             	mov    0xc(%ebp),%eax
 804a9c3:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804a9c6:	8b 45 10             	mov    0x10(%ebp),%eax
 804a9c9:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804a9cc:	8b 45 14             	mov    0x14(%ebp),%eax
 804a9cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
  return udiv64 (n, d);
 804a9d2:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804a9d5:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804a9d8:	89 44 24 08          	mov    %eax,0x8(%esp)
 804a9dc:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804a9e0:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804a9e3:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804a9e6:	89 04 24             	mov    %eax,(%esp)
 804a9e9:	89 54 24 04          	mov    %edx,0x4(%esp)
 804a9ed:	e8 14 fc ff ff       	call   804a606 <udiv64>
}
 804a9f2:	c9                   	leave  
 804a9f3:	c3                   	ret    

0804a9f4 <__umoddi3>:

/* Unsigned 64-bit remainder. */
unsigned long long
__umoddi3 (unsigned long long n, unsigned long long d) 
{
 804a9f4:	55                   	push   %ebp
 804a9f5:	89 e5                	mov    %esp,%ebp
 804a9f7:	83 ec 20             	sub    $0x20,%esp
 804a9fa:	8b 45 08             	mov    0x8(%ebp),%eax
 804a9fd:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804aa00:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aa03:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804aa06:	8b 45 10             	mov    0x10(%ebp),%eax
 804aa09:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804aa0c:	8b 45 14             	mov    0x14(%ebp),%eax
 804aa0f:	89 45 f4             	mov    %eax,-0xc(%ebp)
  return umod64 (n, d);
 804aa12:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804aa15:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804aa18:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aa1c:	89 54 24 0c          	mov    %edx,0xc(%esp)
 804aa20:	8b 45 f8             	mov    -0x8(%ebp),%eax
 804aa23:	8b 55 fc             	mov    -0x4(%ebp),%edx
 804aa26:	89 04 24             	mov    %eax,(%esp)
 804aa29:	89 54 24 04          	mov    %edx,0x4(%esp)
 804aa2d:	e8 9e fd ff ff       	call   804a7d0 <umod64>
 804aa32:	ba 00 00 00 00       	mov    $0x0,%edx
}
 804aa37:	c9                   	leave  
 804aa38:	c3                   	ret    
 804aa39:	90                   	nop
 804aa3a:	90                   	nop
 804aa3b:	90                   	nop

0804aa3c <debug_panic>:
/* Aborts the user program, printing the source file name, line
   number, and function name, plus a user-specific message. */
void
debug_panic (const char *file, int line, const char *function,
             const char *message, ...)
{
 804aa3c:	55                   	push   %ebp
 804aa3d:	89 e5                	mov    %esp,%ebp
 804aa3f:	83 ec 28             	sub    $0x28,%esp
  va_list args;

  printf ("User process ABORT at %s:%d in %s(): ", file, line, function);
 804aa42:	8b 45 10             	mov    0x10(%ebp),%eax
 804aa45:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804aa49:	8b 45 0c             	mov    0xc(%ebp),%eax
 804aa4c:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aa50:	8b 45 08             	mov    0x8(%ebp),%eax
 804aa53:	89 44 24 04          	mov    %eax,0x4(%esp)
 804aa57:	c7 04 24 10 b5 04 08 	movl   $0x804b510,(%esp)
 804aa5e:	e8 33 e3 ff ff       	call   8048d96 <printf>

  va_start (args, message);
 804aa63:	8d 45 18             	lea    0x18(%ebp),%eax
 804aa66:	89 45 f4             	mov    %eax,-0xc(%ebp)
  vprintf (message, args);
 804aa69:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804aa6c:	89 44 24 04          	mov    %eax,0x4(%esp)
 804aa70:	8b 45 14             	mov    0x14(%ebp),%eax
 804aa73:	89 04 24             	mov    %eax,(%esp)
 804aa76:	e8 65 02 00 00       	call   804ace0 <vprintf>
  printf ("\n");
 804aa7b:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 804aa82:	e8 e3 02 00 00       	call   804ad6a <putchar>
  va_end (args);

  debug_backtrace ();
 804aa87:	e8 f4 03 00 00       	call   804ae80 <debug_backtrace>
  
  exit (1);
 804aa8c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804aa93:	e8 34 00 00 00       	call   804aacc <exit>

0804aa98 <halt>:
          retval;                                               \
        })

void
halt (void) 
{
 804aa98:	55                   	push   %ebp
 804aa99:	89 e5                	mov    %esp,%ebp
 804aa9b:	83 ec 28             	sub    $0x28,%esp
  syscall0 (SYS_HALT);
 804aa9e:	6a 00                	push   $0x0
 804aaa0:	cd 30                	int    $0x30
 804aaa2:	83 c4 04             	add    $0x4,%esp
 804aaa5:	89 45 f4             	mov    %eax,-0xc(%ebp)
  NOT_REACHED ();
 804aaa8:	c7 44 24 0c 38 b5 04 	movl   $0x804b538,0xc(%esp)
 804aaaf:	08 
 804aab0:	c7 44 24 08 78 b5 04 	movl   $0x804b578,0x8(%esp)
 804aab7:	08 
 804aab8:	c7 44 24 04 44 00 00 	movl   $0x44,0x4(%esp)
 804aabf:	00 
 804aac0:	c7 04 24 5a b5 04 08 	movl   $0x804b55a,(%esp)
 804aac7:	e8 70 ff ff ff       	call   804aa3c <debug_panic>

0804aacc <exit>:
}

void
exit (int status)
{
  syscall1 (SYS_EXIT, status);
 804aacc:	55                   	push   %ebp
 804aacd:	89 e5                	mov    %esp,%ebp
 804aacf:	83 ec 28             	sub    $0x28,%esp
 804aad2:	ff 75 08             	pushl  0x8(%ebp)
 804aad5:	6a 01                	push   $0x1
 804aad7:	cd 30                	int    $0x30
 804aad9:	83 c4 08             	add    $0x8,%esp
 804aadc:	89 45 f4             	mov    %eax,-0xc(%ebp)
  NOT_REACHED ();
 804aadf:	c7 44 24 0c 38 b5 04 	movl   $0x804b538,0xc(%esp)
 804aae6:	08 
 804aae7:	c7 44 24 08 73 b5 04 	movl   $0x804b573,0x8(%esp)
 804aaee:	08 
 804aaef:	c7 44 24 04 4b 00 00 	movl   $0x4b,0x4(%esp)
 804aaf6:	00 
 804aaf7:	c7 04 24 5a b5 04 08 	movl   $0x804b55a,(%esp)
 804aafe:	e8 39 ff ff ff       	call   804aa3c <debug_panic>

0804ab03 <exec>:
}

pid_t
exec (const char *file)
{
 804ab03:	55                   	push   %ebp
 804ab04:	89 e5                	mov    %esp,%ebp
 804ab06:	83 ec 10             	sub    $0x10,%esp
  return (pid_t) syscall1 (SYS_EXEC, file);
 804ab09:	ff 75 08             	pushl  0x8(%ebp)
 804ab0c:	6a 02                	push   $0x2
 804ab0e:	cd 30                	int    $0x30
 804ab10:	83 c4 08             	add    $0x8,%esp
 804ab13:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ab16:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804ab19:	c9                   	leave  
 804ab1a:	c3                   	ret    

0804ab1b <wait>:

int
wait (pid_t pid)
{
 804ab1b:	55                   	push   %ebp
 804ab1c:	89 e5                	mov    %esp,%ebp
 804ab1e:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_WAIT, pid);
 804ab21:	ff 75 08             	pushl  0x8(%ebp)
 804ab24:	6a 03                	push   $0x3
 804ab26:	cd 30                	int    $0x30
 804ab28:	83 c4 08             	add    $0x8,%esp
 804ab2b:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ab2e:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804ab31:	c9                   	leave  
 804ab32:	c3                   	ret    

0804ab33 <create>:

bool
create (const char *file, unsigned initial_size)
{
 804ab33:	55                   	push   %ebp
 804ab34:	89 e5                	mov    %esp,%ebp
 804ab36:	83 ec 10             	sub    $0x10,%esp
  return syscall2 (SYS_CREATE, file, initial_size);
 804ab39:	ff 75 0c             	pushl  0xc(%ebp)
 804ab3c:	ff 75 08             	pushl  0x8(%ebp)
 804ab3f:	6a 04                	push   $0x4
 804ab41:	cd 30                	int    $0x30
 804ab43:	83 c4 0c             	add    $0xc,%esp
 804ab46:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ab49:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804ab4c:	85 c0                	test   %eax,%eax
 804ab4e:	0f 95 c0             	setne  %al
}
 804ab51:	c9                   	leave  
 804ab52:	c3                   	ret    

0804ab53 <remove>:

bool
remove (const char *file)
{
 804ab53:	55                   	push   %ebp
 804ab54:	89 e5                	mov    %esp,%ebp
 804ab56:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_REMOVE, file);
 804ab59:	ff 75 08             	pushl  0x8(%ebp)
 804ab5c:	6a 05                	push   $0x5
 804ab5e:	cd 30                	int    $0x30
 804ab60:	83 c4 08             	add    $0x8,%esp
 804ab63:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ab66:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804ab69:	85 c0                	test   %eax,%eax
 804ab6b:	0f 95 c0             	setne  %al
}
 804ab6e:	c9                   	leave  
 804ab6f:	c3                   	ret    

0804ab70 <open>:

int
open (const char *file)
{
 804ab70:	55                   	push   %ebp
 804ab71:	89 e5                	mov    %esp,%ebp
 804ab73:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_OPEN, file);
 804ab76:	ff 75 08             	pushl  0x8(%ebp)
 804ab79:	6a 06                	push   $0x6
 804ab7b:	cd 30                	int    $0x30
 804ab7d:	83 c4 08             	add    $0x8,%esp
 804ab80:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ab83:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804ab86:	c9                   	leave  
 804ab87:	c3                   	ret    

0804ab88 <filesize>:

int
filesize (int fd) 
{
 804ab88:	55                   	push   %ebp
 804ab89:	89 e5                	mov    %esp,%ebp
 804ab8b:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_FILESIZE, fd);
 804ab8e:	ff 75 08             	pushl  0x8(%ebp)
 804ab91:	6a 07                	push   $0x7
 804ab93:	cd 30                	int    $0x30
 804ab95:	83 c4 08             	add    $0x8,%esp
 804ab98:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ab9b:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804ab9e:	c9                   	leave  
 804ab9f:	c3                   	ret    

0804aba0 <read>:

int
read (int fd, void *buffer, unsigned size)
{
 804aba0:	55                   	push   %ebp
 804aba1:	89 e5                	mov    %esp,%ebp
 804aba3:	83 ec 10             	sub    $0x10,%esp
  return syscall3 (SYS_READ, fd, buffer, size);
 804aba6:	ff 75 10             	pushl  0x10(%ebp)
 804aba9:	ff 75 0c             	pushl  0xc(%ebp)
 804abac:	ff 75 08             	pushl  0x8(%ebp)
 804abaf:	6a 08                	push   $0x8
 804abb1:	cd 30                	int    $0x30
 804abb3:	83 c4 10             	add    $0x10,%esp
 804abb6:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804abb9:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804abbc:	c9                   	leave  
 804abbd:	c3                   	ret    

0804abbe <write>:

int
write (int fd, const void *buffer, unsigned size)
{
 804abbe:	55                   	push   %ebp
 804abbf:	89 e5                	mov    %esp,%ebp
 804abc1:	83 ec 10             	sub    $0x10,%esp
  return syscall3 (SYS_WRITE, fd, buffer, size);
 804abc4:	ff 75 10             	pushl  0x10(%ebp)
 804abc7:	ff 75 0c             	pushl  0xc(%ebp)
 804abca:	ff 75 08             	pushl  0x8(%ebp)
 804abcd:	6a 09                	push   $0x9
 804abcf:	cd 30                	int    $0x30
 804abd1:	83 c4 10             	add    $0x10,%esp
 804abd4:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804abd7:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804abda:	c9                   	leave  
 804abdb:	c3                   	ret    

0804abdc <seek>:

void
seek (int fd, unsigned position) 
{
 804abdc:	55                   	push   %ebp
 804abdd:	89 e5                	mov    %esp,%ebp
 804abdf:	83 ec 10             	sub    $0x10,%esp
  syscall2 (SYS_SEEK, fd, position);
 804abe2:	ff 75 0c             	pushl  0xc(%ebp)
 804abe5:	ff 75 08             	pushl  0x8(%ebp)
 804abe8:	6a 0a                	push   $0xa
 804abea:	cd 30                	int    $0x30
 804abec:	83 c4 0c             	add    $0xc,%esp
 804abef:	89 45 fc             	mov    %eax,-0x4(%ebp)
}
 804abf2:	c9                   	leave  
 804abf3:	c3                   	ret    

0804abf4 <tell>:

unsigned
tell (int fd) 
{
 804abf4:	55                   	push   %ebp
 804abf5:	89 e5                	mov    %esp,%ebp
 804abf7:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_TELL, fd);
 804abfa:	ff 75 08             	pushl  0x8(%ebp)
 804abfd:	6a 0b                	push   $0xb
 804abff:	cd 30                	int    $0x30
 804ac01:	83 c4 08             	add    $0x8,%esp
 804ac04:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ac07:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804ac0a:	c9                   	leave  
 804ac0b:	c3                   	ret    

0804ac0c <close>:

void
close (int fd)
{
 804ac0c:	55                   	push   %ebp
 804ac0d:	89 e5                	mov    %esp,%ebp
 804ac0f:	83 ec 10             	sub    $0x10,%esp
  syscall1 (SYS_CLOSE, fd);
 804ac12:	ff 75 08             	pushl  0x8(%ebp)
 804ac15:	6a 0c                	push   $0xc
 804ac17:	cd 30                	int    $0x30
 804ac19:	83 c4 08             	add    $0x8,%esp
 804ac1c:	89 45 fc             	mov    %eax,-0x4(%ebp)
}
 804ac1f:	c9                   	leave  
 804ac20:	c3                   	ret    

0804ac21 <mmap>:

mapid_t
mmap (int fd, void *addr)
{
 804ac21:	55                   	push   %ebp
 804ac22:	89 e5                	mov    %esp,%ebp
 804ac24:	83 ec 10             	sub    $0x10,%esp
  return syscall2 (SYS_MMAP, fd, addr);
 804ac27:	ff 75 0c             	pushl  0xc(%ebp)
 804ac2a:	ff 75 08             	pushl  0x8(%ebp)
 804ac2d:	6a 0d                	push   $0xd
 804ac2f:	cd 30                	int    $0x30
 804ac31:	83 c4 0c             	add    $0xc,%esp
 804ac34:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ac37:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804ac3a:	c9                   	leave  
 804ac3b:	c3                   	ret    

0804ac3c <munmap>:

void
munmap (mapid_t mapid)
{
 804ac3c:	55                   	push   %ebp
 804ac3d:	89 e5                	mov    %esp,%ebp
 804ac3f:	83 ec 10             	sub    $0x10,%esp
  syscall1 (SYS_MUNMAP, mapid);
 804ac42:	ff 75 08             	pushl  0x8(%ebp)
 804ac45:	6a 0e                	push   $0xe
 804ac47:	cd 30                	int    $0x30
 804ac49:	83 c4 08             	add    $0x8,%esp
 804ac4c:	89 45 fc             	mov    %eax,-0x4(%ebp)
}
 804ac4f:	c9                   	leave  
 804ac50:	c3                   	ret    

0804ac51 <chdir>:

bool
chdir (const char *dir)
{
 804ac51:	55                   	push   %ebp
 804ac52:	89 e5                	mov    %esp,%ebp
 804ac54:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_CHDIR, dir);
 804ac57:	ff 75 08             	pushl  0x8(%ebp)
 804ac5a:	6a 0f                	push   $0xf
 804ac5c:	cd 30                	int    $0x30
 804ac5e:	83 c4 08             	add    $0x8,%esp
 804ac61:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ac64:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804ac67:	85 c0                	test   %eax,%eax
 804ac69:	0f 95 c0             	setne  %al
}
 804ac6c:	c9                   	leave  
 804ac6d:	c3                   	ret    

0804ac6e <mkdir>:

bool
mkdir (const char *dir)
{
 804ac6e:	55                   	push   %ebp
 804ac6f:	89 e5                	mov    %esp,%ebp
 804ac71:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_MKDIR, dir);
 804ac74:	ff 75 08             	pushl  0x8(%ebp)
 804ac77:	6a 10                	push   $0x10
 804ac79:	cd 30                	int    $0x30
 804ac7b:	83 c4 08             	add    $0x8,%esp
 804ac7e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804ac81:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804ac84:	85 c0                	test   %eax,%eax
 804ac86:	0f 95 c0             	setne  %al
}
 804ac89:	c9                   	leave  
 804ac8a:	c3                   	ret    

0804ac8b <readdir>:

bool
readdir (int fd, char name[READDIR_MAX_LEN + 1]) 
{
 804ac8b:	55                   	push   %ebp
 804ac8c:	89 e5                	mov    %esp,%ebp
 804ac8e:	83 ec 10             	sub    $0x10,%esp
  return syscall2 (SYS_READDIR, fd, name);
 804ac91:	ff 75 0c             	pushl  0xc(%ebp)
 804ac94:	ff 75 08             	pushl  0x8(%ebp)
 804ac97:	6a 11                	push   $0x11
 804ac99:	cd 30                	int    $0x30
 804ac9b:	83 c4 0c             	add    $0xc,%esp
 804ac9e:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804aca1:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804aca4:	85 c0                	test   %eax,%eax
 804aca6:	0f 95 c0             	setne  %al
}
 804aca9:	c9                   	leave  
 804acaa:	c3                   	ret    

0804acab <isdir>:

bool
isdir (int fd) 
{
 804acab:	55                   	push   %ebp
 804acac:	89 e5                	mov    %esp,%ebp
 804acae:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_ISDIR, fd);
 804acb1:	ff 75 08             	pushl  0x8(%ebp)
 804acb4:	6a 12                	push   $0x12
 804acb6:	cd 30                	int    $0x30
 804acb8:	83 c4 08             	add    $0x8,%esp
 804acbb:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804acbe:	8b 45 fc             	mov    -0x4(%ebp),%eax
 804acc1:	85 c0                	test   %eax,%eax
 804acc3:	0f 95 c0             	setne  %al
}
 804acc6:	c9                   	leave  
 804acc7:	c3                   	ret    

0804acc8 <inumber>:

int
inumber (int fd) 
{
 804acc8:	55                   	push   %ebp
 804acc9:	89 e5                	mov    %esp,%ebp
 804accb:	83 ec 10             	sub    $0x10,%esp
  return syscall1 (SYS_INUMBER, fd);
 804acce:	ff 75 08             	pushl  0x8(%ebp)
 804acd1:	6a 13                	push   $0x13
 804acd3:	cd 30                	int    $0x30
 804acd5:	83 c4 08             	add    $0x8,%esp
 804acd8:	89 45 fc             	mov    %eax,-0x4(%ebp)
 804acdb:	8b 45 fc             	mov    -0x4(%ebp),%eax
}
 804acde:	c9                   	leave  
 804acdf:	c3                   	ret    

0804ace0 <vprintf>:
/* The standard vprintf() function,
   which is like printf() but uses a va_list. */
int
vprintf (const char *format, va_list args) 
{
  return vhprintf (STDOUT_FILENO, format, args);
 804ace0:	55                   	push   %ebp
 804ace1:	89 e5                	mov    %esp,%ebp
 804ace3:	83 ec 18             	sub    $0x18,%esp
 804ace6:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ace9:	89 44 24 08          	mov    %eax,0x8(%esp)
 804aced:	8b 45 08             	mov    0x8(%ebp),%eax
 804acf0:	89 44 24 04          	mov    %eax,0x4(%esp)
 804acf4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804acfb:	e8 96 00 00 00       	call   804ad96 <vhprintf>
}
 804ad00:	c9                   	leave  
 804ad01:	c3                   	ret    

0804ad02 <hprintf>:

/* Like printf(), but writes output to the given HANDLE. */
int
hprintf (int handle, const char *format, ...) 
{
 804ad02:	55                   	push   %ebp
 804ad03:	89 e5                	mov    %esp,%ebp
 804ad05:	83 ec 28             	sub    $0x28,%esp
  va_list args;
  int retval;

  va_start (args, format);
 804ad08:	8d 45 10             	lea    0x10(%ebp),%eax
 804ad0b:	89 45 f0             	mov    %eax,-0x10(%ebp)
  retval = vhprintf (handle, format, args);
 804ad0e:	8b 45 f0             	mov    -0x10(%ebp),%eax
 804ad11:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ad15:	8b 45 0c             	mov    0xc(%ebp),%eax
 804ad18:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ad1c:	8b 45 08             	mov    0x8(%ebp),%eax
 804ad1f:	89 04 24             	mov    %eax,(%esp)
 804ad22:	e8 6f 00 00 00       	call   804ad96 <vhprintf>
 804ad27:	89 45 f4             	mov    %eax,-0xc(%ebp)
  va_end (args);

  return retval;
 804ad2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
 804ad2d:	c9                   	leave  
 804ad2e:	c3                   	ret    

0804ad2f <puts>:
/* Writes string S to the console, followed by a new-line
   character. */
int
puts (const char *s) 
{
  write (STDOUT_FILENO, s, strlen (s));
 804ad2f:	55                   	push   %ebp
 804ad30:	89 e5                	mov    %esp,%ebp
 804ad32:	83 ec 18             	sub    $0x18,%esp
 804ad35:	8b 45 08             	mov    0x8(%ebp),%eax
 804ad38:	89 04 24             	mov    %eax,(%esp)
 804ad3b:	e8 e8 f5 ff ff       	call   804a328 <strlen>
 804ad40:	89 44 24 08          	mov    %eax,0x8(%esp)
 804ad44:	8b 45 08             	mov    0x8(%ebp),%eax
 804ad47:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ad4b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804ad52:	e8 67 fe ff ff       	call   804abbe <write>
  putchar ('\n');
 804ad57:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 804ad5e:	e8 07 00 00 00       	call   804ad6a <putchar>

  return 0;
 804ad63:	b8 00 00 00 00       	mov    $0x0,%eax
}
 804ad68:	c9                   	leave  
 804ad69:	c3                   	ret    

0804ad6a <putchar>:

/* Writes C to the console. */
int
putchar (int c) 
{
  char c2 = c;
 804ad6a:	55                   	push   %ebp
 804ad6b:	89 e5                	mov    %esp,%ebp
 804ad6d:	83 ec 28             	sub    $0x28,%esp
 804ad70:	8b 45 08             	mov    0x8(%ebp),%eax
 804ad73:	88 45 f7             	mov    %al,-0x9(%ebp)
  write (STDOUT_FILENO, &c2, 1);
 804ad76:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
 804ad7d:	00 
 804ad7e:	8d 45 f7             	lea    -0x9(%ebp),%eax
 804ad81:	89 44 24 04          	mov    %eax,0x4(%esp)
 804ad85:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804ad8c:	e8 2d fe ff ff       	call   804abbe <write>
  return c;
 804ad91:	8b 45 08             	mov    0x8(%ebp),%eax
}
 804ad94:	c9                   	leave  
 804ad95:	c3                   	ret    

0804ad96 <vhprintf>:
/* Formats the printf() format specification FORMAT with
   arguments given in ARGS and writes the output to the given
   HANDLE. */
int
vhprintf (int handle, const char *format, va_list args) 
{
 804ad96:	55                   	push   %ebp
 804ad97:	89 e5                	mov    %esp,%ebp
 804ad99:	83 ec 68             	sub    $0x68,%esp
  struct vhprintf_aux aux;
  aux.p = aux.buf;
 804ad9c:	8d 45 ac             	lea    -0x54(%ebp),%eax
 804ad9f:	89 45 ec             	mov    %eax,-0x14(%ebp)
  aux.char_cnt = 0;
 804ada2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  aux.handle = handle;
 804ada9:	8b 45 08             	mov    0x8(%ebp),%eax
 804adac:	89 45 f4             	mov    %eax,-0xc(%ebp)
  __vprintf (format, args, add_char, &aux);
 804adaf:	8d 45 ac             	lea    -0x54(%ebp),%eax
 804adb2:	89 44 24 0c          	mov    %eax,0xc(%esp)
 804adb6:	c7 44 24 08 e0 ad 04 	movl   $0x804ade0,0x8(%esp)
 804adbd:	08 
 804adbe:	8b 45 10             	mov    0x10(%ebp),%eax
 804adc1:	89 44 24 04          	mov    %eax,0x4(%esp)
 804adc5:	8b 45 0c             	mov    0xc(%ebp),%eax
 804adc8:	89 04 24             	mov    %eax,(%esp)
 804adcb:	e8 ec df ff ff       	call   8048dbc <__vprintf>
  flush (&aux);
 804add0:	8d 45 ac             	lea    -0x54(%ebp),%eax
 804add3:	89 04 24             	mov    %eax,(%esp)
 804add6:	e8 58 00 00 00       	call   804ae33 <flush>
  return aux.char_cnt;
 804addb:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
 804adde:	c9                   	leave  
 804addf:	c3                   	ret    

0804ade0 <add_char>:

/* Adds C to the buffer in AUX, flushing it if the buffer fills
   up. */
static void
add_char (char c, void *aux_) 
{
 804ade0:	55                   	push   %ebp
 804ade1:	89 e5                	mov    %esp,%ebp
 804ade3:	83 ec 38             	sub    $0x38,%esp
 804ade6:	8b 45 08             	mov    0x8(%ebp),%eax
 804ade9:	88 45 e4             	mov    %al,-0x1c(%ebp)
  struct vhprintf_aux *aux = aux_;
 804adec:	8b 45 0c             	mov    0xc(%ebp),%eax
 804adef:	89 45 f4             	mov    %eax,-0xc(%ebp)
  *aux->p++ = c;
 804adf2:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804adf5:	8b 40 40             	mov    0x40(%eax),%eax
 804adf8:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx
 804adfc:	88 10                	mov    %dl,(%eax)
 804adfe:	8d 50 01             	lea    0x1(%eax),%edx
 804ae01:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ae04:	89 50 40             	mov    %edx,0x40(%eax)
  if (aux->p >= aux->buf + sizeof aux->buf)
 804ae07:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ae0a:	8b 40 40             	mov    0x40(%eax),%eax
 804ae0d:	8b 55 f4             	mov    -0xc(%ebp),%edx
 804ae10:	83 c2 40             	add    $0x40,%edx
 804ae13:	39 d0                	cmp    %edx,%eax
 804ae15:	72 0b                	jb     804ae22 <add_char+0x42>
    flush (aux);
 804ae17:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ae1a:	89 04 24             	mov    %eax,(%esp)
 804ae1d:	e8 11 00 00 00       	call   804ae33 <flush>
  aux->char_cnt++;
 804ae22:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ae25:	8b 40 44             	mov    0x44(%eax),%eax
 804ae28:	8d 50 01             	lea    0x1(%eax),%edx
 804ae2b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ae2e:	89 50 44             	mov    %edx,0x44(%eax)
}
 804ae31:	c9                   	leave  
 804ae32:	c3                   	ret    

0804ae33 <flush>:

/* Flushes the buffer in AUX. */
static void
flush (struct vhprintf_aux *aux)
{
 804ae33:	55                   	push   %ebp
 804ae34:	89 e5                	mov    %esp,%ebp
 804ae36:	83 ec 18             	sub    $0x18,%esp
  if (aux->p > aux->buf)
 804ae39:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae3c:	8b 50 40             	mov    0x40(%eax),%edx
 804ae3f:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae42:	39 c2                	cmp    %eax,%edx
 804ae44:	76 2c                	jbe    804ae72 <flush+0x3f>
    write (aux->handle, aux->buf, aux->p - aux->buf);
 804ae46:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae49:	8b 40 40             	mov    0x40(%eax),%eax
 804ae4c:	89 c2                	mov    %eax,%edx
 804ae4e:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae51:	89 d1                	mov    %edx,%ecx
 804ae53:	29 c1                	sub    %eax,%ecx
 804ae55:	89 c8                	mov    %ecx,%eax
 804ae57:	89 c1                	mov    %eax,%ecx
 804ae59:	8b 55 08             	mov    0x8(%ebp),%edx
 804ae5c:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae5f:	8b 40 48             	mov    0x48(%eax),%eax
 804ae62:	89 4c 24 08          	mov    %ecx,0x8(%esp)
 804ae66:	89 54 24 04          	mov    %edx,0x4(%esp)
 804ae6a:	89 04 24             	mov    %eax,(%esp)
 804ae6d:	e8 4c fd ff ff       	call   804abbe <write>
  aux->p = aux->buf;
 804ae72:	8b 55 08             	mov    0x8(%ebp),%edx
 804ae75:	8b 45 08             	mov    0x8(%ebp),%eax
 804ae78:	89 50 40             	mov    %edx,0x40(%eax)
}
 804ae7b:	c9                   	leave  
 804ae7c:	c3                   	ret    
 804ae7d:	90                   	nop
 804ae7e:	90                   	nop
 804ae7f:	90                   	nop

0804ae80 <debug_backtrace>:
   each of the functions we are nested within.  gdb or addr2line
   may be applied to kernel.o to translate these into file names,
   line numbers, and function names.  */
void
debug_backtrace (void) 
{
 804ae80:	55                   	push   %ebp
 804ae81:	89 e5                	mov    %esp,%ebp
 804ae83:	83 ec 28             	sub    $0x28,%esp
  static bool explained;
  void **frame;
  
  printf ("Call stack:");
 804ae86:	c7 04 24 80 b5 04 08 	movl   $0x804b580,(%esp)
 804ae8d:	e8 04 df ff ff       	call   8048d96 <printf>
  for (frame = __builtin_frame_address (0);
 804ae92:	89 e8                	mov    %ebp,%eax
 804ae94:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804ae97:	eb 20                	jmp    804aeb9 <debug_backtrace+0x39>
       frame != NULL && frame[0] != NULL;
       frame = frame[0]) 
    printf (" %p", frame[1]);
 804ae99:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804ae9c:	83 c0 04             	add    $0x4,%eax
 804ae9f:	8b 00                	mov    (%eax),%eax
 804aea1:	89 44 24 04          	mov    %eax,0x4(%esp)
 804aea5:	c7 04 24 8c b5 04 08 	movl   $0x804b58c,(%esp)
 804aeac:	e8 e5 de ff ff       	call   8048d96 <printf>
  void **frame;
  
  printf ("Call stack:");
  for (frame = __builtin_frame_address (0);
       frame != NULL && frame[0] != NULL;
       frame = frame[0]) 
 804aeb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804aeb4:	8b 00                	mov    (%eax),%eax
 804aeb6:	89 45 f4             	mov    %eax,-0xc(%ebp)
{
  static bool explained;
  void **frame;
  
  printf ("Call stack:");
  for (frame = __builtin_frame_address (0);
 804aeb9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
 804aebd:	74 09                	je     804aec8 <debug_backtrace+0x48>
       frame != NULL && frame[0] != NULL;
 804aebf:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804aec2:	8b 00                	mov    (%eax),%eax
{
  static bool explained;
  void **frame;
  
  printf ("Call stack:");
  for (frame = __builtin_frame_address (0);
 804aec4:	85 c0                	test   %eax,%eax
 804aec6:	75 d1                	jne    804ae99 <debug_backtrace+0x19>
       frame != NULL && frame[0] != NULL;
       frame = frame[0]) 
    printf (" %p", frame[1]);
  printf (".\n");
 804aec8:	c7 04 24 90 b5 04 08 	movl   $0x804b590,(%esp)
 804aecf:	e8 5b fe ff ff       	call   804ad2f <puts>

  if (!explained) 
 804aed4:	0f b6 05 64 cf 04 08 	movzbl 0x804cf64,%eax
 804aedb:	83 f0 01             	xor    $0x1,%eax
 804aede:	84 c0                	test   %al,%al
 804aee0:	74 13                	je     804aef5 <debug_backtrace+0x75>
    {
      explained = true;
 804aee2:	c6 05 64 cf 04 08 01 	movb   $0x1,0x804cf64
      printf ("The `backtrace' program can make call stacks useful.\n"
 804aee9:	c7 04 24 94 b5 04 08 	movl   $0x804b594,(%esp)
 804aef0:	e8 3a fe ff ff       	call   804ad2f <puts>
              "Read \"Backtraces\" in the \"Debugging Tools\" chapter\n"
              "of the Pintos documentation for more information.\n");
    }
}
 804aef5:	c9                   	leave  
 804aef6:	c3                   	ret    

Disassembly of section .rodata:

0804aef8 <base_d-0x214>:
 804aef8:	66 6f                	outsw  %ds:(%esi),(%dx)
 804aefa:	6f                   	outsl  %ds:(%esi),(%dx)
 804aefb:	62 61 72             	bound  %esp,0x72(%ecx)
 804aefe:	00 63 6b             	add    %ah,0x6b(%ebx)
 804af01:	73 75                	jae    804af78 <debug_backtrace+0xf8>
 804af03:	6d                   	insl   (%dx),%es:(%edi)
 804af04:	3a 20                	cmp    (%eax),%ah
 804af06:	25 6c 75 00 00       	and    $0x756c,%eax
 804af0b:	00 28                	add    %ch,(%eax)
 804af0d:	25 73 29 20 00       	and    $0x202973,%eax
 804af12:	0a 00                	or     (%eax),%al
 804af14:	3a 20                	cmp    (%eax),%ah
 804af16:	46                   	inc    %esi
 804af17:	41                   	inc    %ecx
 804af18:	49                   	dec    %ecx
 804af19:	4c                   	dec    %esp
 804af1a:	45                   	inc    %ebp
 804af1b:	44                   	inc    %esp
 804af1c:	0a 00                	or     (%eax),%al
 804af1e:	25 73 20 25 7a       	and    $0x7a252073,%eax
 804af23:	75 00                	jne    804af25 <debug_backtrace+0xa5>
 804af25:	65                   	gs
 804af26:	78 65                	js     804af8d <debug_backtrace+0x10d>
 804af28:	63 20                	arpl   %sp,(%eax)
 804af2a:	63 68 69             	arpl   %bp,0x69(%eax)
 804af2d:	6c                   	insb   (%dx),%es:(%edi)
 804af2e:	64 20 25 7a 75 20 6f 	and    %ah,%fs:0x6f20757a
 804af35:	66                   	data16
 804af36:	20 25 7a 75 3a 20    	and    %ah,0x203a757a
 804af3c:	22 25 73 22 00 00    	and    0x2273,%ah
 804af42:	00 00                	add    %al,(%eax)
 804af44:	77 61                	ja     804afa7 <debug_backtrace+0x127>
 804af46:	69 74 20 66 6f 72 20 	imul   $0x6320726f,0x66(%eax,%eiz,1),%esi
 804af4d:	63 
 804af4e:	68 69 6c 64 20       	push   $0x20646c69
 804af53:	25 7a 75 20 6f       	and    $0x6f20757a,%eax
 804af58:	66                   	data16
 804af59:	20 25 7a 75 20 72    	and    %ah,0x7220757a
 804af5f:	65                   	gs
 804af60:	74 75                	je     804afd7 <debug_backtrace+0x157>
 804af62:	72 6e                	jb     804afd2 <debug_backtrace+0x152>
 804af64:	65 64 20 25 64 20 28 	and    %ah,%fs:%gs:0x65282064
 804af6b:	65 
 804af6c:	78 70                	js     804afde <debug_backtrace+0x15e>
 804af6e:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
 804af73:	20 25 7a 75 29 00    	and    %ah,0x29757a
 804af79:	00 00                	add    %al,(%eax)
 804af7b:	00 73 69             	add    %dh,0x69(%ebx)
 804af7e:	7a 65                	jp     804afe5 <debug_backtrace+0x165>
 804af80:	20 6f 66             	and    %ch,0x66(%edi)
 804af83:	20 25 73 20 28 25    	and    %ah,0x25282073
 804af89:	7a 75                	jp     804b000 <debug_backtrace+0x180>
 804af8b:	29 20                	sub    %esp,(%eax)
 804af8d:	64 69 66 66 65 72 73 	imul   $0x20737265,%fs:0x66(%esi),%esp
 804af94:	20 
 804af95:	66                   	data16
 804af96:	72 6f                	jb     804b007 <debug_backtrace+0x187>
 804af98:	6d                   	insl   (%dx),%es:(%edi)
 804af99:	20 65 78             	and    %ah,0x78(%ebp)
 804af9c:	70 65                	jo     804b003 <debug_backtrace+0x183>
 804af9e:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 804afa2:	20 28                	and    %ch,(%eax)
 804afa4:	25 7a 75 29 00       	and    $0x29757a,%eax
 804afa9:	00 00                	add    %al,(%eax)
 804afab:	00 72 65             	add    %dh,0x65(%edx)
 804afae:	61                   	popa   
 804afaf:	64 20 6f 66          	and    %ch,%fs:0x66(%edi)
 804afb3:	20 25 7a 75 20 62    	and    %ah,0x6220757a
 804afb9:	79 74                	jns    804b02f <debug_backtrace+0x1af>
 804afbb:	65                   	gs
 804afbc:	73 20                	jae    804afde <debug_backtrace+0x15e>
 804afbe:	61                   	popa   
 804afbf:	74 20                	je     804afe1 <debug_backtrace+0x161>
 804afc1:	6f                   	outsl  %ds:(%esi),(%dx)
 804afc2:	66                   	data16
 804afc3:	66                   	data16
 804afc4:	73 65                	jae    804b02b <debug_backtrace+0x1ab>
 804afc6:	74 20                	je     804afe8 <debug_backtrace+0x168>
 804afc8:	25 7a 75 20 69       	and    $0x6920757a,%eax
 804afcd:	6e                   	outsb  %ds:(%esi),(%dx)
 804afce:	20 22                	and    %ah,(%edx)
 804afd0:	25 73 22 20 72       	and    $0x72202273,%eax
 804afd5:	65                   	gs
 804afd6:	74 75                	je     804b04d <debug_backtrace+0x1cd>
 804afd8:	72 6e                	jb     804b048 <debug_backtrace+0x1c8>
 804afda:	65 64 20 25 7a 75 00 	and    %ah,%fs:%gs:0x7600757a
 804afe1:	76 
 804afe2:	65                   	gs
 804afe3:	72 69                	jb     804b04e <debug_backtrace+0x1ce>
 804afe5:	66 69 65 64 20 63    	imul   $0x6320,0x64(%ebp),%sp
 804afeb:	6f                   	outsl  %ds:(%esi),(%dx)
 804afec:	6e                   	outsb  %ds:(%esi),(%dx)
 804afed:	74 65                	je     804b054 <debug_backtrace+0x1d4>
 804afef:	6e                   	outsb  %ds:(%esi),(%dx)
 804aff0:	74 73                	je     804b065 <debug_backtrace+0x1e5>
 804aff2:	20 6f 66             	and    %ch,0x66(%edi)
 804aff5:	20 22                	and    %ah,(%edx)
 804aff7:	25 73 22 00 6f       	and    $0x6f002273,%eax
 804affc:	70 65                	jo     804b063 <debug_backtrace+0x1e3>
 804affe:	6e                   	outsb  %ds:(%esi),(%dx)
 804afff:	20 22                	and    %ah,(%edx)
 804b001:	25 73 22 20 66       	and    $0x66202273,%eax
 804b006:	6f                   	outsl  %ds:(%esi),(%dx)
 804b007:	72 20                	jb     804b029 <debug_backtrace+0x1a9>
 804b009:	76 65                	jbe    804b070 <debug_backtrace+0x1f0>
 804b00b:	72 69                	jb     804b076 <debug_backtrace+0x1f6>
 804b00d:	66 69 63 61 74 69    	imul   $0x6974,0x61(%ebx),%sp
 804b013:	6f                   	outsl  %ds:(%esi),(%dx)
 804b014:	6e                   	outsb  %ds:(%esi),(%dx)
 804b015:	00 63 6c             	add    %ah,0x6c(%ebx)
 804b018:	6f                   	outsl  %ds:(%esi),(%dx)
 804b019:	73 65                	jae    804b080 <debug_backtrace+0x200>
 804b01b:	20 22                	and    %ah,(%edx)
 804b01d:	25 73 22 00 00       	and    $0x2273,%eax
 804b022:	00 00                	add    %al,(%eax)
 804b024:	25 7a 75 20 62       	and    $0x6220757a,%eax
 804b029:	79 74                	jns    804b09f <debug_backtrace+0x21f>
 804b02b:	65                   	gs
 804b02c:	73 20                	jae    804b04e <debug_backtrace+0x1ce>
 804b02e:	72 65                	jb     804b095 <debug_backtrace+0x215>
 804b030:	61                   	popa   
 804b031:	64 20 73 74          	and    %dh,%fs:0x74(%ebx)
 804b035:	61                   	popa   
 804b036:	72 74                	jb     804b0ac <debug_backtrace+0x22c>
 804b038:	69 6e 67 20 61 74 20 	imul   $0x20746120,0x67(%esi),%ebp
 804b03f:	6f                   	outsl  %ds:(%esi),(%dx)
 804b040:	66                   	data16
 804b041:	66                   	data16
 804b042:	73 65                	jae    804b0a9 <debug_backtrace+0x229>
 804b044:	74 20                	je     804b066 <debug_backtrace+0x1e6>
 804b046:	25 7a 75 20 69       	and    $0x6920757a,%eax
 804b04b:	6e                   	outsb  %ds:(%esi),(%dx)
 804b04c:	20 22                	and    %ah,(%edx)
 804b04e:	25 73 22 20 64       	and    $0x64202273,%eax
 804b053:	69 66 66 65 72 20 66 	imul   $0x66207265,0x66(%esi),%esp
 804b05a:	72 6f                	jb     804b0cb <debug_backtrace+0x24b>
 804b05c:	6d                   	insl   (%dx),%es:(%edi)
 804b05d:	20 65 78             	and    %ah,0x78(%ebp)
 804b060:	70 65                	jo     804b0c7 <debug_backtrace+0x247>
 804b062:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 804b066:	2e 00 53 68          	add    %dl,%cs:0x68(%ebx)
 804b06a:	6f                   	outsl  %ds:(%esi),(%dx)
 804b06b:	77 69                	ja     804b0d6 <debug_backtrace+0x256>
 804b06d:	6e                   	outsb  %ds:(%esi),(%dx)
 804b06e:	67 20 66 69          	addr16 and %ah,0x69(%bp)
 804b072:	72 73                	jb     804b0e7 <debug_backtrace+0x267>
 804b074:	74 20                	je     804b096 <debug_backtrace+0x216>
 804b076:	64 69 66 66 65 72 69 	imul   $0x6e697265,%fs:0x66(%esi),%esp
 804b07d:	6e 
 804b07e:	67 20 25             	addr16 and %ah,(%di)
 804b081:	7a 75                	jp     804b0f8 <debug_backtrace+0x278>
 804b083:	20 62 79             	and    %ah,0x79(%edx)
 804b086:	74 65                	je     804b0ed <debug_backtrace+0x26d>
 804b088:	73 2e                	jae    804b0b8 <debug_backtrace+0x238>
 804b08a:	00 44 61 74          	add    %al,0x74(%ecx,%eiz,2)
 804b08e:	61                   	popa   
 804b08f:	20 61 63             	and    %ah,0x63(%ecx)
 804b092:	74 75                	je     804b109 <debug_backtrace+0x289>
 804b094:	61                   	popa   
 804b095:	6c                   	insb   (%dx),%es:(%edi)
 804b096:	6c                   	insb   (%dx),%es:(%edi)
 804b097:	79 20                	jns    804b0b9 <debug_backtrace+0x239>
 804b099:	72 65                	jb     804b100 <debug_backtrace+0x280>
 804b09b:	61                   	popa   
 804b09c:	64 3a 00             	cmp    %fs:(%eax),%al
 804b09f:	45                   	inc    %ebp
 804b0a0:	78 70                	js     804b112 <base_d+0x6>
 804b0a2:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
 804b0a7:	20 64 61 74          	and    %ah,0x74(%ecx,%eiz,2)
 804b0ab:	61                   	popa   
 804b0ac:	3a 00                	cmp    (%eax),%al
 804b0ae:	00 00                	add    %al,(%eax)
 804b0b0:	25 7a 75 20 62       	and    $0x6220757a,%eax
 804b0b5:	79 74                	jns    804b12b <base_o+0x3>
 804b0b7:	65                   	gs
 804b0b8:	73 20                	jae    804b0da <debug_backtrace+0x25a>
 804b0ba:	72 65                	jb     804b121 <base_d+0x15>
 804b0bc:	61                   	popa   
 804b0bd:	64 20 73 74          	and    %dh,%fs:0x74(%ebx)
 804b0c1:	61                   	popa   
 804b0c2:	72 74                	jb     804b138 <base_o+0x10>
 804b0c4:	69 6e 67 20 61 74 20 	imul   $0x20746120,0x67(%esi),%ebp
 804b0cb:	6f                   	outsl  %ds:(%esi),(%dx)
 804b0cc:	66                   	data16
 804b0cd:	66                   	data16
 804b0ce:	73 65                	jae    804b135 <base_o+0xd>
 804b0d0:	74 20                	je     804b0f2 <debug_backtrace+0x272>
 804b0d2:	25 7a 75 20 69       	and    $0x6920757a,%eax
 804b0d7:	6e                   	outsb  %ds:(%esi),(%dx)
 804b0d8:	20 22                	and    %ah,(%edx)
 804b0da:	25 73 22 20 64       	and    $0x64202273,%eax
 804b0df:	69 66 66 65 72 20 66 	imul   $0x66207265,0x66(%esi),%esp
 804b0e6:	72 6f                	jb     804b157 <base_x+0xb>
 804b0e8:	6d                   	insl   (%dx),%es:(%edi)
 804b0e9:	20 65 78             	and    %ah,0x78(%ebp)
 804b0ec:	70 65                	jo     804b153 <base_x+0x7>
 804b0ee:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 804b0f2:	00 62 65             	add    %ah,0x65(%edx)
 804b0f5:	67 69 6e 00 65 6e 64 	addr16 imul $0x646e65,0x0(%bp),%ebp
 804b0fc:	00 
 804b0fd:	00 00                	add    %al,(%eax)
 804b0ff:	00 30                	add    %dh,(%eax)
 804b101:	31 32                	xor    %esi,(%edx)
 804b103:	33 34 35 36 37 38 39 	xor    0x39383736(,%esi,1),%esi
	...

0804b10c <base_d>:
 804b10c:	0a 00                	or     (%eax),%al
 804b10e:	00 00                	add    %al,(%eax)
 804b110:	00 b1 04 08 00 00    	add    %dh,0x804(%ecx)
 804b116:	00 00                	add    %al,(%eax)
 804b118:	03 00                	add    (%eax),%eax
 804b11a:	00 00                	add    %al,(%eax)
 804b11c:	30 31                	xor    %dh,(%ecx)
 804b11e:	32 33                	xor    (%ebx),%dh
 804b120:	34 35                	xor    $0x35,%al
 804b122:	36                   	ss
 804b123:	37                   	aaa    
 804b124:	00 00                	add    %al,(%eax)
	...

0804b128 <base_o>:
 804b128:	08 00                	or     %al,(%eax)
 804b12a:	00 00                	add    %al,(%eax)
 804b12c:	1c b1                	sbb    $0xb1,%al
 804b12e:	04 08                	add    $0x8,%al
 804b130:	00 00                	add    %al,(%eax)
 804b132:	00 00                	add    %al,(%eax)
 804b134:	03 00                	add    (%eax),%eax
 804b136:	00 00                	add    %al,(%eax)
 804b138:	30 31                	xor    %dh,(%ecx)
 804b13a:	32 33                	xor    (%ebx),%dh
 804b13c:	34 35                	xor    $0x35,%al
 804b13e:	36                   	ss
 804b13f:	37                   	aaa    
 804b140:	38 39                	cmp    %bh,(%ecx)
 804b142:	61                   	popa   
 804b143:	62 63 64             	bound  %esp,0x64(%ebx)
 804b146:	65                   	gs
 804b147:	66                   	data16
 804b148:	00 00                	add    %al,(%eax)
	...

0804b14c <base_x>:
 804b14c:	10 00                	adc    %al,(%eax)
 804b14e:	00 00                	add    %al,(%eax)
 804b150:	38 b1 04 08 78 00    	cmp    %dh,0x780804(%ecx)
 804b156:	00 00                	add    %al,(%eax)
 804b158:	04 00                	add    $0x0,%al
 804b15a:	00 00                	add    %al,(%eax)
 804b15c:	30 31                	xor    %dh,(%ecx)
 804b15e:	32 33                	xor    (%ebx),%dh
 804b160:	34 35                	xor    $0x35,%al
 804b162:	36                   	ss
 804b163:	37                   	aaa    
 804b164:	38 39                	cmp    %bh,(%ecx)
 804b166:	41                   	inc    %ecx
 804b167:	42                   	inc    %edx
 804b168:	43                   	inc    %ebx
 804b169:	44                   	inc    %esp
 804b16a:	45                   	inc    %ebp
 804b16b:	46                   	inc    %esi
 804b16c:	00 00                	add    %al,(%eax)
	...

0804b170 <base_X>:
 804b170:	10 00                	adc    %al,(%eax)
 804b172:	00 00                	add    %al,(%eax)
 804b174:	5c                   	pop    %esp
 804b175:	b1 04                	mov    $0x4,%cl
 804b177:	08 58 00             	or     %bl,0x0(%eax)
 804b17a:	00 00                	add    %al,(%eax)
 804b17c:	04 00                	add    $0x0,%al
 804b17e:	00 00                	add    %al,(%eax)
 804b180:	65                   	gs
 804b181:	78 65                	js     804b1e8 <base_X+0x78>
 804b183:	63 75 74             	arpl   %si,0x74(%ebp)
 804b186:	65 64 20 61 6e       	and    %ah,%fs:%gs:0x6e(%ecx)
 804b18b:	20 75 6e             	and    %dh,0x6e(%ebp)
 804b18e:	72 65                	jb     804b1f5 <base_X+0x85>
 804b190:	61                   	popa   
 804b191:	63 68 61             	arpl   %bp,0x61(%eax)
 804b194:	62 6c 65 20          	bound  %ebp,0x20(%ebp,%eiz,2)
 804b198:	73 74                	jae    804b20e <base_X+0x9e>
 804b19a:	61                   	popa   
 804b19b:	74 65                	je     804b202 <base_X+0x92>
 804b19d:	6d                   	insl   (%dx),%es:(%edi)
 804b19e:	65 6e                	outsb  %gs:(%esi),(%dx)
 804b1a0:	74 00                	je     804b1a2 <base_X+0x32>
 804b1a2:	2e                   	cs
 804b1a3:	2e                   	cs
 804b1a4:	2f                   	das    
 804b1a5:	2e                   	cs
 804b1a6:	2e                   	cs
 804b1a7:	2f                   	das    
 804b1a8:	6c                   	insb   (%dx),%es:(%edi)
 804b1a9:	69 62 2f 73 74 64 69 	imul   $0x69647473,0x2f(%edx),%esp
 804b1b0:	6f                   	outsl  %ds:(%esi),(%dx)
 804b1b1:	2e 63 00             	arpl   %ax,%cs:(%eax)
 804b1b4:	28 6e 75             	sub    %ch,0x75(%esi)
 804b1b7:	6c                   	insb   (%dx),%es:(%edi)
 804b1b8:	6c                   	insb   (%dx),%es:(%edi)
 804b1b9:	29 00                	sub    %eax,(%eax)
 804b1bb:	3c 3c                	cmp    $0x3c,%al
 804b1bd:	6e                   	outsb  %ds:(%esi),(%dx)
 804b1be:	6f                   	outsl  %ds:(%esi),(%dx)
 804b1bf:	20 25 25 25 63 20    	and    %ah,0x20632525
 804b1c5:	69 6e 20 6b 65 72 6e 	imul   $0x6e72656b,0x20(%esi),%ebp
 804b1cc:	65                   	gs
 804b1cd:	6c                   	insb   (%dx),%es:(%edi)
 804b1ce:	3e 3e 00 3c 3c       	add    %bh,%ds:(%esp,%edi,1)
 804b1d3:	6e                   	outsb  %ds:(%esi),(%dx)
 804b1d4:	6f                   	outsl  %ds:(%esi),(%dx)
 804b1d5:	20 25 25 25 63 20    	and    %ah,0x20632525
 804b1db:	63 6f 6e             	arpl   %bp,0x6e(%edi)
 804b1de:	76 65                	jbe    804b245 <base_X+0xd5>
 804b1e0:	72 73                	jb     804b255 <base_X+0xe5>
 804b1e2:	69 6f 6e 3e 3e 00 84 	imul   $0x84003e3e,0x6e(%edi),%ebp
 804b1e9:	92                   	xchg   %eax,%edx
 804b1ea:	04 08                	add    $0x8,%al
 804b1ec:	ad                   	lods   %ds:(%esi),%eax
 804b1ed:	92                   	xchg   %eax,%edx
 804b1ee:	04 08                	add    $0x8,%al
 804b1f0:	84 92 04 08 ad 92    	test   %dl,-0x6d52f7fc(%edx)
 804b1f6:	04 08                	add    $0x8,%al
 804b1f8:	ad                   	lods   %ds:(%esi),%eax
 804b1f9:	92                   	xchg   %eax,%edx
 804b1fa:	04 08                	add    $0x8,%al
 804b1fc:	ad                   	lods   %ds:(%esi),%eax
 804b1fd:	92                   	xchg   %eax,%edx
 804b1fe:	04 08                	add    $0x8,%al
 804b200:	ad                   	lods   %ds:(%esi),%eax
 804b201:	92                   	xchg   %eax,%edx
 804b202:	04 08                	add    $0x8,%al
 804b204:	ad                   	lods   %ds:(%esi),%eax
 804b205:	92                   	xchg   %eax,%edx
 804b206:	04 08                	add    $0x8,%al
 804b208:	ad                   	lods   %ds:(%esi),%eax
 804b209:	92                   	xchg   %eax,%edx
 804b20a:	04 08                	add    $0x8,%al
 804b20c:	ad                   	lods   %ds:(%esi),%eax
 804b20d:	92                   	xchg   %eax,%edx
 804b20e:	04 08                	add    $0x8,%al
 804b210:	ad                   	lods   %ds:(%esi),%eax
 804b211:	92                   	xchg   %eax,%edx
 804b212:	04 08                	add    $0x8,%al
 804b214:	ad                   	lods   %ds:(%esi),%eax
 804b215:	92                   	xchg   %eax,%edx
 804b216:	04 08                	add    $0x8,%al
 804b218:	ad                   	lods   %ds:(%esi),%eax
 804b219:	92                   	xchg   %eax,%edx
 804b21a:	04 08                	add    $0x8,%al
 804b21c:	ad                   	lods   %ds:(%esi),%eax
 804b21d:	92                   	xchg   %eax,%edx
 804b21e:	04 08                	add    $0x8,%al
 804b220:	ad                   	lods   %ds:(%esi),%eax
 804b221:	92                   	xchg   %eax,%edx
 804b222:	04 08                	add    $0x8,%al
 804b224:	ad                   	lods   %ds:(%esi),%eax
 804b225:	92                   	xchg   %eax,%edx
 804b226:	04 08                	add    $0x8,%al
 804b228:	ad                   	lods   %ds:(%esi),%eax
 804b229:	92                   	xchg   %eax,%edx
 804b22a:	04 08                	add    $0x8,%al
 804b22c:	ad                   	lods   %ds:(%esi),%eax
 804b22d:	92                   	xchg   %eax,%edx
 804b22e:	04 08                	add    $0x8,%al
 804b230:	ad                   	lods   %ds:(%esi),%eax
 804b231:	92                   	xchg   %eax,%edx
 804b232:	04 08                	add    $0x8,%al
 804b234:	db 8f 04 08 ad 92    	fisttpl -0x6d52f7fc(%edi)
 804b23a:	04 08                	add    $0x8,%al
 804b23c:	ad                   	lods   %ds:(%esi),%eax
 804b23d:	92                   	xchg   %eax,%edx
 804b23e:	04 08                	add    $0x8,%al
 804b240:	ad                   	lods   %ds:(%esi),%eax
 804b241:	92                   	xchg   %eax,%edx
 804b242:	04 08                	add    $0x8,%al
 804b244:	ad                   	lods   %ds:(%esi),%eax
 804b245:	92                   	xchg   %eax,%edx
 804b246:	04 08                	add    $0x8,%al
 804b248:	ad                   	lods   %ds:(%esi),%eax
 804b249:	92                   	xchg   %eax,%edx
 804b24a:	04 08                	add    $0x8,%al
 804b24c:	ad                   	lods   %ds:(%esi),%eax
 804b24d:	92                   	xchg   %eax,%edx
 804b24e:	04 08                	add    $0x8,%al
 804b250:	ad                   	lods   %ds:(%esi),%eax
 804b251:	92                   	xchg   %eax,%edx
 804b252:	04 08                	add    $0x8,%al
 804b254:	ad                   	lods   %ds:(%esi),%eax
 804b255:	92                   	xchg   %eax,%edx
 804b256:	04 08                	add    $0x8,%al
 804b258:	ad                   	lods   %ds:(%esi),%eax
 804b259:	92                   	xchg   %eax,%edx
 804b25a:	04 08                	add    $0x8,%al
 804b25c:	ad                   	lods   %ds:(%esi),%eax
 804b25d:	92                   	xchg   %eax,%edx
 804b25e:	04 08                	add    $0x8,%al
 804b260:	9b                   	fwait
 804b261:	91                   	xchg   %eax,%ecx
 804b262:	04 08                	add    $0x8,%al
 804b264:	51                   	push   %ecx
 804b265:	8e 04 08             	mov    (%eax,%ecx,1),%es
 804b268:	84 92 04 08 84 92    	test   %dl,-0x6d7bf7fc(%edx)
 804b26e:	04 08                	add    $0x8,%al
 804b270:	84 92 04 08 ad 92    	test   %dl,-0x6d52f7fc(%edx)
 804b276:	04 08                	add    $0x8,%al
 804b278:	51                   	push   %ecx
 804b279:	8e 04 08             	mov    (%eax,%ecx,1),%es
 804b27c:	ad                   	lods   %ds:(%esi),%eax
 804b27d:	92                   	xchg   %eax,%edx
 804b27e:	04 08                	add    $0x8,%al
 804b280:	ad                   	lods   %ds:(%esi),%eax
 804b281:	92                   	xchg   %eax,%edx
 804b282:	04 08                	add    $0x8,%al
 804b284:	ad                   	lods   %ds:(%esi),%eax
 804b285:	92                   	xchg   %eax,%edx
 804b286:	04 08                	add    $0x8,%al
 804b288:	ad                   	lods   %ds:(%esi),%eax
 804b289:	92                   	xchg   %eax,%edx
 804b28a:	04 08                	add    $0x8,%al
 804b28c:	84 92 04 08 db 8f    	test   %dl,-0x7024f7fc(%edx)
 804b292:	04 08                	add    $0x8,%al
 804b294:	2c 92                	sub    $0x92,%al
 804b296:	04 08                	add    $0x8,%al
 804b298:	ad                   	lods   %ds:(%esi),%eax
 804b299:	92                   	xchg   %eax,%edx
 804b29a:	04 08                	add    $0x8,%al
 804b29c:	ad                   	lods   %ds:(%esi),%eax
 804b29d:	92                   	xchg   %eax,%edx
 804b29e:	04 08                	add    $0x8,%al
 804b2a0:	d6                   	(bad)  
 804b2a1:	91                   	xchg   %eax,%ecx
 804b2a2:	04 08                	add    $0x8,%al
 804b2a4:	ad                   	lods   %ds:(%esi),%eax
 804b2a5:	92                   	xchg   %eax,%edx
 804b2a6:	04 08                	add    $0x8,%al
 804b2a8:	db 8f 04 08 ad 92    	fisttpl -0x6d52f7fc(%edi)
 804b2ae:	04 08                	add    $0x8,%al
 804b2b0:	ad                   	lods   %ds:(%esi),%eax
 804b2b1:	92                   	xchg   %eax,%edx
 804b2b2:	04 08                	add    $0x8,%al
 804b2b4:	db 8f 04 08 52 8f    	fisttpl -0x70adf7fc(%edi)
 804b2ba:	04 08                	add    $0x8,%al
 804b2bc:	66                   	data16
 804b2bd:	8e 04 08             	mov    (%eax,%ecx,1),%es
 804b2c0:	84 8e 04 08 a0 8e    	test   %cl,-0x715ff7fc(%esi)
 804b2c6:	04 08                	add    $0x8,%al
 804b2c8:	bb 8e 04 08 d4       	mov    $0xd408048e,%ebx
 804b2cd:	8e 04 08             	mov    (%eax,%ecx,1),%es
 804b2d0:	ef                   	out    %eax,(%dx)
 804b2d1:	8e 04 08             	mov    (%eax,%ecx,1),%es
 804b2d4:	05 8f 04 08 1d       	add    $0x1d08048f,%eax
 804b2d9:	8f 04 08             	popl   (%eax,%ecx,1)
 804b2dc:	c6                   	(bad)  
 804b2dd:	90                   	nop
 804b2de:	04 08                	add    $0x8,%al
 804b2e0:	f0 8f 04 08          	lock popl (%eax,%ecx,1)
 804b2e4:	0e                   	push   %cs
 804b2e5:	90                   	nop
 804b2e6:	04 08                	add    $0x8,%al
 804b2e8:	2c 90                	sub    $0x90,%al
 804b2ea:	04 08                	add    $0x8,%al
 804b2ec:	47                   	inc    %edi
 804b2ed:	90                   	nop
 804b2ee:	04 08                	add    $0x8,%al
 804b2f0:	60                   	pusha  
 804b2f1:	90                   	nop
 804b2f2:	04 08                	add    $0x8,%al
 804b2f4:	78 90                	js     804b286 <base_X+0x116>
 804b2f6:	04 08                	add    $0x8,%al
 804b2f8:	8e 90 04 08 ae 90    	mov    -0x6f51f7fc(%eax),%ss
 804b2fe:	04 08                	add    $0x8,%al
 804b300:	3d 93 04 08 81       	cmp    $0x81080493,%eax
 804b305:	93                   	xchg   %eax,%ebx
 804b306:	04 08                	add    $0x8,%al
 804b308:	81 93 04 08 4e 93 04 	adcl   $0x93810804,-0x6cb1f7fc(%ebx)
 804b30f:	08 81 93 
 804b312:	04 08                	add    $0x8,%al
 804b314:	81 93 04 08 81 93 04 	adcl   $0x93700804,-0x6c7ef7fc(%ebx)
 804b31b:	08 70 93 
 804b31e:	04 08                	add    $0x8,%al
 804b320:	81 93 04 08 81 93 04 	adcl   $0x93810804,-0x6c7ef7fc(%ebx)
 804b327:	08 81 93 
 804b32a:	04 08                	add    $0x8,%al
 804b32c:	2c 93                	sub    $0x93,%al
 804b32e:	04 08                	add    $0x8,%al
 804b330:	81 93 04 08 1b 93 04 	adcl   $0x93810804,-0x6ce4f7fc(%ebx)
 804b337:	08 81 93 
 804b33a:	04 08                	add    $0x8,%al
 804b33c:	81 93 04 08 5f 93 04 	adcl   $0x953e0804,-0x6ca0f7fc(%ebx)
 804b343:	08 3e 95 
 804b346:	04 08                	add    $0x8,%al
 804b348:	ae                   	scas   %es:(%edi),%al
 804b349:	95                   	xchg   %eax,%ebp
 804b34a:	04 08                	add    $0x8,%al
 804b34c:	64                   	fs
 804b34d:	95                   	xchg   %eax,%ebp
 804b34e:	04 08                	add    $0x8,%al
 804b350:	ae                   	scas   %es:(%edi),%al
 804b351:	95                   	xchg   %eax,%ebp
 804b352:	04 08                	add    $0x8,%al
 804b354:	70 95                	jo     804b2eb <base_X+0x17b>
 804b356:	04 08                	add    $0x8,%al
 804b358:	ae                   	scas   %es:(%edi),%al
 804b359:	95                   	xchg   %eax,%ebp
 804b35a:	04 08                	add    $0x8,%al
 804b35c:	ae                   	scas   %es:(%edi),%al
 804b35d:	95                   	xchg   %eax,%ebp
 804b35e:	04 08                	add    $0x8,%al
 804b360:	ae                   	scas   %es:(%edi),%al
 804b361:	95                   	xchg   %eax,%ebp
 804b362:	04 08                	add    $0x8,%al
 804b364:	ae                   	scas   %es:(%edi),%al
 804b365:	95                   	xchg   %eax,%ebp
 804b366:	04 08                	add    $0x8,%al
 804b368:	ae                   	scas   %es:(%edi),%al
 804b369:	95                   	xchg   %eax,%ebp
 804b36a:	04 08                	add    $0x8,%al
 804b36c:	ae                   	scas   %es:(%edi),%al
 804b36d:	95                   	xchg   %eax,%ebp
 804b36e:	04 08                	add    $0x8,%al
 804b370:	ae                   	scas   %es:(%edi),%al
 804b371:	95                   	xchg   %eax,%ebp
 804b372:	04 08                	add    $0x8,%al
 804b374:	96                   	xchg   %eax,%esi
 804b375:	95                   	xchg   %eax,%ebp
 804b376:	04 08                	add    $0x8,%al
 804b378:	ae                   	scas   %es:(%edi),%al
 804b379:	95                   	xchg   %eax,%ebp
 804b37a:	04 08                	add    $0x8,%al
 804b37c:	ae                   	scas   %es:(%edi),%al
 804b37d:	95                   	xchg   %eax,%ebp
 804b37e:	04 08                	add    $0x8,%al
 804b380:	ae                   	scas   %es:(%edi),%al
 804b381:	95                   	xchg   %eax,%ebp
 804b382:	04 08                	add    $0x8,%al
 804b384:	ae                   	scas   %es:(%edi),%al
 804b385:	95                   	xchg   %eax,%ebp
 804b386:	04 08                	add    $0x8,%al
 804b388:	ae                   	scas   %es:(%edi),%al
 804b389:	95                   	xchg   %eax,%ebp
 804b38a:	04 08                	add    $0x8,%al
 804b38c:	a2 95 04 08 25       	mov    %al,0x25080495
 804b391:	30 38                	xor    %bh,(%eax)
 804b393:	6a 78                	push   $0x78
 804b395:	20 20                	and    %ah,(%eax)
 804b397:	00 20                	add    %ah,(%eax)
 804b399:	20 20                	and    %ah,(%eax)
 804b39b:	00 25 30 32 68 68    	add    %ah,0x68683230
 804b3a1:	78 25                	js     804b3c8 <__func__.1658+0x23>
 804b3a3:	63 00                	arpl   %ax,(%eax)

0804b3a5 <__func__.1658>:
 804b3a5:	5f                   	pop    %edi
 804b3a6:	5f                   	pop    %edi
 804b3a7:	76 70                	jbe    804b419 <__func__.1658+0x74>
 804b3a9:	72 69                	jb     804b414 <__func__.1658+0x6f>
 804b3ab:	6e                   	outsb  %ds:(%esi),(%dx)
 804b3ac:	74 66                	je     804b414 <__func__.1658+0x6f>
 804b3ae:	00 64 73 74          	add    %ah,0x74(%ebx,%esi,2)
 804b3b2:	20 21                	and    %ah,(%ecx)
 804b3b4:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
 804b3b9:	4c                   	dec    %esp
 804b3ba:	20 7c 7c 20          	and    %bh,0x20(%esp,%edi,2)
 804b3be:	73 69                	jae    804b429 <__func__.1658+0x84>
 804b3c0:	7a 65                	jp     804b427 <__func__.1658+0x82>
 804b3c2:	20 3d 3d 20 30 00    	and    %bh,0x30203d
 804b3c8:	61                   	popa   
 804b3c9:	73 73                	jae    804b43e <__func__.1658+0x99>
 804b3cb:	65                   	gs
 804b3cc:	72 74                	jb     804b442 <__func__.1658+0x9d>
 804b3ce:	69 6f 6e 20 60 25 73 	imul   $0x73256020,0x6e(%edi),%ebp
 804b3d5:	27                   	daa    
 804b3d6:	20 66 61             	and    %ah,0x61(%esi)
 804b3d9:	69 6c 65 64 2e 00 2e 	imul   $0x2e2e002e,0x64(%ebp,%eiz,2),%ebp
 804b3e0:	2e 
 804b3e1:	2f                   	das    
 804b3e2:	2e                   	cs
 804b3e3:	2e                   	cs
 804b3e4:	2f                   	das    
 804b3e5:	6c                   	insb   (%dx),%es:(%edi)
 804b3e6:	69 62 2f 73 74 72 69 	imul   $0x69727473,0x2f(%edx),%esp
 804b3ed:	6e                   	outsb  %ds:(%esi),(%dx)
 804b3ee:	67 2e 63 00          	addr16 arpl %ax,%cs:(%bx,%si)
 804b3f2:	73 72                	jae    804b466 <__func__.1658+0xc1>
 804b3f4:	63 20                	arpl   %sp,(%eax)
 804b3f6:	21 3d 20 4e 55 4c    	and    %edi,0x4c554e20
 804b3fc:	4c                   	dec    %esp
 804b3fd:	20 7c 7c 20          	and    %bh,0x20(%esp,%edi,2)
 804b401:	73 69                	jae    804b46c <__func__.1658+0xc7>
 804b403:	7a 65                	jp     804b46a <__func__.1658+0xc5>
 804b405:	20 3d 3d 20 30 00    	and    %bh,0x30203d
 804b40b:	61                   	popa   
 804b40c:	20 21                	and    %ah,(%ecx)
 804b40e:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
 804b413:	4c                   	dec    %esp
 804b414:	20 7c 7c 20          	and    %bh,0x20(%esp,%edi,2)
 804b418:	73 69                	jae    804b483 <__func__.1658+0xde>
 804b41a:	7a 65                	jp     804b481 <__func__.1658+0xdc>
 804b41c:	20 3d 3d 20 30 00    	and    %bh,0x30203d
 804b422:	62 20                	bound  %esp,(%eax)
 804b424:	21 3d 20 4e 55 4c    	and    %edi,0x4c554e20
 804b42a:	4c                   	dec    %esp
 804b42b:	20 7c 7c 20          	and    %bh,0x20(%esp,%edi,2)
 804b42f:	73 69                	jae    804b49a <__func__.1658+0xf5>
 804b431:	7a 65                	jp     804b498 <__func__.1658+0xf3>
 804b433:	20 3d 3d 20 30 00    	and    %bh,0x30203d
 804b439:	61                   	popa   
 804b43a:	20 21                	and    %ah,(%ecx)
 804b43c:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
 804b441:	4c                   	dec    %esp
 804b442:	00 62 20             	add    %ah,0x20(%edx)
 804b445:	21 3d 20 4e 55 4c    	and    %edi,0x4c554e20
 804b44b:	4c                   	dec    %esp
 804b44c:	00 62 6c             	add    %ah,0x6c(%edx)
 804b44f:	6f                   	outsl  %ds:(%esi),(%dx)
 804b450:	63 6b 20             	arpl   %bp,0x20(%ebx)
 804b453:	21 3d 20 4e 55 4c    	and    %edi,0x4c554e20
 804b459:	4c                   	dec    %esp
 804b45a:	20 7c 7c 20          	and    %bh,0x20(%esp,%edi,2)
 804b45e:	73 69                	jae    804b4c9 <__func__.1647+0x4>
 804b460:	7a 65                	jp     804b4c7 <__func__.1647+0x2>
 804b462:	20 3d 3d 20 30 00    	and    %bh,0x30203d
 804b468:	73 74                	jae    804b4de <__func__.1560+0x3>
 804b46a:	72 69                	jb     804b4d5 <__func__.1599+0x1>
 804b46c:	6e                   	outsb  %ds:(%esi),(%dx)
 804b46d:	67 20 21             	addr16 and %ah,(%bx,%di)
 804b470:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
 804b475:	4c                   	dec    %esp
 804b476:	00 64 65 6c          	add    %ah,0x6c(%ebp,%eiz,2)
 804b47a:	69 6d 69 74 65 72 73 	imul   $0x73726574,0x69(%ebp),%ebp
 804b481:	20 21                	and    %ah,(%ecx)
 804b483:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
 804b488:	4c                   	dec    %esp
 804b489:	00 73 61             	add    %dh,0x61(%ebx)
 804b48c:	76 65                	jbe    804b4f3 <__func__.1413+0x1>
 804b48e:	5f                   	pop    %edi
 804b48f:	70 74                	jo     804b505 <__func__.1349+0x5>
 804b491:	72 20                	jb     804b4b3 <__func__.1658+0x10e>
 804b493:	21 3d 20 4e 55 4c    	and    %edi,0x4c554e20
 804b499:	4c                   	dec    %esp
 804b49a:	00 73 20             	add    %dh,0x20(%ebx)
 804b49d:	21 3d 20 4e 55 4c    	and    %edi,0x4c554e20
 804b4a3:	4c                   	dec    %esp
 804b4a4:	00 64 73 74          	add    %ah,0x74(%ebx,%esi,2)
 804b4a8:	20 21                	and    %ah,(%ecx)
 804b4aa:	3d 20 4e 55 4c       	cmp    $0x4c554e20,%eax
 804b4af:	4c                   	dec    %esp
 804b4b0:	00 73 72             	add    %dh,0x72(%ebx)
 804b4b3:	63 20                	arpl   %sp,(%eax)
 804b4b5:	21 3d 20 4e 55 4c    	and    %edi,0x4c554e20
 804b4bb:	4c                   	dec    %esp
	...

0804b4bd <__func__.1668>:
 804b4bd:	73 74                	jae    804b533 <__func__.1325+0x2b>
 804b4bf:	72 6c                	jb     804b52d <__func__.1325+0x25>
 804b4c1:	63 61 74             	arpl   %sp,0x74(%ecx)
	...

0804b4c5 <__func__.1647>:
 804b4c5:	73 74                	jae    804b53b <__func__.1325+0x33>
 804b4c7:	72 6c                	jb     804b535 <__func__.1325+0x2d>
 804b4c9:	63 70 79             	arpl   %si,0x79(%eax)
	...

0804b4cd <__func__.1615>:
 804b4cd:	73 74                	jae    804b543 <__func__.1325+0x3b>
 804b4cf:	72 6c                	jb     804b53d <__func__.1325+0x35>
 804b4d1:	65 6e                	outsb  %gs:(%esi),(%dx)
	...

0804b4d4 <__func__.1599>:
 804b4d4:	6d                   	insl   (%dx),%es:(%edi)
 804b4d5:	65                   	gs
 804b4d6:	6d                   	insl   (%dx),%es:(%edi)
 804b4d7:	73 65                	jae    804b53e <__func__.1325+0x36>
 804b4d9:	74 00                	je     804b4db <__func__.1560>

0804b4db <__func__.1560>:
 804b4db:	73 74                	jae    804b551 <__func__.1325+0x49>
 804b4dd:	72 74                	jb     804b553 <__func__.1325+0x4b>
 804b4df:	6f                   	outsl  %ds:(%esi),(%dx)
 804b4e0:	6b 5f 72 00          	imul   $0x0,0x72(%edi),%ebx

0804b4e4 <__func__.1462>:
 804b4e4:	73 74                	jae    804b55a <__func__.1325+0x52>
 804b4e6:	72 63                	jb     804b54b <__func__.1325+0x43>
 804b4e8:	68 72 00 6d 65       	push   $0x656d0072

0804b4eb <__func__.1443>:
 804b4eb:	6d                   	insl   (%dx),%es:(%edi)
 804b4ec:	65                   	gs
 804b4ed:	6d                   	insl   (%dx),%es:(%edi)
 804b4ee:	63 68 72             	arpl   %bp,0x72(%eax)
	...

0804b4f2 <__func__.1413>:
 804b4f2:	73 74                	jae    804b568 <__func__.1325+0x60>
 804b4f4:	72 63                	jb     804b559 <__func__.1325+0x51>
 804b4f6:	6d                   	insl   (%dx),%es:(%edi)
 804b4f7:	70 00                	jo     804b4f9 <__func__.1381>

0804b4f9 <__func__.1381>:
 804b4f9:	6d                   	insl   (%dx),%es:(%edi)
 804b4fa:	65                   	gs
 804b4fb:	6d                   	insl   (%dx),%es:(%edi)
 804b4fc:	63 6d 70             	arpl   %bp,0x70(%ebp)
	...

0804b500 <__func__.1349>:
 804b500:	6d                   	insl   (%dx),%es:(%edi)
 804b501:	65                   	gs
 804b502:	6d                   	insl   (%dx),%es:(%edi)
 804b503:	6d                   	insl   (%dx),%es:(%edi)
 804b504:	6f                   	outsl  %ds:(%esi),(%dx)
 804b505:	76 65                	jbe    804b56c <__func__.1325+0x64>
	...

0804b508 <__func__.1325>:
 804b508:	6d                   	insl   (%dx),%es:(%edi)
 804b509:	65                   	gs
 804b50a:	6d                   	insl   (%dx),%es:(%edi)
 804b50b:	63 70 79             	arpl   %si,0x79(%eax)
 804b50e:	00 00                	add    %al,(%eax)
 804b510:	55                   	push   %ebp
 804b511:	73 65                	jae    804b578 <__func__.1331>
 804b513:	72 20                	jb     804b535 <__func__.1325+0x2d>
 804b515:	70 72                	jo     804b589 <__func__.1331+0x11>
 804b517:	6f                   	outsl  %ds:(%esi),(%dx)
 804b518:	63 65 73             	arpl   %sp,0x73(%ebp)
 804b51b:	73 20                	jae    804b53d <__func__.1325+0x35>
 804b51d:	41                   	inc    %ecx
 804b51e:	42                   	inc    %edx
 804b51f:	4f                   	dec    %edi
 804b520:	52                   	push   %edx
 804b521:	54                   	push   %esp
 804b522:	20 61 74             	and    %ah,0x74(%ecx)
 804b525:	20 25 73 3a 25 64    	and    %ah,0x64253a73
 804b52b:	20 69 6e             	and    %ch,0x6e(%ecx)
 804b52e:	20 25 73 28 29 3a    	and    %ah,0x3a292873
 804b534:	20 00                	and    %al,(%eax)
 804b536:	00 00                	add    %al,(%eax)
 804b538:	65                   	gs
 804b539:	78 65                	js     804b5a0 <__func__.1331+0x28>
 804b53b:	63 75 74             	arpl   %si,0x74(%ebp)
 804b53e:	65 64 20 61 6e       	and    %ah,%fs:%gs:0x6e(%ecx)
 804b543:	20 75 6e             	and    %dh,0x6e(%ebp)
 804b546:	72 65                	jb     804b5ad <__func__.1331+0x35>
 804b548:	61                   	popa   
 804b549:	63 68 61             	arpl   %bp,0x61(%eax)
 804b54c:	62 6c 65 20          	bound  %ebp,0x20(%ebp,%eiz,2)
 804b550:	73 74                	jae    804b5c6 <__func__.1331+0x4e>
 804b552:	61                   	popa   
 804b553:	74 65                	je     804b5ba <__func__.1331+0x42>
 804b555:	6d                   	insl   (%dx),%es:(%edi)
 804b556:	65 6e                	outsb  %gs:(%esi),(%dx)
 804b558:	74 00                	je     804b55a <__func__.1325+0x52>
 804b55a:	2e                   	cs
 804b55b:	2e                   	cs
 804b55c:	2f                   	das    
 804b55d:	2e                   	cs
 804b55e:	2e                   	cs
 804b55f:	2f                   	das    
 804b560:	6c                   	insb   (%dx),%es:(%edi)
 804b561:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 804b568:	2f                   	das    
 804b569:	73 79                	jae    804b5e4 <__func__.1331+0x6c>
 804b56b:	73 63                	jae    804b5d0 <__func__.1331+0x58>
 804b56d:	61                   	popa   
 804b56e:	6c                   	insb   (%dx),%es:(%edi)
 804b56f:	6c                   	insb   (%dx),%es:(%edi)
 804b570:	2e 63 00             	arpl   %ax,%cs:(%eax)

0804b573 <__func__.1337>:
 804b573:	65                   	gs
 804b574:	78 69                	js     804b5df <__func__.1331+0x67>
 804b576:	74 00                	je     804b578 <__func__.1331>

0804b578 <__func__.1331>:
 804b578:	68 61 6c 74 00       	push   $0x746c61
 804b57d:	00 00                	add    %al,(%eax)
 804b57f:	00 43 61             	add    %al,0x61(%ebx)
 804b582:	6c                   	insb   (%dx),%es:(%edi)
 804b583:	6c                   	insb   (%dx),%es:(%edi)
 804b584:	20 73 74             	and    %dh,0x74(%ebx)
 804b587:	61                   	popa   
 804b588:	63 6b 3a             	arpl   %bp,0x3a(%ebx)
 804b58b:	00 20                	add    %ah,(%eax)
 804b58d:	25 70 00 2e 00       	and    $0x2e0070,%eax
 804b592:	00 00                	add    %al,(%eax)
 804b594:	54                   	push   %esp
 804b595:	68 65 20 60 62       	push   $0x62602065
 804b59a:	61                   	popa   
 804b59b:	63 6b 74             	arpl   %bp,0x74(%ebx)
 804b59e:	72 61                	jb     804b601 <__func__.1331+0x89>
 804b5a0:	63 65 27             	arpl   %sp,0x27(%ebp)
 804b5a3:	20 70 72             	and    %dh,0x72(%eax)
 804b5a6:	6f                   	outsl  %ds:(%esi),(%dx)
 804b5a7:	67 72 61             	addr16 jb 804b60b <__func__.1331+0x93>
 804b5aa:	6d                   	insl   (%dx),%es:(%edi)
 804b5ab:	20 63 61             	and    %ah,0x61(%ebx)
 804b5ae:	6e                   	outsb  %ds:(%esi),(%dx)
 804b5af:	20 6d 61             	and    %ch,0x61(%ebp)
 804b5b2:	6b 65 20 63          	imul   $0x63,0x20(%ebp),%esp
 804b5b6:	61                   	popa   
 804b5b7:	6c                   	insb   (%dx),%es:(%edi)
 804b5b8:	6c                   	insb   (%dx),%es:(%edi)
 804b5b9:	20 73 74             	and    %dh,0x74(%ebx)
 804b5bc:	61                   	popa   
 804b5bd:	63 6b 73             	arpl   %bp,0x73(%ebx)
 804b5c0:	20 75 73             	and    %dh,0x73(%ebp)
 804b5c3:	65                   	gs
 804b5c4:	66                   	data16
 804b5c5:	75 6c                	jne    804b633 <__func__.1331+0xbb>
 804b5c7:	2e 0a 52 65          	or     %cs:0x65(%edx),%dl
 804b5cb:	61                   	popa   
 804b5cc:	64 20 22             	and    %ah,%fs:(%edx)
 804b5cf:	42                   	inc    %edx
 804b5d0:	61                   	popa   
 804b5d1:	63 6b 74             	arpl   %bp,0x74(%ebx)
 804b5d4:	72 61                	jb     804b637 <__func__.1331+0xbf>
 804b5d6:	63 65 73             	arpl   %sp,0x73(%ebp)
 804b5d9:	22 20                	and    (%eax),%ah
 804b5db:	69 6e 20 74 68 65 20 	imul   $0x20656874,0x20(%esi),%ebp
 804b5e2:	22 44 65 62          	and    0x62(%ebp,%eiz,2),%al
 804b5e6:	75 67                	jne    804b64f <__func__.1331+0xd7>
 804b5e8:	67 69 6e 67 20 54 6f 	addr16 imul $0x6f6f5420,0x67(%bp),%ebp
 804b5ef:	6f 
 804b5f0:	6c                   	insb   (%dx),%es:(%edi)
 804b5f1:	73 22                	jae    804b615 <__func__.1331+0x9d>
 804b5f3:	20 63 68             	and    %ah,0x68(%ebx)
 804b5f6:	61                   	popa   
 804b5f7:	70 74                	jo     804b66d <__func__.1331+0xf5>
 804b5f9:	65                   	gs
 804b5fa:	72 0a                	jb     804b606 <__func__.1331+0x8e>
 804b5fc:	6f                   	outsl  %ds:(%esi),(%dx)
 804b5fd:	66                   	data16
 804b5fe:	20 74 68 65          	and    %dh,0x65(%eax,%ebp,2)
 804b602:	20 50 69             	and    %dl,0x69(%eax)
 804b605:	6e                   	outsb  %ds:(%esi),(%dx)
 804b606:	74 6f                	je     804b677 <__func__.1331+0xff>
 804b608:	73 20                	jae    804b62a <__func__.1331+0xb2>
 804b60a:	64 6f                	outsl  %fs:(%esi),(%dx)
 804b60c:	63 75 6d             	arpl   %si,0x6d(%ebp)
 804b60f:	65 6e                	outsb  %gs:(%esi),(%dx)
 804b611:	74 61                	je     804b674 <__func__.1331+0xfc>
 804b613:	74 69                	je     804b67e <__func__.1331+0x106>
 804b615:	6f                   	outsl  %ds:(%esi),(%dx)
 804b616:	6e                   	outsb  %ds:(%esi),(%dx)
 804b617:	20 66 6f             	and    %ah,0x6f(%esi)
 804b61a:	72 20                	jb     804b63c <__func__.1331+0xc4>
 804b61c:	6d                   	insl   (%dx),%es:(%edi)
 804b61d:	6f                   	outsl  %ds:(%esi),(%dx)
 804b61e:	72 65                	jb     804b685 <__func__.1331+0x10d>
 804b620:	20 69 6e             	and    %ch,0x6e(%ecx)
 804b623:	66 6f                	outsw  %ds:(%esi),(%dx)
 804b625:	72 6d                	jb     804b694 <__func__.1331+0x11c>
 804b627:	61                   	popa   
 804b628:	74 69                	je     804b693 <__func__.1331+0x11b>
 804b62a:	6f                   	outsl  %ds:(%esi),(%dx)
 804b62b:	6e                   	outsb  %ds:(%esi),(%dx)
 804b62c:	2e                   	cs
	...

Disassembly of section .data:

0804c640 <crctab>:
 804c640:	00 00                	add    %al,(%eax)
 804c642:	00 00                	add    %al,(%eax)
 804c644:	b7 1d                	mov    $0x1d,%bh
 804c646:	c1 04 6e 3b          	roll   $0x3b,(%esi,%ebp,2)
 804c64a:	82                   	(bad)  
 804c64b:	09 d9                	or     %ebx,%ecx
 804c64d:	26                   	es
 804c64e:	43                   	inc    %ebx
 804c64f:	0d dc 76 04 13       	or     $0x130476dc,%eax
 804c654:	6b 6b c5 17          	imul   $0x17,-0x3b(%ebx),%ebp
 804c658:	b2 4d                	mov    $0x4d,%dl
 804c65a:	86 1a                	xchg   %bl,(%edx)
 804c65c:	05 50 47 1e b8       	add    $0xb81e4750,%eax
 804c661:	ed                   	in     (%dx),%eax
 804c662:	08 26                	or     %ah,(%esi)
 804c664:	0f f0                	(bad)  
 804c666:	c9                   	leave  
 804c667:	22 d6                	and    %dh,%dl
 804c669:	d6                   	(bad)  
 804c66a:	8a 2f                	mov    (%edi),%ch
 804c66c:	61                   	popa   
 804c66d:	cb                   	lret   
 804c66e:	4b                   	dec    %ebx
 804c66f:	2b 64 9b 0c          	sub    0xc(%ebx,%ebx,4),%esp
 804c673:	35 d3 86 cd 31       	xor    $0x31cd86d3,%eax
 804c678:	0a a0 8e 3c bd bd    	or     -0x4242c372(%eax),%ah
 804c67e:	4f                   	dec    %edi
 804c67f:	38 70 db             	cmp    %dh,-0x25(%eax)
 804c682:	11 4c c7 c6          	adc    %ecx,-0x3a(%edi,%eax,8)
 804c686:	d0 48 1e             	rorb   0x1e(%eax)
 804c689:	e0 93                	loopne 804c61e <__func__.1331+0x10a6>
 804c68b:	45                   	inc    %ebp
 804c68c:	a9 fd 52 41 ac       	test   $0xac4152fd,%eax
 804c691:	ad                   	lods   %ds:(%esi),%eax
 804c692:	15 5f 1b b0 d4       	adc    $0xd4b01b5f,%eax
 804c697:	5b                   	pop    %ebx
 804c698:	c2 96 97             	ret    $0x9796
 804c69b:	56                   	push   %esi
 804c69c:	75 8b                	jne    804c629 <__func__.1331+0x10b1>
 804c69e:	56                   	push   %esi
 804c69f:	52                   	push   %edx
 804c6a0:	c8 36 19 6a          	enter  $0x1936,$0x6a
 804c6a4:	7f 2b                	jg     804c6d1 <crctab+0x91>
 804c6a6:	d8 6e a6             	fsubrs -0x5a(%esi)
 804c6a9:	0d 9b 63 11 10       	or     $0x1011639b,%eax
 804c6ae:	5a                   	pop    %edx
 804c6af:	67 14 40             	addr16 adc $0x40,%al
 804c6b2:	1d 79 a3 5d dc       	sbb    $0xdc5da379,%eax
 804c6b7:	7d 7a                	jge    804c733 <crctab+0xf3>
 804c6b9:	7b 9f                	jnp    804c65a <crctab+0x1a>
 804c6bb:	70 cd                	jo     804c68a <crctab+0x4a>
 804c6bd:	66 5e                	pop    %si
 804c6bf:	74 e0                	je     804c6a1 <crctab+0x61>
 804c6c1:	b6 23                	mov    $0x23,%dh
 804c6c3:	98                   	cwtl   
 804c6c4:	57                   	push   %edi
 804c6c5:	ab                   	stos   %eax,%es:(%edi)
 804c6c6:	e2 9c                	loop   804c664 <crctab+0x24>
 804c6c8:	8e 8d a1 91 39 90    	mov    -0x6fc66e5f(%ebp),%cs
 804c6ce:	60                   	pusha  
 804c6cf:	95                   	xchg   %eax,%ebp
 804c6d0:	3c c0                	cmp    $0xc0,%al
 804c6d2:	27                   	daa    
 804c6d3:	8b 8b dd e6 8f 52    	mov    0x528fe6dd(%ebx),%ecx
 804c6d9:	fb                   	sti    
 804c6da:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 804c6db:	82                   	(bad)  
 804c6dc:	e5 e6                	in     $0xe6,%eax
 804c6de:	64 86 58 5b          	xchg   %bl,%fs:0x5b(%eax)
 804c6e2:	2b be ef 46 ea ba    	sub    -0x4515b911(%esi),%edi
 804c6e8:	36                   	ss
 804c6e9:	60                   	pusha  
 804c6ea:	a9 b7 81 7d 68       	test   $0x687d81b7,%eax
 804c6ef:	b3 84                	mov    $0x84,%bl
 804c6f1:	2d 2f ad 33 30       	sub    $0x3033ad2f,%eax
 804c6f6:	ee                   	out    %al,(%dx)
 804c6f7:	a9 ea 16 ad a4       	test   $0xa4ad16ea,%eax
 804c6fc:	5d                   	pop    %ebp
 804c6fd:	0b 6c a0 90          	or     -0x70(%eax,%eiz,4),%ebp
 804c701:	6d                   	insl   (%dx),%es:(%edi)
 804c702:	32 d4                	xor    %ah,%dl
 804c704:	27                   	daa    
 804c705:	70 f3                	jo     804c6fa <crctab+0xba>
 804c707:	d0 fe                	sar    %dh
 804c709:	56                   	push   %esi
 804c70a:	b0 dd                	mov    $0xdd,%al
 804c70c:	49                   	dec    %ecx
 804c70d:	4b                   	dec    %ebx
 804c70e:	71 d9                	jno    804c6e9 <crctab+0xa9>
 804c710:	4c                   	dec    %esp
 804c711:	1b 36                	sbb    (%esi),%esi
 804c713:	c7                   	(bad)  
 804c714:	fb                   	sti    
 804c715:	06                   	push   %es
 804c716:	f7 c3 22 20 b4 ce    	test   $0xceb42022,%ebx
 804c71c:	95                   	xchg   %eax,%ebp
 804c71d:	3d 75 ca 28 80       	cmp    $0x8028ca75,%eax
 804c722:	3a f2                	cmp    %dl,%dh
 804c724:	9f                   	lahf   
 804c725:	9d                   	popf   
 804c726:	fb                   	sti    
 804c727:	f6 46 bb b8          	testb  $0xb8,-0x45(%esi)
 804c72b:	fb                   	sti    
 804c72c:	f1                   	icebp  
 804c72d:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
 804c72e:	79 ff                	jns    804c72f <crctab+0xef>
 804c730:	f4                   	hlt    
 804c731:	f6 3e                	idivb  (%esi)
 804c733:	e1 43                	loope  804c778 <crctab+0x138>
 804c735:	eb ff                	jmp    804c736 <crctab+0xf6>
 804c737:	e5 9a                	in     $0x9a,%eax
 804c739:	cd bc                	int    $0xbc
 804c73b:	e8 2d d0 7d ec       	call   f482976d <test_name+0xec7dc805>
 804c740:	77 70                	ja     804c7b2 <crctab+0x172>
 804c742:	86 34 c0             	xchg   %dh,(%eax,%eax,8)
 804c745:	6d                   	insl   (%dx),%es:(%edi)
 804c746:	47                   	inc    %edi
 804c747:	30 19                	xor    %bl,(%ecx)
 804c749:	4b                   	dec    %ebx
 804c74a:	04 3d                	add    $0x3d,%al
 804c74c:	ae                   	scas   %es:(%edi),%al
 804c74d:	56                   	push   %esi
 804c74e:	c5 39                	lds    (%ecx),%edi
 804c750:	ab                   	stos   %eax,%es:(%edi)
 804c751:	06                   	push   %es
 804c752:	82                   	(bad)  
 804c753:	27                   	daa    
 804c754:	1c 1b                	sbb    $0x1b,%al
 804c756:	43                   	inc    %ebx
 804c757:	23 c5                	and    %ebp,%eax
 804c759:	3d 00 2e 72 20       	cmp    $0x20722e00,%eax
 804c75e:	c1 2a cf             	shrl   $0xcf,(%edx)
 804c761:	9d                   	popf   
 804c762:	8e 12                	mov    (%edx),%ss
 804c764:	78 80                	js     804c6e6 <crctab+0xa6>
 804c766:	4f                   	dec    %edi
 804c767:	16                   	push   %ss
 804c768:	a1 a6 0c 1b 16       	mov    0x161b0ca6,%eax
 804c76d:	bb cd 1f 13 eb       	mov    $0xeb131fcd,%ebx
 804c772:	8a 01                	mov    (%ecx),%al
 804c774:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 804c775:	f6                   	(bad)  
 804c776:	4b                   	dec    %ebx
 804c777:	05 7d d0 08 08       	add    $0x808d07d,%eax
 804c77c:	ca cd c9             	lret   $0xc9cd
 804c77f:	0c 07                	or     $0x7,%al
 804c781:	ab                   	stos   %eax,%es:(%edi)
 804c782:	97                   	xchg   %eax,%edi
 804c783:	78 b0                	js     804c735 <crctab+0xf5>
 804c785:	b6 56                	mov    $0x56,%dh
 804c787:	7c 69                	jl     804c7f2 <crctab+0x1b2>
 804c789:	90                   	nop
 804c78a:	15 71 de 8d d4       	adc    $0xd48dde71,%eax
 804c78f:	75 db                	jne    804c76c <crctab+0x12c>
 804c791:	dd 93 6b 6c c0 52    	fstl   0x52c06c6b(%ebx)
 804c797:	6f                   	outsl  %ds:(%esi),(%dx)
 804c798:	b5 e6                	mov    $0xe6,%ch
 804c79a:	11 62 02             	adc    %esp,0x2(%edx)
 804c79d:	fb                   	sti    
 804c79e:	d0 66 bf             	shlb   -0x41(%esi)
 804c7a1:	46                   	inc    %esi
 804c7a2:	9f                   	lahf   
 804c7a3:	5e                   	pop    %esi
 804c7a4:	08 5b 5e             	or     %bl,0x5e(%ebx)
 804c7a7:	5a                   	pop    %edx
 804c7a8:	d1 7d 1d             	sarl   0x1d(%ebp)
 804c7ab:	57                   	push   %edi
 804c7ac:	66 60                	pushaw 
 804c7ae:	dc 53 63             	fcoml  0x63(%ebx)
 804c7b1:	30 9b 4d d4 2d 5a    	xor    %bl,0x5a2dd44d(%ebx)
 804c7b7:	49                   	dec    %ecx
 804c7b8:	0d 0b 19 44 ba       	or     $0xba44190b,%eax
 804c7bd:	16                   	push   %ss
 804c7be:	d8 40 97             	fadds  -0x69(%eax)
 804c7c1:	c6                   	(bad)  
 804c7c2:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 804c7c3:	ac                   	lods   %ds:(%esi),%al
 804c7c4:	20 db                	and    %bl,%bl
 804c7c6:	64                   	fs
 804c7c7:	a8 f9                	test   $0xf9,%al
 804c7c9:	fd                   	std    
 804c7ca:	27                   	daa    
 804c7cb:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 804c7cc:	4e                   	dec    %esi
 804c7cd:	e0 e6                	loopne 804c7b5 <crctab+0x175>
 804c7cf:	a1 4b b0 a1 bf       	mov    0xbfa1b04b,%eax
 804c7d4:	fc                   	cld    
 804c7d5:	ad                   	lods   %ds:(%esi),%eax
 804c7d6:	60                   	pusha  
 804c7d7:	bb 25 8b 23 b6       	mov    $0xb6238b25,%ebx
 804c7dc:	92                   	xchg   %eax,%edx
 804c7dd:	96                   	xchg   %eax,%esi
 804c7de:	e2 b2                	loop   804c792 <crctab+0x152>
 804c7e0:	2f                   	das    
 804c7e1:	2b ad 8a 98 36 6c    	sub    0x6c36988a(%ebp),%ebp
 804c7e7:	8e 41 10             	mov    0x10(%ecx),%es
 804c7ea:	2f                   	das    
 804c7eb:	83 f6 0d             	xor    $0xd,%esi
 804c7ee:	ee                   	out    %al,(%dx)
 804c7ef:	87 f3                	xchg   %esi,%ebx
 804c7f1:	5d                   	pop    %ebp
 804c7f2:	a9 99 44 40 68       	test   $0x68404499,%eax
 804c7f7:	9d                   	popf   
 804c7f8:	9d                   	popf   
 804c7f9:	66 2b 90 2a 7b ea 94 	sub    -0x6b1584d6(%eax),%dx
 804c800:	e7 1d                	out    %eax,$0x1d
 804c802:	b4 e0                	mov    $0xe0,%ah
 804c804:	50                   	push   %eax
 804c805:	00 75 e4             	add    %dh,-0x1c(%ebp)
 804c808:	89 26                	mov    %esp,(%esi)
 804c80a:	36                   	ss
 804c80b:	e9 3e 3b f7 ed       	jmp    f5fc034e <test_name+0xedf733e6>
 804c810:	3b 6b b0             	cmp    -0x50(%ebx),%ebp
 804c813:	f3 8c 76 71          	repz mov %?,0x71(%esi)
 804c817:	f7 55 50             	notl   0x50(%ebp)
 804c81a:	32 fa                	xor    %dl,%bh
 804c81c:	e2 4d                	loop   804c86b <crctab+0x22b>
 804c81e:	f3 fe                	repz (bad) 
 804c820:	5f                   	pop    %edi
 804c821:	f0 bc c6 e8 ed 7d    	lock mov $0x7dede8c6,%esp
 804c827:	c2 31 cb             	ret    $0xcb31
 804c82a:	3e                   	ds
 804c82b:	cf                   	iret   
 804c82c:	86 d6                	xchg   %dl,%dh
 804c82e:	ff cb                	dec    %ebx
 804c830:	83 86 b8 d5 34 9b 79 	addl   $0x79,-0x64cb2a48(%esi)
 804c837:	d1 ed                	shr    %ebp
 804c839:	bd 3a dc 5a a0       	mov    $0xa05adc3a,%ebp
 804c83e:	fb                   	sti    
 804c83f:	d8 ee                	fsubr  %st(6),%st
 804c841:	e0 0c                	loopne 804c84f <crctab+0x20f>
 804c843:	69 59 fd cd 6d 80 db 	imul   $0xdb806dcd,-0x3(%ecx),%ebx
 804c84a:	8e 60 37             	mov    0x37(%eax),%fs
 804c84d:	c6                   	(bad)  
 804c84e:	4f                   	dec    %edi
 804c84f:	64 32 96 08 7a 85 8b 	xor    %fs:-0x747a85f8(%esi),%dl
 804c856:	c9                   	leave  
 804c857:	7e 5c                	jle    804c8b5 <crctab+0x275>
 804c859:	ad                   	lods   %ds:(%esi),%eax
 804c85a:	8a 73 eb             	mov    -0x15(%ebx),%dh
 804c85d:	b0 4b                	mov    $0x4b,%al
 804c85f:	77 56                	ja     804c8b7 <crctab+0x277>
 804c861:	0d 04 4f e1 10       	or     $0x10e14f04,%eax
 804c866:	c5 4b 38             	lds    0x38(%ebx),%ecx
 804c869:	36 86 46 8f          	xchg   %al,%ss:-0x71(%esi)
 804c86d:	2b 47 42             	sub    0x42(%edi),%eax
 804c870:	8a 7b 00             	mov    0x0(%ebx),%bh
 804c873:	5c                   	pop    %esp
 804c874:	3d 66 c1 58 e4       	cmp    $0xe458c166,%eax
 804c879:	40                   	inc    %eax
 804c87a:	82                   	(bad)  
 804c87b:	55                   	push   %ebp
 804c87c:	53                   	push   %ebx
 804c87d:	5d                   	pop    %ebp
 804c87e:	43                   	inc    %ebx
 804c87f:	51                   	push   %ecx
 804c880:	9e                   	sahf   
 804c881:	3b 1d 25 29 26 dc    	cmp    0xdc262925,%ebx
 804c887:	21 f0                	and    %esi,%eax
 804c889:	00 9f 2c 47 1d 5e    	add    %bl,0x5e1d472c(%edi)
 804c88f:	28 42 4d             	sub    %al,0x4d(%edx)
 804c892:	19 36                	sbb    %esi,(%esi)
 804c894:	f5                   	cmc    
 804c895:	50                   	push   %eax
 804c896:	d8 32                	fdivs  (%edx)
 804c898:	2c 76                	sub    $0x76,%al
 804c89a:	9b                   	fwait
 804c89b:	3f                   	aas    
 804c89c:	9b                   	fwait
 804c89d:	6b 5a 3b 26          	imul   $0x26,0x3b(%edx),%ebx
 804c8a1:	d6                   	(bad)  
 804c8a2:	15 03 91 cb d4       	adc    $0xd4cb9103,%eax
 804c8a7:	07                   	pop    %es
 804c8a8:	48                   	dec    %eax
 804c8a9:	ed                   	in     (%dx),%eax
 804c8aa:	97                   	xchg   %eax,%edi
 804c8ab:	0a ff                	or     %bh,%bh
 804c8ad:	f0 56                	lock push %esi
 804c8af:	0e                   	push   %cs
 804c8b0:	fa                   	cli    
 804c8b1:	a0 11 10 4d bd       	mov    0xbd4d1011,%al
 804c8b6:	d0 14 94             	rclb   (%esp,%edx,4)
 804c8b9:	9b                   	fwait
 804c8ba:	93                   	xchg   %eax,%ebx
 804c8bb:	19 23                	sbb    %esp,(%ebx)
 804c8bd:	86 52 1d             	xchg   %dl,0x1d(%edx)
 804c8c0:	0e                   	push   %cs
 804c8c1:	56                   	push   %esi
 804c8c2:	2f                   	das    
 804c8c3:	f1                   	icebp  
 804c8c4:	b9 4b ee f5 60       	mov    $0x60f5ee4b,%ecx
 804c8c9:	6d                   	insl   (%dx),%es:(%edi)
 804c8ca:	ad                   	lods   %ds:(%esi),%eax
 804c8cb:	f8                   	clc    
 804c8cc:	d7                   	xlat   %ds:(%ebx)
 804c8cd:	70 6c                	jo     804c93b <crctab+0x2fb>
 804c8cf:	fc                   	cld    
 804c8d0:	d2 20                	shlb   %cl,(%eax)
 804c8d2:	2b e2                	sub    %edx,%esp
 804c8d4:	65                   	gs
 804c8d5:	3d ea e6 bc 1b       	cmp    $0x1bbce6ea,%eax
 804c8da:	a9 eb 0b 06 68       	test   $0x68060beb,%eax
 804c8df:	ef                   	out    %eax,(%dx)
 804c8e0:	b6 bb                	mov    $0xbb,%dh
 804c8e2:	27                   	daa    
 804c8e3:	d7                   	xlat   %ds:(%ebx)
 804c8e4:	01 a6 e6 d3 d8 80    	add    %esp,-0x7f272c1a(%esi)
 804c8ea:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 804c8eb:	de 6f 9d             	fisubr -0x63(%edi)
 804c8ee:	64 da 6a cd          	fisubrl %fs:-0x33(%edx)
 804c8f2:	23 c4                	and    %esp,%eax
 804c8f4:	dd d0                	fst    %st(0)
 804c8f6:	e2 c0                	loop   804c8b8 <crctab+0x278>
 804c8f8:	04 f6                	add    $0xf6,%al
 804c8fa:	a1 cd b3 eb 60       	mov    0x60ebb3cd,%eax
 804c8ff:	c9                   	leave  
 804c900:	7e 8d                	jle    804c88f <crctab+0x24f>
 804c902:	3e                   	ds
 804c903:	bd c9 90 ff b9       	mov    $0xb9ff90c9,%ebp
 804c908:	10 b6 bc b4 a7 ab    	adc    %dh,-0x54584b44(%esi)
 804c90e:	7d b0                	jge    804c8c0 <crctab+0x280>
 804c910:	a2 fb 3a ae 15       	mov    %al,0x15ae3afb
 804c915:	e6 fb                	out    %al,$0xfb
 804c917:	aa                   	stos   %al,%es:(%edi)
 804c918:	cc                   	int3   
 804c919:	c0 b8 a7 7b dd 79 a3 	sarb   $0xa3,0x79dd7ba7(%eax)
 804c920:	c6                   	(bad)  
 804c921:	60                   	pusha  
 804c922:	36                   	ss
 804c923:	9b                   	fwait
 804c924:	71 7d                	jno    804c9a3 <crctab+0x363>
 804c926:	f7 9f a8 5b b4 92    	negl   -0x6d4ba458(%edi)
 804c92c:	1f                   	pop    %ds
 804c92d:	46                   	inc    %esi
 804c92e:	75 96                	jne    804c8c6 <crctab+0x286>
 804c930:	1a 16                	sbb    (%esi),%dl
 804c932:	32 88 ad 0b f3 8c    	xor    -0x730cf453(%eax),%cl
 804c938:	74 2d                	je     804c967 <crctab+0x327>
 804c93a:	b0 81                	mov    $0x81,%al
 804c93c:	c3                   	ret    
 804c93d:	30 71 85             	xor    %dh,-0x7b(%ecx)
 804c940:	99                   	cltd   
 804c941:	90                   	nop
 804c942:	8a 5d 2e             	mov    0x2e(%ebp),%bl
 804c945:	8d 4b 59             	lea    0x59(%ebx),%ecx
 804c948:	f7 ab 08 54 40 b6    	imull  -0x49bfabf8(%ebx)
 804c94e:	c9                   	leave  
 804c94f:	50                   	push   %eax
 804c950:	45                   	inc    %ebp
 804c951:	e6 8e                	out    %al,$0x8e
 804c953:	4e                   	dec    %esi
 804c954:	f2 fb                	repnz sti 
 804c956:	4f                   	dec    %edi
 804c957:	4a                   	dec    %edx
 804c958:	2b dd                	sub    %ebp,%ebx
 804c95a:	0c 47                	or     $0x47,%al
 804c95c:	9c                   	pushf  
 804c95d:	c0 cd 43             	ror    $0x43,%ch
 804c960:	21 7d 82             	and    %edi,-0x7e(%ebp)
 804c963:	7b 96                	jnp    804c8fb <crctab+0x2bb>
 804c965:	60                   	pusha  
 804c966:	43                   	inc    %ebx
 804c967:	7f 4f                	jg     804c9b8 <crctab+0x378>
 804c969:	46                   	inc    %esi
 804c96a:	00 72 f8             	add    %dh,-0x8(%edx)
 804c96d:	5b                   	pop    %ebx
 804c96e:	c1                   	(bad)  
 804c96f:	76 fd                	jbe    804c96e <crctab+0x32e>
 804c971:	0b 86 68 4a 16 47    	or     0x47164a68(%esi),%eax
 804c977:	6c                   	insb   (%dx),%es:(%edi)
 804c978:	93                   	xchg   %eax,%ebx
 804c979:	30 04 61             	xor    %al,(%ecx,%eiz,2)
 804c97c:	24 2d                	and    $0x2d,%al
 804c97e:	c5 65 e9             	lds    -0x17(%ebp),%esp
 804c981:	4b                   	dec    %ebx
 804c982:	9b                   	fwait
 804c983:	11 5e 56             	adc    %ebx,0x56(%esi)
 804c986:	5a                   	pop    %edx
 804c987:	15 87 70 19 18       	adc    $0x18197087,%eax
 804c98c:	30 6d d8             	xor    %ch,-0x28(%ebp)
 804c98f:	1c 35                	sbb    $0x35,%al
 804c991:	3d 9f 02 82 20       	cmp    $0x2082029f,%eax
 804c996:	5e                   	pop    %esi
 804c997:	06                   	push   %es
 804c998:	5b                   	pop    %ebx
 804c999:	06                   	push   %es
 804c99a:	1d 0b ec 1b dc       	sbb    $0xdc1bec0b,%eax
 804c99f:	0f 51 a6 93 37 e6 bb 	sqrtps -0x4419c86d(%esi),%xmm4
 804c9a6:	52                   	push   %edx
 804c9a7:	33 3f                	xor    (%edi),%edi
 804c9a9:	9d                   	popf   
 804c9aa:	11 3e                	adc    %edi,(%esi)
 804c9ac:	88 80 d0 3a 8d d0    	mov    %al,-0x2f72c530(%eax)
 804c9b2:	97                   	xchg   %eax,%edi
 804c9b3:	24 3a                	and    $0x3a,%al
 804c9b5:	cd 56                	int    $0x56
 804c9b7:	20 e3                	and    %ah,%bl
 804c9b9:	eb 15                	jmp    804c9d0 <crctab+0x390>
 804c9bb:	2d 54 f6 d4 29       	sub    $0x29d4f654,%eax
 804c9c0:	79 26                	jns    804c9e8 <crctab+0x3a8>
 804c9c2:	a9 c5 ce 3b 68       	test   $0x683bcec5,%eax
 804c9c7:	c1 17 1d             	rcll   $0x1d,(%edi)
 804c9ca:	2b cc                	sub    %esp,%ecx
 804c9cc:	a0 00 ea c8 a5       	mov    0xa5c8ea00,%al
 804c9d1:	50                   	push   %eax
 804c9d2:	ad                   	lods   %ds:(%esi),%eax
 804c9d3:	d6                   	(bad)  
 804c9d4:	12 4d 6c             	adc    0x6c(%ebp),%cl
 804c9d7:	d2 cb                	ror    %cl,%bl
 804c9d9:	6b 2f df             	imul   $0xffffffdf,(%edi),%ebp
 804c9dc:	7c 76                	jl     804ca54 <quiet+0x14>
 804c9de:	ee                   	out    %al,(%dx)
 804c9df:	db c1                	fcmovnb %st(1),%st
 804c9e1:	cb                   	lret   
 804c9e2:	a1 e3 76 d6 60       	mov    0x60d676e3,%eax
 804c9e7:	e7 af                	out    %eax,$0xaf
 804c9e9:	f0 23 ea             	lock and %edx,%ebp
 804c9ec:	18 ed                	sbb    %ch,%ch
 804c9ee:	e2 ee                	loop   804c9de <crctab+0x39e>
 804c9f0:	1d bd a5 f0 aa       	sbb    $0xaaf0a5bd,%eax
 804c9f5:	a0 64 f4 73 86       	mov    0x8673f464,%al
 804c9fa:	27                   	daa    
 804c9fb:	f9                   	stc    
 804c9fc:	c4 9b e6 fd 09 fd    	les    -0x2f6021a(%ebx),%ebx
 804ca02:	b8 89 be e0 79       	mov    $0x79e0be89,%eax
 804ca07:	8d 67 c6             	lea    -0x3a(%edi),%esp
 804ca0a:	3a 80 d0 db fb 84    	cmp    -0x7b042430(%eax),%al
 804ca10:	d5 8b                	aad    $0xffffff8b
 804ca12:	bc 9a 62 96 7d       	mov    $0x7d96629a,%esp
 804ca17:	9e                   	sahf   
 804ca18:	bb b0 3e 93 0c       	mov    $0xc933eb0,%ebx
 804ca1d:	ad                   	lods   %ds:(%esi),%eax
 804ca1e:	ff 97 b1 10 b0 af    	call   *-0x504fef4f(%edi)
 804ca24:	06                   	push   %es
 804ca25:	0d 71 ab df 2b       	or     $0x2bdfab71,%eax
 804ca2a:	32 a6 68 36 f3 a2    	xor    -0x5d0cc998(%esi),%ah
 804ca30:	6d                   	insl   (%dx),%es:(%edi)
 804ca31:	66                   	data16
 804ca32:	b4 bc                	mov    $0xbc,%ah
 804ca34:	da 7b 75             	fidivrl 0x75(%ebx)
 804ca37:	b8 03 5d 36 b5       	mov    $0xb5365d03,%eax
 804ca3c:	b4 40                	mov    $0x40,%ah
 804ca3e:	f7                   	.byte 0xf7
 804ca3f:	b1                   	.byte 0xb1

Disassembly of section .bss:

0804ca40 <quiet>:
	...

0804ca60 <buf.1470>:
	...

0804ce60 <s>:
	...

0804cf60 <s_i>:
	...

0804cf61 <s_j>:
	...

0804cf62 <inited>:
	...

0804cf64 <explained.1373>:
 804cf64:	00 00                	add    %al,(%eax)
	...

0804cf68 <test_name>:
 804cf68:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <__executable_start-0x804805c>
   a:	74 75                	je     81 <__executable_start-0x8048053>
   c:	20 34 2e             	and    %dh,(%esi,%ebp,1)
   f:	34 2e                	xor    $0x2e,%al
  11:	33 2d 34 75 62 75    	xor    0x75627534,%ebp
  17:	6e                   	outsb  %ds:(%esi),(%dx)
  18:	74 75                	je     8f <__executable_start-0x8048045>
  1a:	35 2e 31 29 20       	xor    $0x2029312e,%eax
  1f:	34 2e                	xor    $0x2e,%al
  21:	34 2e                	xor    $0x2e,%al
  23:	33 00                	xor    (%eax),%eax

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	d4 80                	aam    $0xffffff80
  12:	04 08                	add    $0x8,%al
  14:	8d 00                	lea    (%eax),%eax
	...
  1e:	00 00                	add    %al,(%eax)
  20:	1c 00                	sbb    $0x0,%al
  22:	00 00                	add    %al,(%eax)
  24:	02 00                	add    (%eax),%al
  26:	00 01                	add    %al,(%ecx)
  28:	00 00                	add    %al,(%eax)
  2a:	04 00                	add    $0x0,%al
  2c:	00 00                	add    %al,(%eax)
  2e:	00 00                	add    %al,(%eax)
  30:	64 81 04 08 b4 01 00 	addl   $0x1b4,%fs:(%eax,%ecx,1)
  37:	00 
	...
  40:	1c 00                	sbb    $0x0,%al
  42:	00 00                	add    %al,(%eax)
  44:	02 00                	add    (%eax),%al
  46:	12 03                	adc    (%ebx),%al
  48:	00 00                	add    %al,(%eax)
  4a:	04 00                	add    $0x0,%al
  4c:	00 00                	add    %al,(%eax)
  4e:	00 00                	add    %al,(%eax)
  50:	18 83 04 08 8f 00    	sbb    %al,0x8f0804(%ebx)
	...
  5e:	00 00                	add    %al,(%eax)
  60:	1c 00                	sbb    $0x0,%al
  62:	00 00                	add    %al,(%eax)
  64:	02 00                	add    (%eax),%al
  66:	4e                   	dec    %esi
  67:	04 00                	add    $0x0,%al
  69:	00 04 00             	add    %al,(%eax,%eax,1)
  6c:	00 00                	add    %al,(%eax)
  6e:	00 00                	add    %al,(%eax)
  70:	a8 83                	test   $0x83,%al
  72:	04 08                	add    $0x8,%al
  74:	c4 06                	les    (%esi),%eax
	...
  7e:	00 00                	add    %al,(%eax)
  80:	1c 00                	sbb    $0x0,%al
  82:	00 00                	add    %al,(%eax)
  84:	02 00                	add    (%eax),%al
  86:	91                   	xchg   %eax,%ecx
  87:	09 00                	or     %eax,(%eax)
  89:	00 04 00             	add    %al,(%eax,%eax,1)
  8c:	00 00                	add    %al,(%eax)
  8e:	00 00                	add    %al,(%eax)
  90:	6c                   	insb   (%dx),%es:(%edi)
  91:	8a 04 08             	mov    (%eax,%ecx,1),%al
  94:	43                   	inc    %ebx
	...
  9d:	00 00                	add    %al,(%eax)
  9f:	00 1c 00             	add    %bl,(%eax,%eax,1)
  a2:	00 00                	add    %al,(%eax)
  a4:	02 00                	add    (%eax),%al
  a6:	2a 0a                	sub    (%edx),%cl
  a8:	00 00                	add    %al,(%eax)
  aa:	04 00                	add    $0x0,%al
  ac:	00 00                	add    %al,(%eax)
  ae:	00 00                	add    %al,(%eax)
  b0:	b0 8a                	mov    $0x8a,%al
  b2:	04 08                	add    $0x8,%al
  b4:	20 00                	and    %al,(%eax)
	...
  be:	00 00                	add    %al,(%eax)
  c0:	1c 00                	sbb    $0x0,%al
  c2:	00 00                	add    %al,(%eax)
  c4:	02 00                	add    (%eax),%al
  c6:	a0 0a 00 00 04       	mov    0x400000a,%al
  cb:	00 00                	add    %al,(%eax)
  cd:	00 00                	add    %al,(%eax)
  cf:	00 d0                	add    %dl,%al
  d1:	8a 04 08             	mov    (%eax,%ecx,1),%al
  d4:	b7 01                	mov    $0x1,%bh
	...
  de:	00 00                	add    %al,(%eax)
  e0:	1c 00                	sbb    $0x0,%al
  e2:	00 00                	add    %al,(%eax)
  e4:	02 00                	add    (%eax),%al
  e6:	91                   	xchg   %eax,%ecx
  e7:	0c 00                	or     $0x0,%al
  e9:	00 04 00             	add    %al,(%eax,%eax,1)
  ec:	00 00                	add    %al,(%eax)
  ee:	00 00                	add    %al,(%eax)
  f0:	88 8c 04 08 55 0f 00 	mov    %cl,0xf5508(%esp,%eax,1)
	...
  ff:	00 1c 00             	add    %bl,(%eax,%eax,1)
 102:	00 00                	add    %al,(%eax)
 104:	02 00                	add    (%eax),%al
 106:	2e                   	cs
 107:	15 00 00 04 00       	adc    $0x40000,%eax
 10c:	00 00                	add    %al,(%eax)
 10e:	00 00                	add    %al,(%eax)
 110:	e0 9b                	loopne ad <__executable_start-0x8048027>
 112:	04 08                	add    $0x8,%al
 114:	8a 09                	mov    (%ecx),%cl
	...
 11e:	00 00                	add    %al,(%eax)
 120:	1c 00                	sbb    $0x0,%al
 122:	00 00                	add    %al,(%eax)
 124:	02 00                	add    (%eax),%al
 126:	98                   	cwtl   
 127:	1c 00                	sbb    $0x0,%al
 129:	00 04 00             	add    %al,(%eax,%eax,1)
 12c:	00 00                	add    %al,(%eax)
 12e:	00 00                	add    %al,(%eax)
 130:	6c                   	insb   (%dx),%es:(%edi)
 131:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 132:	04 08                	add    $0x8,%al
 134:	cd 04                	int    $0x4
	...
 13e:	00 00                	add    %al,(%eax)
 140:	1c 00                	sbb    $0x0,%al
 142:	00 00                	add    %al,(%eax)
 144:	02 00                	add    (%eax),%al
 146:	02 20                	add    (%eax),%ah
 148:	00 00                	add    %al,(%eax)
 14a:	04 00                	add    $0x0,%al
 14c:	00 00                	add    %al,(%eax)
 14e:	00 00                	add    %al,(%eax)
 150:	3c aa                	cmp    $0xaa,%al
 152:	04 08                	add    $0x8,%al
 154:	5c                   	pop    %esp
	...
 15d:	00 00                	add    %al,(%eax)
 15f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 162:	00 00                	add    %al,(%eax)
 164:	02 00                	add    (%eax),%al
 166:	e8 20 00 00 04       	call   400018b <__executable_start-0x4047f49>
 16b:	00 00                	add    %al,(%eax)
 16d:	00 00                	add    %al,(%eax)
 16f:	00 98 aa 04 08 48    	add    %bl,0x480804aa(%eax)
 175:	02 00                	add    (%eax),%al
	...
 17f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 182:	00 00                	add    %al,(%eax)
 184:	02 00                	add    (%eax),%al
 186:	ae                   	scas   %es:(%edi),%al
 187:	27                   	daa    
 188:	00 00                	add    %al,(%eax)
 18a:	04 00                	add    $0x0,%al
 18c:	00 00                	add    %al,(%eax)
 18e:	00 00                	add    %al,(%eax)
 190:	e0 ac                	loopne 13e <__executable_start-0x8047f96>
 192:	04 08                	add    $0x8,%al
 194:	9d                   	popf   
 195:	01 00                	add    %eax,(%eax)
	...
 19f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 1a2:	00 00                	add    %al,(%eax)
 1a4:	02 00                	add    (%eax),%al
 1a6:	44                   	inc    %esp
 1a7:	2a 00                	sub    (%eax),%al
 1a9:	00 04 00             	add    %al,(%eax,%eax,1)
 1ac:	00 00                	add    %al,(%eax)
 1ae:	00 00                	add    %al,(%eax)
 1b0:	80 ae 04 08 77 00 00 	subb   $0x0,0x770804(%esi)
	...

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	00 01                	add    %al,(%ecx)
   c:	00 00                	add    %al,(%eax)
   e:	af                   	scas   %es:(%edi),%eax
   f:	00 00                	add    %al,(%eax)
  11:	00 74 65 73          	add    %dh,0x73(%ebp,%eiz,2)
  15:	74 5f                	je     76 <__executable_start-0x804805e>
  17:	6d                   	insl   (%dx),%es:(%edi)
  18:	61                   	popa   
  19:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%esi),%ebp
  20:	2b 00                	sub    (%eax),%eax
  22:	00 00                	add    %al,(%eax)
  24:	02 00                	add    (%eax),%al
  26:	00 01                	add    %al,(%ecx)
  28:	00 00                	add    %al,(%eax)
  2a:	12 02                	adc    (%edx),%al
  2c:	00 00                	add    %al,(%eax)
  2e:	fd                   	std    
  2f:	00 00                	add    %al,(%eax)
  31:	00 61 72             	add    %ah,0x72(%ecx)
  34:	63 34 5f             	arpl   %si,(%edi,%ebx,2)
  37:	69 6e 69 74 00 99 01 	imul   $0x1990074,0x69(%esi),%ebp
  3e:	00 00                	add    %al,(%eax)
  40:	61                   	popa   
  41:	72 63                	jb     a6 <__executable_start-0x804802e>
  43:	34 5f                	xor    $0x5f,%al
  45:	63 72 79             	arpl   %si,0x79(%edx)
  48:	70 74                	jo     be <__executable_start-0x8048016>
  4a:	00 00                	add    %al,(%eax)
  4c:	00 00                	add    %al,(%eax)
  4e:	00 18                	add    %bl,(%eax)
  50:	00 00                	add    %al,(%eax)
  52:	00 02                	add    %al,(%edx)
  54:	00 12                	add    %dl,(%edx)
  56:	03 00                	add    (%eax),%eax
  58:	00 3c 01             	add    %bh,(%ecx,%eax,1)
  5b:	00 00                	add    %al,(%eax)
  5d:	73 00                	jae    5f <__executable_start-0x8048075>
  5f:	00 00                	add    %al,(%eax)
  61:	63 6b 73             	arpl   %bp,0x73(%ebx)
  64:	75 6d                	jne    d3 <__executable_start-0x8048001>
  66:	00 00                	add    %al,(%eax)
  68:	00 00                	add    %al,(%eax)
  6a:	00 9e 00 00 00 02    	add    %bl,0x2000000(%esi)
  70:	00 4e 04             	add    %cl,0x4(%esi)
  73:	00 00                	add    %al,(%eax)
  75:	43                   	inc    %ebx
  76:	05 00 00 0d 01       	add    $0x10d0000,%eax
  7b:	00 00                	add    %al,(%eax)
  7d:	6d                   	insl   (%dx),%es:(%edi)
  7e:	73 67                	jae    e7 <__executable_start-0x8047fed>
  80:	00 44 01 00          	add    %al,0x0(%ecx,%eax,1)
  84:	00 66 61             	add    %ah,0x61(%esi)
  87:	69 6c 00 fe 01 00 00 	imul   $0x73000001,-0x2(%eax,%eax,1),%ebp
  8e:	73 
  8f:	68 75 66 66 6c       	push   $0x6c666675
  94:	65 00 78 02          	add    %bh,%gs:0x2(%eax)
  98:	00 00                	add    %al,(%eax)
  9a:	65                   	gs
  9b:	78 65                	js     102 <__executable_start-0x8047fd2>
  9d:	63 5f 63             	arpl   %bx,0x63(%edi)
  a0:	68 69 6c 64 72       	push   $0x72646c69
  a5:	65 6e                	outsb  %gs:(%esi),(%dx)
  a7:	00 f7                	add    %dh,%bh
  a9:	02 00                	add    (%eax),%al
  ab:	00 77 61             	add    %dh,0x61(%edi)
  ae:	69 74 5f 63 68 69 6c 	imul   $0x646c6968,0x63(%edi,%ebx,2),%esi
  b5:	64 
  b6:	72 65                	jb     11d <__executable_start-0x8047fb7>
  b8:	6e                   	outsb  %ds:(%esi),(%dx)
  b9:	00 51 03             	add    %dl,0x3(%ecx)
  bc:	00 00                	add    %al,(%eax)
  be:	63 68 65             	arpl   %bp,0x65(%eax)
  c1:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
  c4:	66 69 6c 65 5f 68 61 	imul   $0x6168,0x5f(%ebp,%eiz,2),%bp
  cb:	6e                   	outsb  %ds:(%esi),(%dx)
  cc:	64                   	fs
  cd:	6c                   	insb   (%dx),%es:(%edi)
  ce:	65 00 19             	add    %bl,%gs:(%ecx)
  d1:	04 00                	add    $0x0,%al
  d3:	00 63 68             	add    %ah,0x68(%ebx)
  d6:	65 63 6b 5f          	arpl   %bp,%gs:0x5f(%ebx)
  da:	66 69 6c 65 00 6a 04 	imul   $0x46a,0x0(%ebp,%eiz,2),%bp
  e1:	00 00                	add    %al,(%eax)
  e3:	63 6f 6d             	arpl   %bp,0x6d(%edi)
  e6:	70 61                	jo     149 <__executable_start-0x8047f8b>
  e8:	72 65                	jb     14f <__executable_start-0x8047f85>
  ea:	5f                   	pop    %edi
  eb:	62 79 74             	bound  %edi,0x74(%ecx)
  ee:	65                   	gs
  ef:	73 00                	jae    f1 <__executable_start-0x8047fe3>
  f1:	17                   	pop    %ss
  f2:	05 00 00 74 65       	add    $0x65740000,%eax
  f7:	73 74                	jae    16d <__executable_start-0x8047f67>
  f9:	5f                   	pop    %edi
  fa:	6e                   	outsb  %ds:(%esi),(%dx)
  fb:	61                   	popa   
  fc:	6d                   	insl   (%dx),%es:(%edi)
  fd:	65 00 29             	add    %ch,%gs:(%ecx)
 100:	05 00 00 71 75       	add    $0x75710000,%eax
 105:	69 65 74 00 00 00 00 	imul   $0x0,0x74(%ebp),%esp
 10c:	00 17                	add    %dl,(%edi)
 10e:	00 00                	add    %al,(%eax)
 110:	00 02                	add    %al,(%edx)
 112:	00 91 09 00 00 99    	add    %dl,-0x66fffff7(%ecx)
 118:	00 00                	add    %al,(%eax)
 11a:	00 33                	add    %dh,(%ebx)
 11c:	00 00                	add    %al,(%eax)
 11e:	00 6d 61             	add    %ch,0x61(%ebp)
 121:	69 6e 00 00 00 00 00 	imul   $0x0,0x0(%esi),%ebp
 128:	19 00                	sbb    %eax,(%eax)
 12a:	00 00                	add    %al,(%eax)
 12c:	02 00                	add    (%eax),%al
 12e:	2a 0a                	sub    (%edx),%cl
 130:	00 00                	add    %al,(%eax)
 132:	76 00                	jbe    134 <__executable_start-0x8047fa0>
 134:	00 00                	add    %al,(%eax)
 136:	2c 00                	sub    $0x0,%al
 138:	00 00                	add    %al,(%eax)
 13a:	5f                   	pop    %edi
 13b:	73 74                	jae    1b1 <__executable_start-0x8047f23>
 13d:	61                   	popa   
 13e:	72 74                	jb     1b4 <__executable_start-0x8047f20>
 140:	00 00                	add    %al,(%eax)
 142:	00 00                	add    %al,(%eax)
 144:	00 40 00             	add    %al,0x0(%eax)
 147:	00 00                	add    %al,(%eax)
 149:	02 00                	add    (%eax),%al
 14b:	a0 0a 00 00 f1       	mov    0xf100000a,%al
 150:	01 00                	add    %eax,(%eax)
 152:	00 b6 00 00 00 72    	add    %dh,0x72000000(%esi)
 158:	61                   	popa   
 159:	6e                   	outsb  %ds:(%esi),(%dx)
 15a:	64 6f                	outsl  %fs:(%esi),(%dx)
 15c:	6d                   	insl   (%dx),%es:(%edi)
 15d:	5f                   	pop    %edi
 15e:	69 6e 69 74 00 04 01 	imul   $0x1040074,0x69(%esi),%ebp
 165:	00 00                	add    %al,(%eax)
 167:	72 61                	jb     1ca <__executable_start-0x8047f0a>
 169:	6e                   	outsb  %ds:(%esi),(%dx)
 16a:	64 6f                	outsl  %fs:(%esi),(%dx)
 16c:	6d                   	insl   (%dx),%es:(%edi)
 16d:	5f                   	pop    %edi
 16e:	62 79 74             	bound  %edi,0x74(%ecx)
 171:	65                   	gs
 172:	73 00                	jae    174 <__executable_start-0x8047f60>
 174:	62 01                	bound  %eax,(%ecx)
 176:	00 00                	add    %al,(%eax)
 178:	72 61                	jb     1db <__executable_start-0x8047ef9>
 17a:	6e                   	outsb  %ds:(%esi),(%dx)
 17b:	64 6f                	outsl  %fs:(%esi),(%dx)
 17d:	6d                   	insl   (%dx),%es:(%edi)
 17e:	5f                   	pop    %edi
 17f:	75 6c                	jne    1ed <__executable_start-0x8047ee7>
 181:	6f                   	outsl  %ds:(%esi),(%dx)
 182:	6e                   	outsb  %ds:(%esi),(%dx)
 183:	67 00 00             	addr16 add %al,(%bx,%si)
 186:	00 00                	add    %al,(%eax)
 188:	00 5c 00 00          	add    %bl,0x0(%eax,%eax,1)
 18c:	00 02                	add    %al,(%edx)
 18e:	00 91 0c 00 00 9d    	add    %dl,-0x62fffff4(%ecx)
 194:	08 00                	or     %al,(%eax)
 196:	00 57 02             	add    %dl,0x2(%edi)
 199:	00 00                	add    %al,(%eax)
 19b:	76 73                	jbe    210 <__executable_start-0x8047ec4>
 19d:	6e                   	outsb  %ds:(%esi),(%dx)
 19e:	70 72                	jo     212 <__executable_start-0x8047ec2>
 1a0:	69 6e 74 66 00 05 03 	imul   $0x3050066,0x74(%esi),%ebp
 1a7:	00 00                	add    %al,(%eax)
 1a9:	73 6e                	jae    219 <__executable_start-0x8047ebb>
 1ab:	70 72                	jo     21f <__executable_start-0x8047eb5>
 1ad:	69 6e 74 66 00 6a 03 	imul   $0x36a0066,0x74(%esi),%ebp
 1b4:	00 00                	add    %al,(%eax)
 1b6:	70 72                	jo     22a <__executable_start-0x8047eaa>
 1b8:	69 6e 74 66 00 b3 03 	imul   $0x3b30066,0x74(%esi),%ebp
 1bf:	00 00                	add    %al,(%eax)
 1c1:	5f                   	pop    %edi
 1c2:	5f                   	pop    %edi
 1c3:	76 70                	jbe    235 <__executable_start-0x8047e9f>
 1c5:	72 69                	jb     230 <__executable_start-0x8047ea4>
 1c7:	6e                   	outsb  %ds:(%esi),(%dx)
 1c8:	74 66                	je     230 <__executable_start-0x8047ea4>
 1ca:	00 32                	add    %dh,(%edx)
 1cc:	07                   	pop    %es
 1cd:	00 00                	add    %al,(%eax)
 1cf:	5f                   	pop    %edi
 1d0:	5f                   	pop    %edi
 1d1:	70 72                	jo     245 <__executable_start-0x8047e8f>
 1d3:	69 6e 74 66 00 8a 07 	imul   $0x78a0066,0x74(%esi),%ebp
 1da:	00 00                	add    %al,(%eax)
 1dc:	68 65 78 5f 64       	push   $0x645f7865
 1e1:	75 6d                	jne    250 <__executable_start-0x8047e84>
 1e3:	70 00                	jo     1e5 <__executable_start-0x8047eef>
 1e5:	00 00                	add    %al,(%eax)
 1e7:	00 00                	add    %al,(%eax)
 1e9:	d2 00                	rolb   %cl,(%eax)
 1eb:	00 00                	add    %al,(%eax)
 1ed:	02 00                	add    (%eax),%al
 1ef:	2e                   	cs
 1f0:	15 00 00 6a 07       	adc    $0x76a0000,%eax
 1f5:	00 00                	add    %al,(%eax)
 1f7:	3e 00 00             	add    %al,%ds:(%eax)
 1fa:	00 6d 65             	add    %ch,0x65(%ebp)
 1fd:	6d                   	insl   (%dx),%es:(%edi)
 1fe:	63 70 79             	arpl   %si,0x79(%eax)
 201:	00 f2                	add    %dh,%dl
 203:	00 00                	add    %al,(%eax)
 205:	00 6d 65             	add    %ch,0x65(%ebp)
 208:	6d                   	insl   (%dx),%es:(%edi)
 209:	6d                   	insl   (%dx),%es:(%edi)
 20a:	6f                   	outsl  %ds:(%esi),(%dx)
 20b:	76 65                	jbe    272 <__executable_start-0x8047e62>
 20d:	00 7b 01             	add    %bh,0x1(%ebx)
 210:	00 00                	add    %al,(%eax)
 212:	6d                   	insl   (%dx),%es:(%edi)
 213:	65                   	gs
 214:	6d                   	insl   (%dx),%es:(%edi)
 215:	63 6d 70             	arpl   %bp,0x70(%ebp)
 218:	00 ee                	add    %ch,%dh
 21a:	01 00                	add    %eax,(%eax)
 21c:	00 73 74             	add    %dh,0x74(%ebx)
 21f:	72 63                	jb     284 <__executable_start-0x8047e50>
 221:	6d                   	insl   (%dx),%es:(%edi)
 222:	70 00                	jo     224 <__executable_start-0x8047eb0>
 224:	5e                   	pop    %esi
 225:	02 00                	add    (%eax),%al
 227:	00 6d 65             	add    %ch,0x65(%ebp)
 22a:	6d                   	insl   (%dx),%es:(%edi)
 22b:	63 68 72             	arpl   %bp,0x72(%eax)
 22e:	00 d6                	add    %dl,%dh
 230:	02 00                	add    (%eax),%al
 232:	00 73 74             	add    %dh,0x74(%ebx)
 235:	72 63                	jb     29a <__executable_start-0x8047e3a>
 237:	68 72 00 36 03       	push   $0x3360072
 23c:	00 00                	add    %al,(%eax)
 23e:	73 74                	jae    2b4 <__executable_start-0x8047e20>
 240:	72 63                	jb     2a5 <__executable_start-0x8047e2f>
 242:	73 70                	jae    2b4 <__executable_start-0x8047e20>
 244:	6e                   	outsb  %ds:(%esi),(%dx)
 245:	00 7e 03             	add    %bh,0x3(%esi)
 248:	00 00                	add    %al,(%eax)
 24a:	73 74                	jae    2c0 <__executable_start-0x8047e14>
 24c:	72 70                	jb     2be <__executable_start-0x8047e16>
 24e:	62 72 6b             	bound  %esi,0x6b(%edx)
 251:	00 b8 03 00 00 73    	add    %bh,0x73000003(%eax)
 257:	74 72                	je     2cb <__executable_start-0x8047e09>
 259:	72 63                	jb     2be <__executable_start-0x8047e16>
 25b:	68 72 00 09 04       	push   $0x4090072
 260:	00 00                	add    %al,(%eax)
 262:	73 74                	jae    2d8 <__executable_start-0x8047dfc>
 264:	72 73                	jb     2d9 <__executable_start-0x8047dfb>
 266:	70 6e                	jo     2d6 <__executable_start-0x8047dfe>
 268:	00 51 04             	add    %dl,0x4(%ecx)
 26b:	00 00                	add    %al,(%eax)
 26d:	73 74                	jae    2e3 <__executable_start-0x8047df1>
 26f:	72 73                	jb     2e4 <__executable_start-0x8047df0>
 271:	74 72                	je     2e5 <__executable_start-0x8047def>
 273:	00 bd 04 00 00 73    	add    %bh,0x73000004(%ebp)
 279:	74 72                	je     2ed <__executable_start-0x8047de7>
 27b:	74 6f                	je     2ec <__executable_start-0x8047de8>
 27d:	6b 5f 72 00          	imul   $0x0,0x72(%edi),%ebx
 281:	3c 05                	cmp    $0x5,%al
 283:	00 00                	add    %al,(%eax)
 285:	6d                   	insl   (%dx),%es:(%edi)
 286:	65                   	gs
 287:	6d                   	insl   (%dx),%es:(%edi)
 288:	73 65                	jae    2ef <__executable_start-0x8047de5>
 28a:	74 00                	je     28c <__executable_start-0x8047e48>
 28c:	ac                   	lods   %ds:(%esi),%al
 28d:	05 00 00 73 74       	add    $0x74730000,%eax
 292:	72 6c                	jb     300 <__executable_start-0x8047dd4>
 294:	65 6e                	outsb  %gs:(%esi),(%dx)
 296:	00 fc                	add    %bh,%ah
 298:	05 00 00 73 74       	add    $0x74730000,%eax
 29d:	72 6e                	jb     30d <__executable_start-0x8047dc7>
 29f:	6c                   	insb   (%dx),%es:(%edi)
 2a0:	65 6e                	outsb  %gs:(%esi),(%dx)
 2a2:	00 48 06             	add    %cl,0x6(%eax)
 2a5:	00 00                	add    %al,(%eax)
 2a7:	73 74                	jae    31d <__executable_start-0x8047db7>
 2a9:	72 6c                	jb     317 <__executable_start-0x8047dbd>
 2ab:	63 70 79             	arpl   %si,0x79(%eax)
 2ae:	00 d1                	add    %dl,%cl
 2b0:	06                   	push   %es
 2b1:	00 00                	add    %al,(%eax)
 2b3:	73 74                	jae    329 <__executable_start-0x8047dab>
 2b5:	72 6c                	jb     323 <__executable_start-0x8047db1>
 2b7:	63 61 74             	arpl   %sp,0x74(%ecx)
 2ba:	00 00                	add    %al,(%eax)
 2bc:	00 00                	add    %al,(%eax)
 2be:	00 44 00 00          	add    %al,0x0(%eax,%eax,1)
 2c2:	00 02                	add    %al,(%edx)
 2c4:	00 98 1c 00 00 6a    	add    %bl,0x6a00001c(%eax)
 2ca:	03 00                	add    (%eax),%eax
 2cc:	00 95 02 00 00 5f    	add    %dl,0x5f000002(%ebp)
 2d2:	5f                   	pop    %edi
 2d3:	64 69 76 64 69 33 00 	imul   $0xcb003369,%fs:0x64(%esi),%esi
 2da:	cb 
 2db:	02 00                	add    (%eax),%al
 2dd:	00 5f 5f             	add    %bl,0x5f(%edi)
 2e0:	6d                   	insl   (%dx),%es:(%edi)
 2e1:	6f                   	outsl  %ds:(%esi),(%dx)
 2e2:	64 64 69 33 00 01 03 	imul   $0x30100,%fs:(%ebx),%esi
 2e9:	00 
 2ea:	00 5f 5f             	add    %bl,0x5f(%edi)
 2ed:	75 64                	jne    353 <__executable_start-0x8047d81>
 2ef:	69 76 64 69 33 00 37 	imul   $0x37003369,0x64(%esi),%esi
 2f6:	03 00                	add    (%eax),%eax
 2f8:	00 5f 5f             	add    %bl,0x5f(%edi)
 2fb:	75 6d                	jne    36a <__executable_start-0x8047d6a>
 2fd:	6f                   	outsl  %ds:(%esi),(%dx)
 2fe:	64 64 69 33 00 00 00 	imul   $0x0,%fs:(%ebx),%esi
 305:	00 
 306:	00 1e                	add    %bl,(%esi)
 308:	00 00                	add    %al,(%eax)
 30a:	00 02                	add    %al,(%edx)
 30c:	00 02                	add    %al,(%edx)
 30e:	20 00                	and    %al,(%eax)
 310:	00 e6                	add    %ah,%dh
 312:	00 00                	add    %al,(%eax)
 314:	00 79 00             	add    %bh,0x0(%ecx)
 317:	00 00                	add    %al,(%eax)
 319:	64 65 62 75 67       	bound  %esi,%fs:%gs:0x67(%ebp)
 31e:	5f                   	pop    %edi
 31f:	70 61                	jo     382 <__executable_start-0x8047d52>
 321:	6e                   	outsb  %ds:(%esi),(%dx)
 322:	69 63 00 00 00 00 00 	imul   $0x0,0x0(%ebx),%esp
 329:	d7                   	xlat   %ds:(%ebx)
 32a:	00 00                	add    %al,(%eax)
 32c:	00 02                	add    %al,(%edx)
 32e:	00 e8                	add    %ch,%al
 330:	20 00                	and    %al,(%eax)
 332:	00 c6                	add    %al,%dh
 334:	06                   	push   %es
 335:	00 00                	add    %al,(%eax)
 337:	c9                   	leave  
 338:	00 00                	add    %al,(%eax)
 33a:	00 68 61             	add    %ch,0x61(%eax)
 33d:	6c                   	insb   (%dx),%es:(%edi)
 33e:	74 00                	je     340 <__executable_start-0x8047d94>
 340:	2a 01                	sub    (%ecx),%al
 342:	00 00                	add    %al,(%eax)
 344:	65                   	gs
 345:	78 69                	js     3b0 <__executable_start-0x8047d24>
 347:	74 00                	je     349 <__executable_start-0x8047d8b>
 349:	7f 01                	jg     34c <__executable_start-0x8047d88>
 34b:	00 00                	add    %al,(%eax)
 34d:	65                   	gs
 34e:	78 65                	js     3b5 <__executable_start-0x8047d1f>
 350:	63 00                	arpl   %ax,(%eax)
 352:	ce                   	into   
 353:	01 00                	add    %eax,(%eax)
 355:	00 77 61             	add    %dh,0x61(%edi)
 358:	69 74 00 12 02 00 00 	imul   $0x63000002,0x12(%eax,%eax,1),%esi
 35f:	63 
 360:	72 65                	jb     3c7 <__executable_start-0x8047d0d>
 362:	61                   	popa   
 363:	74 65                	je     3ca <__executable_start-0x8047d0a>
 365:	00 72 02             	add    %dh,0x2(%edx)
 368:	00 00                	add    %al,(%eax)
 36a:	72 65                	jb     3d1 <__executable_start-0x8047d03>
 36c:	6d                   	insl   (%dx),%es:(%edi)
 36d:	6f                   	outsl  %ds:(%esi),(%dx)
 36e:	76 65                	jbe    3d5 <__executable_start-0x8047cff>
 370:	00 b6 02 00 00 6f    	add    %dh,0x6f000002(%esi)
 376:	70 65                	jo     3dd <__executable_start-0x8047cf7>
 378:	6e                   	outsb  %ds:(%esi),(%dx)
 379:	00 fa                	add    %bh,%dl
 37b:	02 00                	add    (%eax),%al
 37d:	00 66 69             	add    %ah,0x69(%esi)
 380:	6c                   	insb   (%dx),%es:(%edi)
 381:	65                   	gs
 382:	73 69                	jae    3ed <__executable_start-0x8047ce7>
 384:	7a 65                	jp     3eb <__executable_start-0x8047ce9>
 386:	00 3d 03 00 00 72    	add    %bh,0x72000003
 38c:	65                   	gs
 38d:	61                   	popa   
 38e:	64 00 9e 03 00 00 77 	add    %bl,%fs:0x77000003(%esi)
 395:	72 69                	jb     400 <__executable_start-0x8047cd4>
 397:	74 65                	je     3fe <__executable_start-0x8047cd6>
 399:	00 04 04             	add    %al,(%esp,%eax,1)
 39c:	00 00                	add    %al,(%eax)
 39e:	73 65                	jae    405 <__executable_start-0x8047ccf>
 3a0:	65 6b 00 51          	imul   $0x51,%gs:(%eax),%eax
 3a4:	04 00                	add    $0x0,%al
 3a6:	00 74 65 6c          	add    %dh,0x6c(%ebp,%eiz,2)
 3aa:	6c                   	insb   (%dx),%es:(%edi)
 3ab:	00 94 04 00 00 63 6c 	add    %dl,0x6c630000(%esp,%eax,1)
 3b2:	6f                   	outsl  %ds:(%esi),(%dx)
 3b3:	73 65                	jae    41a <__executable_start-0x8047cba>
 3b5:	00 d3                	add    %dl,%bl
 3b7:	04 00                	add    $0x0,%al
 3b9:	00 6d 6d             	add    %ch,0x6d(%ebp)
 3bc:	61                   	popa   
 3bd:	70 00                	jo     3bf <__executable_start-0x8047d15>
 3bf:	24 05                	and    $0x5,%al
 3c1:	00 00                	add    %al,(%eax)
 3c3:	6d                   	insl   (%dx),%es:(%edi)
 3c4:	75 6e                	jne    434 <__executable_start-0x8047ca0>
 3c6:	6d                   	insl   (%dx),%es:(%edi)
 3c7:	61                   	popa   
 3c8:	70 00                	jo     3ca <__executable_start-0x8047d0a>
 3ca:	64                   	fs
 3cb:	05 00 00 63 68       	add    $0x68630000,%eax
 3d0:	64 69 72 00 a8 05 00 	imul   $0x5a8,%fs:0x0(%edx),%esi
 3d7:	00 
 3d8:	6d                   	insl   (%dx),%es:(%edi)
 3d9:	6b 64 69 72 00       	imul   $0x0,0x72(%ecx,%ebp,2),%esp
 3de:	ec                   	in     (%dx),%al
 3df:	05 00 00 72 65       	add    $0x65720000,%eax
 3e4:	61                   	popa   
 3e5:	64 64 69 72 00 43 06 	imul   $0x643,%fs:0x0(%edx),%esi
 3ec:	00 00 
 3ee:	69 73 64 69 72 00 86 	imul   $0x86007269,0x64(%ebx),%esi
 3f5:	06                   	push   %es
 3f6:	00 00                	add    %al,(%eax)
 3f8:	69 6e 75 6d 62 65 72 	imul   $0x7265626d,0x75(%esi),%ebp
 3ff:	00 00                	add    %al,(%eax)
 401:	00 00                	add    %al,(%eax)
 403:	00 48 00             	add    %cl,0x0(%eax)
 406:	00 00                	add    %al,(%eax)
 408:	02 00                	add    (%eax),%al
 40a:	ae                   	scas   %es:(%edi),%al
 40b:	27                   	daa    
 40c:	00 00                	add    %al,(%eax)
 40e:	96                   	xchg   %eax,%esi
 40f:	02 00                	add    (%eax),%al
 411:	00 d5                	add    %dl,%ch
 413:	00 00                	add    %al,(%eax)
 415:	00 76 70             	add    %dh,0x70(%esi)
 418:	72 69                	jb     483 <__executable_start-0x8047c51>
 41a:	6e                   	outsb  %ds:(%esi),(%dx)
 41b:	74 66                	je     483 <__executable_start-0x8047c51>
 41d:	00 1a                	add    %bl,(%edx)
 41f:	01 00                	add    %eax,(%eax)
 421:	00 68 70             	add    %ch,0x70(%eax)
 424:	72 69                	jb     48f <__executable_start-0x8047c45>
 426:	6e                   	outsb  %ds:(%esi),(%dx)
 427:	74 66                	je     48f <__executable_start-0x8047c45>
 429:	00 71 01             	add    %dh,0x1(%ecx)
 42c:	00 00                	add    %al,(%eax)
 42e:	70 75                	jo     4a5 <__executable_start-0x8047c2f>
 430:	74 73                	je     4a5 <__executable_start-0x8047c2f>
 432:	00 9b 01 00 00 70    	add    %bl,0x70000001(%ebx)
 438:	75 74                	jne    4ae <__executable_start-0x8047c26>
 43a:	63 68 61             	arpl   %bp,0x61(%eax)
 43d:	72 00                	jb     43f <__executable_start-0x8047c95>
 43f:	d2 01                	rolb   %cl,(%ecx)
 441:	00 00                	add    %al,(%eax)
 443:	76 68                	jbe    4ad <__executable_start-0x8047c27>
 445:	70 72                	jo     4b9 <__executable_start-0x8047c1b>
 447:	69 6e 74 66 00 00 00 	imul   $0x66,0x74(%esi),%ebp
 44e:	00 00                	add    %al,(%eax)
 450:	22 00                	and    (%eax),%al
 452:	00 00                	add    %al,(%eax)
 454:	02 00                	add    (%eax),%al
 456:	44                   	inc    %esp
 457:	2a 00                	sub    (%eax),%al
 459:	00 ad 00 00 00 64    	add    %ch,0x64000000(%ebp)
 45f:	00 00                	add    %al,(%eax)
 461:	00 64 65 62          	add    %ah,0x62(%ebp,%eiz,2)
 465:	75 67                	jne    4ce <__executable_start-0x8047c06>
 467:	5f                   	pop    %edi
 468:	62 61 63             	bound  %esp,0x63(%ecx)
 46b:	6b 74 72 61 63       	imul   $0x63,0x61(%edx,%esi,2),%esi
 470:	65 00 00             	add    %al,%gs:(%eax)
 473:	00 00                	add    %al,(%eax)
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	fc                   	cld    
       1:	00 00                	add    %al,(%eax)
       3:	00 02                	add    %al,(%edx)
       5:	00 00                	add    %al,(%eax)
       7:	00 00                	add    %al,(%eax)
       9:	00 04 01             	add    %al,(%ecx,%eax,1)
       c:	45                   	inc    %ebp
       d:	00 00                	add    %al,(%eax)
       f:	00 01                	add    %al,(%ecx)
      11:	9e                   	sahf   
      12:	00 00                	add    %al,(%eax)
      14:	00 73 00             	add    %dh,0x0(%ebx)
      17:	00 00                	add    %al,(%eax)
      19:	d4 80                	aam    $0xffffff80
      1b:	04 08                	add    $0x8,%al
      1d:	61                   	popa   
      1e:	81 04 08 00 00 00 00 	addl   $0x0,(%eax,%ecx,1)
      25:	02 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%al
      2c:	03 04 07             	add    (%edi,%eax,1),%eax
      2f:	26 00 00             	add    %al,%es:(%eax)
      32:	00 03                	add    %al,(%ebx)
      34:	01 06                	add    %eax,(%esi)
      36:	10 00                	adc    %al,(%eax)
      38:	00 00                	add    %al,(%eax)
      3a:	03 02                	add    (%edx),%eax
      3c:	05 56 00 00 00       	add    $0x56,%eax
      41:	03 08                	add    (%eax),%ecx
      43:	05 00 00 00 00       	add    $0x0,%eax
      48:	04 3d                	add    $0x3d,%al
      4a:	00 00                	add    %al,(%eax)
      4c:	00 03                	add    %al,(%ebx)
      4e:	14 53                	adc    $0x53,%al
      50:	00 00                	add    %al,(%eax)
      52:	00 03                	add    %al,(%ebx)
      54:	01 08                	add    %ecx,(%eax)
      56:	0e                   	push   %cs
      57:	00 00                	add    %al,(%eax)
      59:	00 03                	add    %al,(%ebx)
      5b:	02 07                	add    (%edi),%al
      5d:	60                   	pusha  
      5e:	00 00                	add    %al,(%eax)
      60:	00 03                	add    %al,(%ebx)
      62:	08 07                	or     %al,(%edi)
      64:	1c 00                	sbb    $0x0,%al
      66:	00 00                	add    %al,(%eax)
      68:	05 51 00 00 00       	add    $0x51,%eax
      6d:	02 01                	add    (%ecx),%al
      6f:	02 09                	add    (%ecx),%cl
      71:	9c                   	pushf  
      72:	00 00                	add    %al,(%eax)
      74:	00 06                	add    %al,(%esi)
      76:	73 00                	jae    78 <__executable_start-0x804805c>
      78:	02 0a                	add    (%edx),%cl
      7a:	9c                   	pushf  
      7b:	00 00                	add    %al,(%eax)
      7d:	00 02                	add    %al,(%edx)
      7f:	23 00                	and    (%eax),%eax
      81:	06                   	push   %es
      82:	69 00 02 0b 48 00    	imul   $0x480b02,(%eax),%eax
      88:	00 00                	add    %al,(%eax)
      8a:	03 23                	add    (%ebx),%esp
      8c:	80 02 06             	addb   $0x6,(%edx)
      8f:	6a 00                	push   $0x0
      91:	02 0b                	add    (%ebx),%cl
      93:	48                   	dec    %eax
      94:	00 00                	add    %al,(%eax)
      96:	00 03                	add    %al,(%ebx)
      98:	23 81 02 00 07 48    	and    0x48070002(%ecx),%eax
      9e:	00 00                	add    %al,(%eax)
      a0:	00 ac 00 00 00 08 ac 	add    %ch,-0x53f80000(%eax,%eax,1)
      a7:	00 00                	add    %al,(%eax)
      a9:	00 ff                	add    %bh,%bh
      ab:	00 09                	add    %cl,(%ecx)
      ad:	04 07                	add    $0x7,%al
      af:	0a 01                	or     (%ecx),%al
      b1:	33 00                	xor    (%eax),%eax
      b3:	00 00                	add    %al,(%eax)
      b5:	01 0b                	add    %ecx,(%ebx)
      b7:	01 d4                	add    %edx,%esp
      b9:	80 04 08 61          	addb   $0x61,(%eax,%ecx,1)
      bd:	81 04 08 00 00 00 00 	addl   $0x0,(%eax,%ecx,1)
      c4:	e7 00                	out    %eax,$0x0
      c6:	00 00                	add    %al,(%eax)
      c8:	0b bd 00 00 00 01    	or     0x1000000(%ebp),%edi
      ce:	0d e7 00 00 00       	or     $0xe7,%eax
      d3:	03 91 f0 5f 0b 51    	add    0x510b5ff0(%ecx),%edx
      d9:	00 00                	add    %al,(%eax)
      db:	00 01                	add    %al,(%ecx)
      dd:	0e                   	push   %cs
      de:	68 00 00 00 03       	push   $0x3000000
      e3:	91                   	xchg   %eax,%ecx
      e4:	ee                   	out    %al,(%dx)
      e5:	5d                   	pop    %ebp
      e6:	00 07                	add    %al,(%edi)
      e8:	f8                   	clc    
      e9:	00 00                	add    %al,(%eax)
      eb:	00 f8                	add    %bh,%al
      ed:	00 00                	add    %al,(%eax)
      ef:	00 0c ac             	add    %cl,(%esp,%ebp,4)
      f2:	00 00                	add    %al,(%eax)
      f4:	00 ff                	add    %bh,%bh
      f6:	0f 00 03             	sldt   (%ebx)
      f9:	01 06                	add    %eax,(%esi)
      fb:	17                   	pop    %ss
      fc:	00 00                	add    %al,(%eax)
      fe:	00 00                	add    %al,(%eax)
     100:	0e                   	push   %cs
     101:	02 00                	add    (%eax),%al
     103:	00 02                	add    %al,(%edx)
     105:	00 9f 00 00 00 04    	add    %bl,0x4000000(%edi)
     10b:	01 45 00             	add    %eax,0x0(%ebp)
     10e:	00 00                	add    %al,(%eax)
     110:	01 ff                	add    %edi,%edi
     112:	00 00                	add    %al,(%eax)
     114:	00 73 00             	add    %dh,0x0(%ebx)
     117:	00 00                	add    %al,(%eax)
     119:	64 81 04 08 18 83 04 	addl   $0x8048318,%fs:(%eax,%ecx,1)
     120:	08 
     121:	84 00                	test   %al,(%eax)
     123:	00 00                	add    %al,(%eax)
     125:	02 01                	add    (%ecx),%al
     127:	06                   	push   %es
     128:	10 00                	adc    %al,(%eax)
     12a:	00 00                	add    %al,(%eax)
     12c:	02 02                	add    (%edx),%al
     12e:	05 56 00 00 00       	add    $0x56,%eax
     133:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
     13a:	02 08                	add    (%eax),%cl
     13c:	05 00 00 00 00       	add    $0x0,%eax
     141:	04 3d                	add    $0x3d,%al
     143:	00 00                	add    %al,(%eax)
     145:	00 02                	add    %al,(%edx)
     147:	14 4c                	adc    $0x4c,%al
     149:	00 00                	add    %al,(%eax)
     14b:	00 02                	add    %al,(%edx)
     14d:	01 08                	add    %ecx,(%eax)
     14f:	0e                   	push   %cs
     150:	00 00                	add    %al,(%eax)
     152:	00 02                	add    %al,(%edx)
     154:	02 07                	add    (%edi),%al
     156:	60                   	pusha  
     157:	00 00                	add    %al,(%eax)
     159:	00 02                	add    %al,(%edx)
     15b:	04 07                	add    $0x7,%al
     15d:	26 00 00             	add    %al,%es:(%eax)
     160:	00 02                	add    %al,(%edx)
     162:	08 07                	or     %al,(%edi)
     164:	1c 00                	sbb    $0x0,%al
     166:	00 00                	add    %al,(%eax)
     168:	04 d1                	add    $0xd1,%al
     16a:	00 00                	add    %al,(%eax)
     16c:	00 03                	add    %al,(%ebx)
     16e:	0a 5a 00             	or     0x0(%edx),%bl
     171:	00 00                	add    %al,(%eax)
     173:	05 51 00 00 00       	add    $0x51,%eax
     178:	02 01                	add    (%ecx),%al
     17a:	04 09                	add    $0x9,%al
     17c:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
     17d:	00 00                	add    %al,(%eax)
     17f:	00 06                	add    %al,(%esi)
     181:	73 00                	jae    183 <__executable_start-0x8047f51>
     183:	04 0a                	add    $0xa,%al
     185:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
     186:	00 00                	add    %al,(%eax)
     188:	00 02                	add    %al,(%edx)
     18a:	23 00                	and    (%eax),%eax
     18c:	06                   	push   %es
     18d:	69 00 04 0b 41 00    	imul   $0x410b04,(%eax),%eax
     193:	00 00                	add    %al,(%eax)
     195:	03 23                	add    (%ebx),%esp
     197:	80 02 06             	addb   $0x6,(%edx)
     19a:	6a 00                	push   $0x0
     19c:	04 0b                	add    $0xb,%al
     19e:	41                   	inc    %ecx
     19f:	00 00                	add    %al,(%eax)
     1a1:	00 03                	add    %al,(%ebx)
     1a3:	23 81 02 00 07 41    	and    0x41070002(%ecx),%eax
     1a9:	00 00                	add    %al,(%eax)
     1ab:	00 b7 00 00 00 08    	add    %dh,0x8000000(%edi)
     1b1:	b7 00                	mov    $0x0,%bh
     1b3:	00 00                	add    %al,(%eax)
     1b5:	ff 00                	incl   (%eax)
     1b7:	09 04 07             	or     %eax,(%edi,%eax,1)
     1ba:	0a e8                	or     %al,%ch
     1bc:	00 00                	add    %al,(%eax)
     1be:	00 01                	add    %al,(%ecx)
     1c0:	06                   	push   %es
     1c1:	01 64 81 04          	add    %esp,0x4(%ecx,%eax,4)
     1c5:	08 89 81 04 08 2c    	or     %cl,0x2c080481(%ecx)
     1cb:	00 00                	add    %al,(%eax)
     1cd:	00 f7                	add    %dh,%bh
     1cf:	00 00                	add    %al,(%eax)
     1d1:	00 0b                	add    %cl,(%ebx)
     1d3:	61                   	popa   
     1d4:	00 01                	add    %al,(%ecx)
     1d6:	06                   	push   %es
     1d7:	f7 00 00 00 02 91    	testl  $0x91020000,(%eax)
     1dd:	00 0b                	add    %cl,(%ebx)
     1df:	62 00                	bound  %eax,(%eax)
     1e1:	01 06                	add    %eax,(%esi)
     1e3:	f7 00 00 00 02 91    	testl  $0x91020000,(%eax)
     1e9:	04 0c                	add    $0xc,%al
     1eb:	74 00                	je     1ed <__executable_start-0x8047ee7>
     1ed:	01 08                	add    %ecx,(%eax)
     1ef:	41                   	inc    %ecx
     1f0:	00 00                	add    %al,(%eax)
     1f2:	00 02                	add    %al,(%edx)
     1f4:	91                   	xchg   %eax,%ecx
     1f5:	77 00                	ja     1f7 <__executable_start-0x8047edd>
     1f7:	0d 04 41 00 00       	or     $0x4104,%eax
     1fc:	00 0e                	add    %cl,(%esi)
     1fe:	01 c7                	add    %eax,%edi
     200:	00 00                	add    %al,(%eax)
     202:	00 01                	add    %al,(%ecx)
     204:	0e                   	push   %cs
     205:	01 89 81 04 08 56    	add    %ecx,0x56080481(%ecx)
     20b:	82                   	(bad)  
     20c:	04 08                	add    $0x8,%al
     20e:	58                   	pop    %eax
     20f:	00 00                	add    %al,(%eax)
     211:	00 81 01 00 00 0f    	add    %al,0xf000001(%ecx)
     217:	51                   	push   %ecx
     218:	00 00                	add    %al,(%eax)
     21a:	00 01                	add    %al,(%ecx)
     21c:	0e                   	push   %cs
     21d:	81 01 00 00 02 91    	addl   $0x91020000,(%ecx)
     223:	00 0f                	add    %cl,(%edi)
     225:	f2 00 00             	repnz add %al,(%eax)
     228:	00 01                	add    %al,(%ecx)
     22a:	0e                   	push   %cs
     22b:	87 01                	xchg   %eax,(%ecx)
     22d:	00 00                	add    %al,(%eax)
     22f:	02 91 04 0f 65 01    	add    0x1650f04(%ecx),%dl
     235:	00 00                	add    %al,(%eax)
     237:	01 0e                	add    %ecx,(%esi)
     239:	68 00 00 00 02       	push   $0x2000000
     23e:	91                   	xchg   %eax,%ecx
     23f:	08 0c 6b             	or     %cl,(%ebx,%ebp,2)
     242:	65                   	gs
     243:	79 00                	jns    245 <__executable_start-0x8047e8f>
     245:	01 10                	add    %edx,(%eax)
     247:	8e 01                	mov    (%ecx),%es
     249:	00 00                	add    %al,(%eax)
     24b:	02 91 64 10 f7 00    	add    0xf71064(%ecx),%dl
     251:	00 00                	add    %al,(%eax)
     253:	01 11                	add    %edx,(%ecx)
     255:	68 00 00 00 02       	push   $0x2000000
     25a:	91                   	xchg   %eax,%ecx
     25b:	68 0c 73 00 01       	push   $0x100730c
     260:	12 f7                	adc    %bh,%dh
     262:	00 00                	add    %al,(%eax)
     264:	00 02                	add    %al,(%edx)
     266:	91                   	xchg   %eax,%ecx
     267:	6c                   	insb   (%dx),%es:(%edi)
     268:	0c 69                	or     $0x69,%al
     26a:	00 01                	add    %al,(%ecx)
     26c:	13 33                	adc    (%ebx),%esi
     26e:	00 00                	add    %al,(%eax)
     270:	00 02                	add    %al,(%edx)
     272:	91                   	xchg   %eax,%ecx
     273:	70 0c                	jo     281 <__executable_start-0x8047e53>
     275:	6a 00                	push   $0x0
     277:	01 13                	add    %edx,(%ebx)
     279:	33 00                	xor    (%eax),%eax
     27b:	00 00                	add    %al,(%eax)
     27d:	02 91 74 00 0d 04    	add    0x40d0074(%ecx),%dl
     283:	73 00                	jae    285 <__executable_start-0x8047e4f>
     285:	00 00                	add    %al,(%eax)
     287:	0d 04 8d 01 00       	or     $0x18d04,%eax
     28c:	00 11                	add    %dl,(%ecx)
     28e:	0d 04 94 01 00       	or     $0x19404,%eax
     293:	00 12                	add    %dl,(%edx)
     295:	41                   	inc    %ecx
     296:	00 00                	add    %al,(%eax)
     298:	00 0e                	add    %cl,(%esi)
     29a:	01 d8                	add    %ebx,%eax
     29c:	00 00                	add    %al,(%eax)
     29e:	00 01                	add    %al,(%ecx)
     2a0:	23 01                	and    (%ecx),%eax
     2a2:	56                   	push   %esi
     2a3:	82                   	(bad)  
     2a4:	04 08                	add    $0x8,%al
     2a6:	18 83 04 08 84 00    	sbb    %al,0x840804(%ebx)
     2ac:	00 00                	add    %al,(%eax)
     2ae:	0f 02 00             	lar    (%eax),%eax
     2b1:	00 0f                	add    %cl,(%edi)
     2b3:	51                   	push   %ecx
     2b4:	00 00                	add    %al,(%eax)
     2b6:	00 01                	add    %al,(%ecx)
     2b8:	23 81 01 00 00 02    	and    0x2000001(%ecx),%eax
     2be:	91                   	xchg   %eax,%ecx
     2bf:	00 0f                	add    %cl,(%edi)
     2c1:	e3 00                	jecxz  2c3 <__executable_start-0x8047e11>
     2c3:	00 00                	add    %al,(%eax)
     2c5:	01 23                	add    %esp,(%ebx)
     2c7:	0f 02 00             	lar    (%eax),%eax
     2ca:	00 02                	add    %al,(%edx)
     2cc:	91                   	xchg   %eax,%ecx
     2cd:	04 0f                	add    $0xf,%al
     2cf:	65 01 00             	add    %eax,%gs:(%eax)
     2d2:	00 01                	add    %al,(%ecx)
     2d4:	23 68 00             	and    0x0(%eax),%ebp
     2d7:	00 00                	add    %al,(%eax)
     2d9:	02 91 08 0c 62 75    	add    0x75620c08(%ecx),%dl
     2df:	66                   	data16
     2e0:	00 01                	add    %al,(%ecx)
     2e2:	25 f7 00 00 00       	and    $0xf7,%eax
     2e7:	02 91 68 0c 73 00    	add    0x730c68(%ecx),%dl
     2ed:	01 26                	add    %esp,(%esi)
     2ef:	f7 00 00 00 02 91    	testl  $0x91020000,(%eax)
     2f5:	6c                   	insb   (%dx),%es:(%edi)
     2f6:	0c 69                	or     $0x69,%al
     2f8:	00 01                	add    %al,(%ecx)
     2fa:	27                   	daa    
     2fb:	41                   	inc    %ecx
     2fc:	00 00                	add    %al,(%eax)
     2fe:	00 02                	add    %al,(%edx)
     300:	91                   	xchg   %eax,%ecx
     301:	72 0c                	jb     30f <__executable_start-0x8047dc5>
     303:	6a 00                	push   $0x0
     305:	01 27                	add    %esp,(%edi)
     307:	41                   	inc    %ecx
     308:	00 00                	add    %al,(%eax)
     30a:	00 02                	add    %al,(%edx)
     30c:	91                   	xchg   %eax,%ecx
     30d:	73 00                	jae    30f <__executable_start-0x8047dc5>
     30f:	13 04 00             	adc    (%eax,%eax,1),%eax
     312:	38 01                	cmp    %al,(%ecx)
     314:	00 00                	add    %al,(%eax)
     316:	02 00                	add    (%eax),%al
     318:	93                   	xchg   %eax,%ebx
     319:	01 00                	add    %eax,(%eax)
     31b:	00 04 01             	add    %al,(%ecx,%eax,1)
     31e:	45                   	inc    %ebp
     31f:	00 00                	add    %al,(%eax)
     321:	00 01                	add    %al,(%ecx)
     323:	28 01                	sub    %al,(%ecx)
     325:	00 00                	add    %al,(%eax)
     327:	73 00                	jae    329 <__executable_start-0x8047dab>
     329:	00 00                	add    %al,(%eax)
     32b:	18 83 04 08 a7 83    	sbb    %al,-0x7c58f7fc(%ebx)
     331:	04 08                	add    $0x8,%al
     333:	18 01                	sbb    %al,(%ecx)
     335:	00 00                	add    %al,(%eax)
     337:	02 01                	add    (%ecx),%al
     339:	06                   	push   %es
     33a:	10 00                	adc    %al,(%eax)
     33c:	00 00                	add    %al,(%eax)
     33e:	02 02                	add    (%edx),%al
     340:	05 56 00 00 00       	add    $0x56,%eax
     345:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
     34c:	02 08                	add    (%eax),%cl
     34e:	05 00 00 00 00       	add    $0x0,%eax
     353:	02 01                	add    (%ecx),%al
     355:	08 0e                	or     %cl,(%esi)
     357:	00 00                	add    %al,(%eax)
     359:	00 02                	add    %al,(%edx)
     35b:	02 07                	add    (%edi),%al
     35d:	60                   	pusha  
     35e:	00 00                	add    %al,(%eax)
     360:	00 04 12             	add    %al,(%edx,%edx,1)
     363:	01 00                	add    %eax,(%eax)
     365:	00 02                	add    %al,(%edx)
     367:	1a 5a 00             	sbb    0x0(%edx),%bl
     36a:	00 00                	add    %al,(%eax)
     36c:	02 04 07             	add    (%edi,%eax,1),%al
     36f:	26 00 00             	add    %al,%es:(%eax)
     372:	00 02                	add    %al,(%edx)
     374:	08 07                	or     %al,(%edi)
     376:	1c 00                	sbb    $0x0,%al
     378:	00 00                	add    %al,(%eax)
     37a:	04 d1                	add    $0xd1,%al
     37c:	00 00                	add    %al,(%eax)
     37e:	00 03                	add    %al,(%ebx)
     380:	0a 5a 00             	or     0x0(%edx),%bl
     383:	00 00                	add    %al,(%eax)
     385:	05 01 22 01 00       	add    $0x12201,%eax
     38a:	00 01                	add    %al,(%ecx)
     38c:	3f                   	aas    
     38d:	01 fe                	add    %edi,%esi
     38f:	00 00                	add    %al,(%eax)
     391:	00 18                	add    %bl,(%eax)
     393:	83 04 08 a7          	addl   $0xffffffa7,(%eax,%ecx,1)
     397:	83 04 08 b0          	addl   $0xffffffb0,(%eax,%ecx,1)
     39b:	00 00                	add    %al,(%eax)
     39d:	00 fe                	add    %bh,%dh
     39f:	00 00                	add    %al,(%eax)
     3a1:	00 06                	add    %al,(%esi)
     3a3:	62 5f 00             	bound  %ebx,0x0(%edi)
     3a6:	01 3f                	add    %edi,(%edi)
     3a8:	05 01 00 00 02       	add    $0x2000001,%eax
     3ad:	91                   	xchg   %eax,%ecx
     3ae:	00 06                	add    %al,(%esi)
     3b0:	6e                   	outsb  %ds:(%esi),(%dx)
     3b1:	00 01                	add    %al,(%ecx)
     3b3:	3f                   	aas    
     3b4:	68 00 00 00 02       	push   $0x2000000
     3b9:	91                   	xchg   %eax,%ecx
     3ba:	04 07                	add    $0x7,%al
     3bc:	62 00                	bound  %eax,(%eax)
     3be:	01 41 0c             	add    %eax,0xc(%ecx)
     3c1:	01 00                	add    %eax,(%eax)
     3c3:	00 02                	add    %al,(%edx)
     3c5:	91                   	xchg   %eax,%ecx
     3c6:	68 07 73 00 01       	push   $0x1007307
     3cb:	42                   	inc    %edx
     3cc:	4f                   	dec    %edi
     3cd:	00 00                	add    %al,(%eax)
     3cf:	00 02                	add    %al,(%edx)
     3d1:	91                   	xchg   %eax,%ecx
     3d2:	6c                   	insb   (%dx),%es:(%edi)
     3d3:	07                   	pop    %es
     3d4:	69 00 01 43 68 00    	imul   $0x684301,(%eax),%eax
     3da:	00 00                	add    %al,(%eax)
     3dc:	02 91 70 08 33 83    	add    -0x7cccf790(%ecx),%dl
     3e2:	04 08                	add    $0x8,%al
     3e4:	62 83 04 08 e7 00    	bound  %eax,0xe70804(%ebx)
     3ea:	00 00                	add    %al,(%eax)
     3ec:	07                   	pop    %es
     3ed:	63 00                	arpl   %ax,(%eax)
     3ef:	01 46 41             	add    %eax,0x41(%esi)
     3f2:	00 00                	add    %al,(%eax)
     3f4:	00 02                	add    %al,(%edx)
     3f6:	91                   	xchg   %eax,%ecx
     3f7:	76 00                	jbe    3f9 <__executable_start-0x8047cdb>
     3f9:	09 6e 83             	or     %ebp,-0x7d(%esi)
     3fc:	04 08                	add    $0x8,%al
     3fe:	9a 83 04 08 07 63 00 	lcall  $0x63,$0x7080483
     405:	01 4b 41             	add    %ecx,0x41(%ebx)
     408:	00 00                	add    %al,(%eax)
     40a:	00 02                	add    %al,(%edx)
     40c:	91                   	xchg   %eax,%ecx
     40d:	77 00                	ja     40f <__executable_start-0x8047cc5>
     40f:	00 02                	add    %al,(%edx)
     411:	04 07                	add    $0x7,%al
     413:	21 00                	and    %eax,(%eax)
     415:	00 00                	add    %al,(%eax)
     417:	0a 04 0b             	or     (%ebx,%ecx,1),%al
     41a:	01 00                	add    %eax,(%eax)
     41c:	00 0b                	add    %cl,(%ebx)
     41e:	0a 04 12             	or     (%edx,%edx,1),%al
     421:	01 00                	add    %eax,(%eax)
     423:	00 0c 41             	add    %cl,(%ecx,%eax,2)
     426:	00 00                	add    %al,(%eax)
     428:	00 0d fe 00 00 00    	add    %cl,0xfe
     42e:	27                   	daa    
     42f:	01 00                	add    %eax,(%eax)
     431:	00 0e                	add    %cl,(%esi)
     433:	27                   	daa    
     434:	01 00                	add    %eax,(%eax)
     436:	00 ff                	add    %bh,%bh
     438:	00 0f                	add    %cl,(%edi)
     43a:	04 07                	add    $0x7,%al
     43c:	10 1b                	adc    %bl,(%ebx)
     43e:	01 00                	add    %eax,(%eax)
     440:	00 01                	add    %al,(%ecx)
     442:	06                   	push   %es
     443:	17                   	pop    %ss
     444:	01 00                	add    %eax,(%eax)
     446:	00 05 03 40 c6 04    	add    %al,0x4c64003
     44c:	08 00                	or     %al,(%eax)
     44e:	3f                   	aas    
     44f:	05 00 00 02 00       	add    $0x20000,%eax
     454:	54                   	push   %esp
     455:	02 00                	add    (%eax),%al
     457:	00 04 01             	add    %al,(%ecx,%eax,1)
     45a:	45                   	inc    %ebp
     45b:	00 00                	add    %al,(%eax)
     45d:	00 01                	add    %al,(%ecx)
     45f:	54                   	push   %esp
     460:	02 00                	add    (%eax),%al
     462:	00 73 00             	add    %dh,0x0(%ebx)
     465:	00 00                	add    %al,(%eax)
     467:	a8 83                	test   $0x83,%al
     469:	04 08                	add    $0x8,%al
     46b:	6c                   	insb   (%dx),%es:(%edi)
     46c:	8a 04 08             	mov    (%eax,%ecx,1),%al
     46f:	8c 01                	mov    %es,(%ecx)
     471:	00 00                	add    %al,(%eax)
     473:	02 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%al
     47a:	03 d1                	add    %ecx,%edx
     47c:	00 00                	add    %al,(%eax)
     47e:	00 02                	add    %al,(%edx)
     480:	0a 37                	or     (%edi),%dh
     482:	00 00                	add    %al,(%eax)
     484:	00 04 04             	add    %al,(%esp,%eax,1)
     487:	07                   	pop    %es
     488:	26 00 00             	add    %al,%es:(%eax)
     48b:	00 03                	add    %al,(%ebx)
     48d:	d9 07                	flds   (%edi)
     48f:	00 00                	add    %al,(%eax)
     491:	03 08                	add    (%eax),%ecx
     493:	25 00 00 00 03       	and    $0x3000000,%eax
     498:	52                   	push   %edx
     499:	01 00                	add    %eax,(%eax)
     49b:	00 04 07             	add    %al,(%edi,%eax,1)
     49e:	54                   	push   %esp
     49f:	00 00                	add    %al,(%eax)
     4a1:	00 05 04 48 01 00    	add    %al,0x14804
     4a7:	00 5e 00             	add    %bl,0x0(%esi)
     4aa:	00 00                	add    %al,(%eax)
     4ac:	04 01                	add    $0x1,%al
     4ae:	06                   	push   %es
     4af:	17                   	pop    %ss
     4b0:	00 00                	add    %al,(%eax)
     4b2:	00 04 01             	add    %al,(%ecx,%eax,1)
     4b5:	06                   	push   %es
     4b6:	10 00                	adc    %al,(%eax)
     4b8:	00 00                	add    %al,(%eax)
     4ba:	04 02                	add    $0x2,%al
     4bc:	05 56 00 00 00       	add    $0x56,%eax
     4c1:	04 08                	add    $0x8,%al
     4c3:	05 00 00 00 00       	add    $0x0,%eax
     4c8:	03 3d 00 00 00 05    	add    0x5000000,%edi
     4ce:	14 85                	adc    $0x85,%al
     4d0:	00 00                	add    %al,(%eax)
     4d2:	00 04 01             	add    %al,(%ecx,%eax,1)
     4d5:	08 0e                	or     %cl,(%esi)
     4d7:	00 00                	add    %al,(%eax)
     4d9:	00 04 02             	add    %al,(%edx,%eax,1)
     4dc:	07                   	pop    %es
     4dd:	60                   	pusha  
     4de:	00 00                	add    %al,(%eax)
     4e0:	00 04 08             	add    %al,(%eax,%ecx,1)
     4e3:	07                   	pop    %es
     4e4:	1c 00                	sbb    $0x0,%al
     4e6:	00 00                	add    %al,(%eax)
     4e8:	06                   	push   %es
     4e9:	fd                   	std    
     4ea:	01 00                	add    %eax,(%eax)
     4ec:	00 01                	add    %al,(%ecx)
     4ee:	0c 01                	or     $0x1,%al
     4f0:	a8 83                	test   $0x83,%al
     4f2:	04 08                	add    $0x8,%al
     4f4:	79 84                	jns    47a <__executable_start-0x8047c5a>
     4f6:	04 08                	add    $0x8,%al
     4f8:	dc 00                	faddl  (%eax)
     4fa:	00 00                	add    %al,(%eax)
     4fc:	ee                   	out    %al,(%dx)
     4fd:	00 00                	add    %al,(%eax)
     4ff:	00 07                	add    %al,(%edi)
     501:	e1 01                	loope  504 <__executable_start-0x8047bd0>
     503:	00 00                	add    %al,(%eax)
     505:	01 0c ee             	add    %ecx,(%esi,%ebp,8)
     508:	00 00                	add    %al,(%eax)
     50a:	00 02                	add    %al,(%edx)
     50c:	91                   	xchg   %eax,%ecx
     50d:	00 07                	add    %al,(%edi)
     50f:	3a 02                	cmp    (%edx),%al
     511:	00 00                	add    %al,(%eax)
     513:	01 0c 49             	add    %ecx,(%ecx,%ecx,2)
     516:	00 00                	add    %al,(%eax)
     518:	00 02                	add    %al,(%edx)
     51a:	91                   	xchg   %eax,%ecx
     51b:	04 07                	add    $0x7,%al
     51d:	e8 01 00 00 01       	call   1000523 <__executable_start-0x7047bb1>
     522:	0c ee                	or     $0xee,%al
     524:	00 00                	add    %al,(%eax)
     526:	00 02                	add    %al,(%edx)
     528:	91                   	xchg   %eax,%ecx
     529:	08 08                	or     %cl,(%eax)
     52b:	62 75 66             	bound  %esi,0x66(%ebp)
     52e:	00 01                	add    %al,(%ecx)
     530:	13 f9                	adc    %ecx,%edi
     532:	00 00                	add    %al,(%eax)
     534:	00 05 03 60 ca 04    	add    %al,0x4ca6003
     53a:	08 00                	or     %al,(%eax)
     53c:	09 04 f4             	or     %eax,(%esp,%esi,8)
     53f:	00 00                	add    %al,(%eax)
     541:	00 0a                	add    %cl,(%edx)
     543:	5e                   	pop    %esi
     544:	00 00                	add    %al,(%eax)
     546:	00 0b                	add    %cl,(%ebx)
     548:	5e                   	pop    %esi
     549:	00 00                	add    %al,(%eax)
     54b:	00 0a                	add    %cl,(%edx)
     54d:	01 00                	add    %eax,(%eax)
     54f:	00 0c 0a             	add    %cl,(%edx,%ecx,1)
     552:	01 00                	add    %eax,(%eax)
     554:	00 ff                	add    %bh,%bh
     556:	03 00                	add    (%eax),%eax
     558:	0d 04 07 0e 01       	or     $0x10e0704,%eax
     55d:	6d                   	insl   (%dx),%es:(%edi)
     55e:	73 67                	jae    5c7 <__executable_start-0x8047b0d>
     560:	00 01                	add    %al,(%ecx)
     562:	1c 01                	sbb    $0x1,%al
     564:	79 84                	jns    4ea <__executable_start-0x8047bea>
     566:	04 08                	add    $0x8,%al
     568:	af                   	scas   %es:(%edi),%eax
     569:	84 04 08             	test   %al,(%eax,%ecx,1)
     56c:	08 01                	or     %al,(%ecx)
     56e:	00 00                	add    %al,(%eax)
     570:	44                   	inc    %esp
     571:	01 00                	add    %eax,(%eax)
     573:	00 07                	add    %al,(%edi)
     575:	e1 01                	loope  578 <__executable_start-0x8047b5c>
     577:	00 00                	add    %al,(%eax)
     579:	01 1c ee             	add    %ebx,(%esi,%ebp,8)
     57c:	00 00                	add    %al,(%eax)
     57e:	00 02                	add    %al,(%edx)
     580:	91                   	xchg   %eax,%ecx
     581:	00 0f                	add    %cl,(%edi)
     583:	10 3a                	adc    %bh,(%edx)
     585:	02 00                	add    (%eax),%al
     587:	00 01                	add    %al,(%ecx)
     589:	1e                   	push   %ds
     58a:	49                   	dec    %ecx
     58b:	00 00                	add    %al,(%eax)
     58d:	00 02                	add    %al,(%edx)
     58f:	91                   	xchg   %eax,%ecx
     590:	6c                   	insb   (%dx),%es:(%edi)
     591:	00 11                	add    %dl,(%ecx)
     593:	01 74 02 00          	add    %esi,0x0(%edx,%eax,1)
     597:	00 01                	add    %al,(%ecx)
     599:	28 01                	sub    %al,(%ecx)
     59b:	af                   	scas   %es:(%edi),%eax
     59c:	84 04 08             	test   %al,(%eax,%ecx,1)
     59f:	e1 84                	loope  525 <__executable_start-0x8047baf>
     5a1:	04 08                	add    $0x8,%al
     5a3:	34 01                	xor    $0x1,%al
     5a5:	00 00                	add    %al,(%eax)
     5a7:	7b 01                	jnp    5aa <__executable_start-0x8047b2a>
     5a9:	00 00                	add    %al,(%eax)
     5ab:	07                   	pop    %es
     5ac:	e1 01                	loope  5af <__executable_start-0x8047b25>
     5ae:	00 00                	add    %al,(%eax)
     5b0:	01 28                	add    %ebp,(%eax)
     5b2:	ee                   	out    %al,(%dx)
     5b3:	00 00                	add    %al,(%eax)
     5b5:	00 02                	add    %al,(%edx)
     5b7:	91                   	xchg   %eax,%ecx
     5b8:	00 0f                	add    %cl,(%edi)
     5ba:	10 3a                	adc    %bh,(%edx)
     5bc:	02 00                	add    (%eax),%al
     5be:	00 01                	add    %al,(%ecx)
     5c0:	2a 49 00             	sub    0x0(%ecx),%cl
     5c3:	00 00                	add    %al,(%eax)
     5c5:	02 91 6c 00 06 43    	add    0x4306006c(%ecx),%dl
     5cb:	01 00                	add    %eax,(%eax)
     5cd:	00 01                	add    %al,(%ecx)
     5cf:	34 01                	xor    $0x1,%al
     5d1:	e1 84                	loope  557 <__executable_start-0x8047b7d>
     5d3:	04 08                	add    $0x8,%al
     5d5:	3d 85 04 08 60       	cmp    $0x60080485,%eax
     5da:	01 00                	add    %eax,(%eax)
     5dc:	00 f6                	add    %dh,%dh
     5de:	01 00                	add    %eax,(%eax)
     5e0:	00 12                	add    %dl,(%edx)
     5e2:	61                   	popa   
     5e3:	5f                   	pop    %edi
     5e4:	00 01                	add    %al,(%ecx)
     5e6:	34 f6                	xor    $0xf6,%al
     5e8:	01 00                	add    %eax,(%eax)
     5ea:	00 02                	add    %al,(%edx)
     5ec:	91                   	xchg   %eax,%ecx
     5ed:	00 12                	add    %dl,(%edx)
     5ef:	62 5f 00             	bound  %ebx,0x0(%edi)
     5f2:	01 34 f6             	add    %esi,(%esi,%esi,8)
     5f5:	01 00                	add    %eax,(%eax)
     5f7:	00 02                	add    %al,(%edx)
     5f9:	91                   	xchg   %eax,%ecx
     5fa:	04 07                	add    $0x7,%al
     5fc:	65 01 00             	add    %eax,%gs:(%eax)
     5ff:	00 01                	add    %al,(%ecx)
     601:	34 2c                	xor    $0x2c,%al
     603:	00 00                	add    %al,(%eax)
     605:	00 02                	add    %al,(%edx)
     607:	91                   	xchg   %eax,%ecx
     608:	08 08                	or     %cl,(%eax)
     60a:	61                   	popa   
     60b:	00 01                	add    %al,(%ecx)
     60d:	36                   	ss
     60e:	f8                   	clc    
     60f:	01 00                	add    %eax,(%eax)
     611:	00 02                	add    %al,(%edx)
     613:	91                   	xchg   %eax,%ecx
     614:	68 08 62 00 01       	push   $0x1006208
     619:	37                   	aaa    
     61a:	f8                   	clc    
     61b:	01 00                	add    %eax,(%eax)
     61d:	00 02                	add    %al,(%edx)
     61f:	91                   	xchg   %eax,%ecx
     620:	6c                   	insb   (%dx),%es:(%edi)
     621:	08 69 00             	or     %ch,0x0(%ecx)
     624:	01 38                	add    %edi,(%eax)
     626:	2c 00                	sub    $0x0,%al
     628:	00 00                	add    %al,(%eax)
     62a:	02 91 70 13 fc 84    	add    -0x7b03ec90(%ecx),%dl
     630:	04 08                	add    $0x8,%al
     632:	2f                   	das    
     633:	85 04 08             	test   %eax,(%eax,%ecx,1)
     636:	08 74 00 01          	or     %dh,0x1(%eax,%eax,1)
     63a:	3c 7a                	cmp    $0x7a,%al
     63c:	00 00                	add    %al,(%eax)
     63e:	00 02                	add    %al,(%edx)
     640:	91                   	xchg   %eax,%ecx
     641:	77 00                	ja     643 <__executable_start-0x8047a91>
     643:	00 14 04             	add    %dl,(%esp,%eax,1)
     646:	09 04 7a             	or     %eax,(%edx,%edi,2)
     649:	00 00                	add    %al,(%eax)
     64b:	00 11                	add    %dl,(%ecx)
     64d:	01 c6                	add    %eax,%esi
     64f:	01 00                	add    %eax,(%eax)
     651:	00 01                	add    %al,(%ecx)
     653:	43                   	inc    %ebx
     654:	01 3d 85 04 08 a5    	add    %edi,0xa5080485
     65a:	85 04 08             	test   %eax,(%eax,%ecx,1)
     65d:	8c 01                	mov    %es,(%ecx)
     65f:	00 00                	add    %al,(%eax)
     661:	72 02                	jb     665 <__executable_start-0x8047a6f>
     663:	00 00                	add    %al,(%eax)
     665:	07                   	pop    %es
     666:	e3 00                	jecxz  668 <__executable_start-0x8047a6c>
     668:	00 00                	add    %al,(%eax)
     66a:	01 43 f6             	add    %eax,-0xa(%ebx)
     66d:	01 00                	add    %eax,(%eax)
     66f:	00 02                	add    %al,(%edx)
     671:	91                   	xchg   %eax,%ecx
     672:	00 12                	add    %dl,(%edx)
     674:	63 6e 74             	arpl   %bp,0x74(%esi)
     677:	00 01                	add    %al,(%ecx)
     679:	43                   	inc    %ebx
     67a:	2c 00                	sub    $0x0,%al
     67c:	00 00                	add    %al,(%eax)
     67e:	02 91 04 07 65 01    	add    0x1650704(%ecx),%dl
     684:	00 00                	add    %al,(%eax)
     686:	01 43 2c             	add    %eax,0x2c(%ebx)
     689:	00 00                	add    %al,(%eax)
     68b:	00 02                	add    %al,(%edx)
     68d:	91                   	xchg   %eax,%ecx
     68e:	08 08                	or     %cl,(%eax)
     690:	62 75 66             	bound  %esi,0x66(%ebp)
     693:	00 01                	add    %al,(%ecx)
     695:	45                   	inc    %ebp
     696:	72 02                	jb     69a <__executable_start-0x8047a3a>
     698:	00 00                	add    %al,(%eax)
     69a:	02 91 64 08 69 00    	add    0x690864(%ecx),%dl
     6a0:	01 46 2c             	add    %eax,0x2c(%esi)
     6a3:	00 00                	add    %al,(%eax)
     6a5:	00 02                	add    %al,(%edx)
     6a7:	91                   	xchg   %eax,%ecx
     6a8:	68 13 52 85 04       	push   $0x4855213
     6ad:	08 97 85 04 08 08    	or     %dl,0x8080485(%edi)
     6b3:	6a 00                	push   $0x0
     6b5:	01 4a 2c             	add    %ecx,0x2c(%edx)
     6b8:	00 00                	add    %al,(%eax)
     6ba:	00 02                	add    %al,(%edx)
     6bc:	91                   	xchg   %eax,%ecx
     6bd:	6c                   	insb   (%dx),%es:(%edi)
     6be:	00 00                	add    %al,(%eax)
     6c0:	09 04 5e             	or     %eax,(%esi,%ebx,2)
     6c3:	00 00                	add    %al,(%eax)
     6c5:	00 11                	add    %dl,(%ecx)
     6c7:	01 66 02             	add    %esp,0x2(%esi)
     6ca:	00 00                	add    %al,(%eax)
     6cc:	01 50 01             	add    %edx,0x1(%eax)
     6cf:	a5                   	movsl  %ds:(%esi),%es:(%edi)
     6d0:	85 04 08             	test   %eax,(%eax,%ecx,1)
     6d3:	70 86                	jo     65b <__executable_start-0x8047a79>
     6d5:	04 08                	add    $0x8,%al
     6d7:	b8 01 00 00 e1       	mov    $0xe1000001,%eax
     6dc:	02 00                	add    (%eax),%al
     6de:	00 07                	add    %al,(%edi)
     6e0:	21 02                	and    %eax,(%edx)
     6e2:	00 00                	add    %al,(%eax)
     6e4:	01 50 ee             	add    %edx,-0x12(%eax)
     6e7:	00 00                	add    %al,(%eax)
     6e9:	00 02                	add    %al,(%edx)
     6eb:	91                   	xchg   %eax,%ecx
     6ec:	00 07                	add    %al,(%edi)
     6ee:	89 01                	mov    %eax,(%ecx)
     6f0:	00 00                	add    %al,(%eax)
     6f2:	01 50 e1             	add    %edx,-0x1f(%eax)
     6f5:	02 00                	add    (%eax),%al
     6f7:	00 02                	add    %al,(%edx)
     6f9:	91                   	xchg   %eax,%ecx
     6fa:	04 07                	add    $0x7,%al
     6fc:	11 02                	adc    %eax,(%edx)
     6fe:	00 00                	add    %al,(%eax)
     700:	01 50 2c             	add    %edx,0x2c(%eax)
     703:	00 00                	add    %al,(%eax)
     705:	00 02                	add    %al,(%edx)
     707:	91                   	xchg   %eax,%ecx
     708:	08 08                	or     %cl,(%eax)
     70a:	69 00 01 52 2c 00    	imul   $0x2c5201,(%eax),%eax
     710:	00 00                	add    %al,(%eax)
     712:	02 91 6c 13 bb 85    	add    -0x7a44ec94(%ecx),%dl
     718:	04 08                	add    $0x8,%al
     71a:	57                   	push   %edi
     71b:	86 04 08             	xchg   %al,(%eax,%ecx,1)
     71e:	10 b4 01 00 00 01 56 	adc    %dh,0x56010000(%ecx,%eax,1)
     725:	e7 02                	out    %eax,$0x2
     727:	00 00                	add    %al,(%eax)
     729:	03 91 ec 7e 00 00    	add    0x7eec(%ecx),%edx
     72f:	09 04 3e             	or     %eax,(%esi,%edi,1)
     732:	00 00                	add    %al,(%eax)
     734:	00 0b                	add    %cl,(%ebx)
     736:	5e                   	pop    %esi
     737:	00 00                	add    %al,(%eax)
     739:	00 f7                	add    %dh,%bh
     73b:	02 00                	add    (%eax),%al
     73d:	00 15 0a 01 00 00    	add    %dl,0x10a
     743:	7f 00                	jg     745 <__executable_start-0x804798f>
     745:	11 01                	adc    %eax,(%ecx)
     747:	75 01                	jne    74a <__executable_start-0x804798a>
     749:	00 00                	add    %al,(%eax)
     74b:	01 5e 01             	add    %ebx,0x1(%esi)
     74e:	70 86                	jo     6d6 <__executable_start-0x80479fe>
     750:	04 08                	add    $0x8,%al
     752:	01 87 04 08 e4 01    	add    %eax,0x1e40804(%edi)
     758:	00 00                	add    %al,(%eax)
     75a:	51                   	push   %ecx
     75b:	03 00                	add    (%eax),%eax
     75d:	00 07                	add    %al,(%edi)
     75f:	89 01                	mov    %eax,(%ecx)
     761:	00 00                	add    %al,(%eax)
     763:	01 5e e1             	add    %ebx,-0x1f(%esi)
     766:	02 00                	add    (%eax),%al
     768:	00 02                	add    %al,(%edx)
     76a:	91                   	xchg   %eax,%ecx
     76b:	00 07                	add    %al,(%edi)
     76d:	11 02                	adc    %eax,(%edx)
     76f:	00 00                	add    %al,(%eax)
     771:	01 5e 2c             	add    %ebx,0x2c(%esi)
     774:	00 00                	add    %al,(%eax)
     776:	00 02                	add    %al,(%edx)
     778:	91                   	xchg   %eax,%ecx
     779:	04 08                	add    $0x8,%al
     77b:	69 00 01 60 2c 00    	imul   $0x2c6001,(%eax),%eax
     781:	00 00                	add    %al,(%eax)
     783:	02 91 68 13 7f 86    	add    -0x7980ec98(%ecx),%dl
     789:	04 08                	add    $0x8,%al
     78b:	f3 86 04 08          	repz xchg %al,(%eax,%ecx,1)
     78f:	10 3c 01             	adc    %bh,(%ecx,%eax,1)
     792:	00 00                	add    %al,(%eax)
     794:	01 64 25 00          	add    %esp,0x0(%ebp,%eiz,1)
     798:	00 00                	add    %al,(%eax)
     79a:	02 91 6c 00 00 11    	add    0x1100006c(%ecx),%dl
     7a0:	01 a2 01 00 00 01    	add    %esp,0x1000001(%edx)
     7a6:	6c                   	insb   (%dx),%es:(%edi)
     7a7:	01 01                	add    %eax,(%ecx)
     7a9:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
     7ac:	44                   	inc    %esp
     7ad:	88 04 08             	mov    %al,(%eax,%ecx,1)
     7b0:	10 02                	adc    %al,(%edx)
     7b2:	00 00                	add    %al,(%eax)
     7b4:	01 04 00             	add    %eax,(%eax,%eax,1)
     7b7:	00 12                	add    %dl,(%edx)
     7b9:	66                   	data16
     7ba:	64 00 01             	add    %al,%fs:(%ecx)
     7bd:	6c                   	insb   (%dx),%es:(%edi)
     7be:	25 00 00 00 02       	and    $0x2000000,%eax
     7c3:	91                   	xchg   %eax,%ecx
     7c4:	00 07                	add    %al,(%edi)
     7c6:	98                   	cwtl   
     7c7:	01 00                	add    %eax,(%eax)
     7c9:	00 01                	add    %al,(%ecx)
     7cb:	6d                   	insl   (%dx),%es:(%edi)
     7cc:	ee                   	out    %al,(%dx)
     7cd:	00 00                	add    %al,(%eax)
     7cf:	00 02                	add    %al,(%edx)
     7d1:	91                   	xchg   %eax,%ecx
     7d2:	04 07                	add    $0x7,%al
     7d4:	e3 00                	jecxz  7d6 <__executable_start-0x80478fe>
     7d6:	00 00                	add    %al,(%eax)
     7d8:	01 6d 01             	add    %ebp,0x1(%ebp)
     7db:	04 00                	add    $0x0,%al
     7dd:	00 02                	add    %al,(%edx)
     7df:	91                   	xchg   %eax,%ecx
     7e0:	08 07                	or     %al,(%edi)
     7e2:	65 01 00             	add    %eax,%gs:(%eax)
     7e5:	00 01                	add    %al,(%ecx)
     7e7:	6d                   	insl   (%dx),%es:(%edi)
     7e8:	2c 00                	sub    $0x0,%al
     7ea:	00 00                	add    %al,(%eax)
     7ec:	02 91 0c 08 62 75    	add    0x7562080c(%ecx),%dl
     7f2:	66                   	data16
     7f3:	00 01                	add    %al,(%ecx)
     7f5:	6f                   	outsl  %ds:(%esi),(%dx)
     7f6:	ee                   	out    %al,(%dx)
     7f7:	00 00                	add    %al,(%eax)
     7f9:	00 02                	add    %al,(%edx)
     7fb:	91                   	xchg   %eax,%ecx
     7fc:	5c                   	pop    %esp
     7fd:	08 6f 66             	or     %ch,0x66(%edi)
     800:	73 00                	jae    802 <__executable_start-0x80478d2>
     802:	01 70 2c             	add    %esi,0x2c(%eax)
     805:	00 00                	add    %al,(%eax)
     807:	00 02                	add    %al,(%edx)
     809:	91                   	xchg   %eax,%ecx
     80a:	60                   	pusha  
     80b:	10 60 01             	adc    %ah,0x1(%eax)
     80e:	00 00                	add    %al,(%eax)
     810:	01 71 2c             	add    %esi,0x2c(%ecx)
     813:	00 00                	add    %al,(%eax)
     815:	00 02                	add    %al,(%edx)
     817:	91                   	xchg   %eax,%ecx
     818:	64 13 57 87          	adc    %fs:-0x79(%edi),%edx
     81c:	04 08                	add    $0x8,%al
     81e:	fa                   	cli    
     81f:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
     822:	10 83 01 00 00 01    	adc    %al,0x1000001(%ebx)
     828:	7e 08                	jle    832 <__executable_start-0x80478a2>
     82a:	04 00                	add    $0x0,%al
     82c:	00 03                	add    %al,(%ebx)
     82e:	91                   	xchg   %eax,%ecx
     82f:	dc 7b 10             	fdivrl 0x10(%ebx)
     832:	6a 01                	push   $0x1
     834:	00 00                	add    %al,(%eax)
     836:	01 7f 2c             	add    %edi,0x2c(%edi)
     839:	00 00                	add    %al,(%eax)
     83b:	00 02                	add    %al,(%edx)
     83d:	91                   	xchg   %eax,%ecx
     83e:	68 10 ce 01 00       	push   $0x1ce10
     843:	00 01                	add    %al,(%ecx)
     845:	7f 2c                	jg     873 <__executable_start-0x8047861>
     847:	00 00                	add    %al,(%eax)
     849:	00 02                	add    %al,(%edx)
     84b:	91                   	xchg   %eax,%ecx
     84c:	6c                   	insb   (%dx),%es:(%edi)
     84d:	00 00                	add    %al,(%eax)
     84f:	09 04 07             	or     %eax,(%edi,%eax,1)
     852:	04 00                	add    $0x0,%al
     854:	00 16                	add    %dl,(%esi)
     856:	0b 5e 00             	or     0x0(%esi),%ebx
     859:	00 00                	add    %al,(%eax)
     85b:	19 04 00             	sbb    %eax,(%eax,%eax,1)
     85e:	00 0c 0a             	add    %cl,(%edx,%ecx,1)
     861:	01 00                	add    %eax,(%eax)
     863:	00 ff                	add    %bh,%bh
     865:	01 00                	add    %eax,(%eax)
     867:	11 01                	adc    %eax,(%ecx)
     869:	d6                   	(bad)  
     86a:	01 00                	add    %eax,(%eax)
     86c:	00 01                	add    %al,(%ecx)
     86e:	97                   	xchg   %eax,%edi
     86f:	01 44 88 04          	add    %eax,0x4(%eax,%ecx,4)
     873:	08 c4                	or     %al,%ah
     875:	88 04 08             	mov    %al,(%eax,%ecx,1)
     878:	3c 02                	cmp    $0x2,%al
     87a:	00 00                	add    %al,(%eax)
     87c:	6a 04                	push   $0x4
     87e:	00 00                	add    %al,(%eax)
     880:	07                   	pop    %es
     881:	98                   	cwtl   
     882:	01 00                	add    %eax,(%eax)
     884:	00 01                	add    %al,(%ecx)
     886:	97                   	xchg   %eax,%edi
     887:	ee                   	out    %al,(%dx)
     888:	00 00                	add    %al,(%eax)
     88a:	00 02                	add    %al,(%edx)
     88c:	91                   	xchg   %eax,%ecx
     88d:	00 12                	add    %dl,(%edx)
     88f:	62 75 66             	bound  %esi,0x66(%ebp)
     892:	00 01                	add    %al,(%ecx)
     894:	97                   	xchg   %eax,%edi
     895:	01 04 00             	add    %eax,(%eax,%eax,1)
     898:	00 02                	add    %al,(%edx)
     89a:	91                   	xchg   %eax,%ecx
     89b:	04 07                	add    $0x7,%al
     89d:	65 01 00             	add    %eax,%gs:(%eax)
     8a0:	00 01                	add    %al,(%ecx)
     8a2:	97                   	xchg   %eax,%edi
     8a3:	2c 00                	sub    $0x0,%al
     8a5:	00 00                	add    %al,(%eax)
     8a7:	02 91 08 08 66 64    	add    0x64660808(%ecx),%dl
     8ad:	00 01                	add    %al,(%ecx)
     8af:	99                   	cltd   
     8b0:	25 00 00 00 02       	and    $0x2000000,%eax
     8b5:	91                   	xchg   %eax,%ecx
     8b6:	6c                   	insb   (%dx),%es:(%edi)
     8b7:	00 11                	add    %dl,(%ecx)
     8b9:	01 2c 02             	add    %ebp,(%edx,%eax,1)
     8bc:	00 00                	add    %al,(%eax)
     8be:	01 a3 01 c4 88 04    	add    %esp,0x488c401(%ebx)
     8c4:	08 6c 8a 04          	or     %ch,0x4(%edx,%ecx,4)
     8c8:	08 68 02             	or     %ch,0x2(%eax)
     8cb:	00 00                	add    %al,(%eax)
     8cd:	0c 05                	or     $0x5,%al
     8cf:	00 00                	add    %al,(%eax)
     8d1:	07                   	pop    %es
     8d2:	3f                   	aas    
     8d3:	02 00                	add    (%eax),%al
     8d5:	00 01                	add    %al,(%ecx)
     8d7:	a3 01 04 00 00       	mov    %eax,0x401
     8dc:	02 91 00 07 02 02    	add    0x2020700(%ecx),%dl
     8e2:	00 00                	add    %al,(%eax)
     8e4:	01 a3 01 04 00 00    	add    %esp,0x401(%ebx)
     8ea:	02 91 04 07 65 01    	add    0x1650704(%ecx),%dl
     8f0:	00 00                	add    %al,(%eax)
     8f2:	01 a3 2c 00 00 00    	add    %esp,0x2c(%ebx)
     8f8:	02 91 08 12 6f 66    	add    0x666f1208(%ecx),%dl
     8fe:	73 00                	jae    900 <__executable_start-0x80477d4>
     900:	01 a4 2c 00 00 00 02 	add    %esp,0x2000000(%esp,%ebp,1)
     907:	91                   	xchg   %eax,%ecx
     908:	0c 07                	or     $0x7,%al
     90a:	98                   	cwtl   
     90b:	01 00                	add    %eax,(%eax)
     90d:	00 01                	add    %al,(%ecx)
     90f:	a4                   	movsb  %ds:(%esi),%es:(%edi)
     910:	ee                   	out    %al,(%dx)
     911:	00 00                	add    %al,(%eax)
     913:	00 02                	add    %al,(%edx)
     915:	91                   	xchg   %eax,%ecx
     916:	10 10                	adc    %dl,(%eax)
     918:	8e 01                	mov    (%ecx),%es
     91a:	00 00                	add    %al,(%eax)
     91c:	01 a6 0c 05 00 00    	add    %esp,0x50c(%esi)
     922:	02 91 5c 10 ef 01    	add    0x1ef105c(%ecx),%dl
     928:	00 00                	add    %al,(%eax)
     92a:	01 a7 0c 05 00 00    	add    %esp,0x50c(%edi)
     930:	02 91 60 08 69 00    	add    0x690860(%ecx),%dl
     936:	01 a8 2c 00 00 00    	add    %ebp,0x2c(%eax)
     93c:	02 91 64 08 6a 00    	add    0x6a0864(%ecx),%dl
     942:	01 a8 2c 00 00 00    	add    %ebp,0x2c(%eax)
     948:	02 91 68 10 bd 01    	add    0x1bd1068(%ecx),%dl
     94e:	00 00                	add    %al,(%eax)
     950:	01 a9 2c 00 00 00    	add    %ebp,0x2c(%ecx)
     956:	02 91 6c 00 09 04    	add    0x409006c(%ecx),%dl
     95c:	12 05 00 00 0a 7a    	adc    0x7a0a0000,%al
     962:	00 00                	add    %al,(%eax)
     964:	00 17                	add    %dl,(%edi)
     966:	4a                   	dec    %edx
     967:	02 00                	add    (%eax),%al
     969:	00 01                	add    %al,(%ecx)
     96b:	08 ee                	or     %ch,%dh
     96d:	00 00                	add    %al,(%eax)
     96f:	00 01                	add    %al,(%ecx)
     971:	05 03 68 cf 04       	add    $0x4cf6803,%eax
     976:	08 17                	or     %dl,(%edi)
     978:	1b 02                	sbb    (%edx),%eax
     97a:	00 00                	add    %al,(%eax)
     97c:	01 09                	add    %ecx,(%ecx)
     97e:	3b 05 00 00 01 05    	cmp    0x5010000,%eax
     984:	03 40 ca             	add    -0x36(%eax),%eax
     987:	04 08                	add    $0x8,%al
     989:	04 01                	add    $0x1,%al
     98b:	02 5a 01             	add    0x1(%edx),%bl
     98e:	00 00                	add    %al,(%eax)
     990:	00 95 00 00 00 02    	add    %dl,0x2000000(%ebp)
     996:	00 74 03 00          	add    %dh,0x0(%ebx,%eax,1)
     99a:	00 04 01             	add    %al,(%ecx,%eax,1)
     99d:	45                   	inc    %ebp
     99e:	00 00                	add    %al,(%eax)
     9a0:	00 01                	add    %al,(%ecx)
     9a2:	79 02                	jns    9a6 <__executable_start-0x804772e>
     9a4:	00 00                	add    %al,(%eax)
     9a6:	73 00                	jae    9a8 <__executable_start-0x804772c>
     9a8:	00 00                	add    %al,(%eax)
     9aa:	6c                   	insb   (%dx),%es:(%edi)
     9ab:	8a 04 08             	mov    (%eax,%ecx,1),%al
     9ae:	af                   	scas   %es:(%edi),%eax
     9af:	8a 04 08             	mov    (%eax,%ecx,1),%al
     9b2:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
     9b3:	02 00                	add    (%eax),%al
     9b5:	00 02                	add    %al,(%edx)
     9b7:	04 05                	add    $0x5,%al
     9b9:	69 6e 74 00 03 04 07 	imul   $0x7040300,0x74(%esi),%ebp
     9c0:	26 00 00             	add    %al,%es:(%eax)
     9c3:	00 04 01             	add    %al,(%ecx,%eax,1)
     9c6:	38 00                	cmp    %al,(%eax)
     9c8:	00 00                	add    %al,(%eax)
     9ca:	01 07                	add    %eax,(%edi)
     9cc:	01 25 00 00 00 6c    	add    %esp,0x6c000000
     9d2:	8a 04 08             	mov    (%eax,%ecx,1),%al
     9d5:	af                   	scas   %es:(%edi),%eax
     9d6:	8a 04 08             	mov    (%eax,%ecx,1),%al
     9d9:	94                   	xchg   %eax,%esp
     9da:	02 00                	add    (%eax),%al
     9dc:	00 6d 00             	add    %ch,0x0(%ebp)
     9df:	00 00                	add    %al,(%eax)
     9e1:	05 8c 02 00 00       	add    $0x28c,%eax
     9e6:	01 07                	add    %eax,(%edi)
     9e8:	25 00 00 00 02       	and    $0x2000000,%eax
     9ed:	91                   	xchg   %eax,%ecx
     9ee:	00 05 91 02 00 00    	add    %al,0x291
     9f4:	01 07                	add    %eax,(%edi)
     9f6:	6d                   	insl   (%dx),%es:(%edi)
     9f7:	00 00                	add    %al,(%eax)
     9f9:	00 02                	add    %al,(%edx)
     9fb:	91                   	xchg   %eax,%ecx
     9fc:	04 00                	add    $0x0,%al
     9fe:	06                   	push   %es
     9ff:	04 73                	add    $0x73,%al
     a01:	00 00                	add    %al,(%eax)
     a03:	00 06                	add    %al,(%esi)
     a05:	04 79                	add    $0x79,%al
     a07:	00 00                	add    %al,(%eax)
     a09:	00 03                	add    %al,(%ebx)
     a0b:	01 06                	add    %eax,(%esi)
     a0d:	17                   	pop    %ss
     a0e:	00 00                	add    %al,(%eax)
     a10:	00 07                	add    %al,(%edi)
     a12:	4a                   	dec    %edx
     a13:	02 00                	add    (%eax),%al
     a15:	00 02                	add    %al,(%edx)
     a17:	09 8d 00 00 00 01    	or     %ecx,0x1000000(%ebp)
     a1d:	01 06                	add    %eax,(%esi)
     a1f:	04 93                	add    $0x93,%al
     a21:	00 00                	add    %al,(%eax)
     a23:	00 08                	add    %cl,(%eax)
     a25:	79 00                	jns    a27 <__executable_start-0x80476ad>
     a27:	00 00                	add    %al,(%eax)
     a29:	00 72 00             	add    %dh,0x0(%edx)
     a2c:	00 00                	add    %al,(%eax)
     a2e:	02 00                	add    (%eax),%al
     a30:	e7 03                	out    %eax,$0x3
     a32:	00 00                	add    %al,(%eax)
     a34:	04 01                	add    $0x1,%al
     a36:	45                   	inc    %ebp
     a37:	00 00                	add    %al,(%eax)
     a39:	00 01                	add    %al,(%ecx)
     a3b:	9d                   	popf   
     a3c:	02 00                	add    (%eax),%al
     a3e:	00 73 00             	add    %dh,0x0(%ebx)
     a41:	00 00                	add    %al,(%eax)
     a43:	b0 8a                	mov    $0x8a,%al
     a45:	04 08                	add    $0x8,%al
     a47:	d0 8a 04 08 f6 02    	rorb   0x2f60804(%edx)
     a4d:	00 00                	add    %al,(%eax)
     a4f:	02 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%al
     a56:	03 01                	add    (%ecx),%eax
     a58:	96                   	xchg   %eax,%esi
     a59:	02 00                	add    (%eax),%al
     a5b:	00 01                	add    %al,(%ecx)
     a5d:	07                   	pop    %es
     a5e:	01 b0 8a 04 08 d0    	add    %esi,-0x2ff7fb76(%eax)
     a64:	8a 04 08             	mov    (%eax,%ecx,1),%al
     a67:	c0 02 00             	rolb   $0x0,(%edx)
     a6a:	00 62 00             	add    %ah,0x0(%edx)
     a6d:	00 00                	add    %al,(%eax)
     a6f:	04 8c                	add    $0x8c,%al
     a71:	02 00                	add    (%eax),%al
     a73:	00 01                	add    %al,(%ecx)
     a75:	07                   	pop    %es
     a76:	25 00 00 00 02       	and    $0x2000000,%eax
     a7b:	91                   	xchg   %eax,%ecx
     a7c:	00 04 91             	add    %al,(%ecx,%edx,4)
     a7f:	02 00                	add    (%eax),%al
     a81:	00 01                	add    %al,(%ecx)
     a83:	07                   	pop    %es
     a84:	62 00                	bound  %eax,(%eax)
     a86:	00 00                	add    %al,(%eax)
     a88:	02 91 04 00 05 04    	add    0x4050004(%ecx),%dl
     a8e:	68 00 00 00 05       	push   $0x5000000
     a93:	04 6e                	add    $0x6e,%al
     a95:	00 00                	add    %al,(%eax)
     a97:	00 06                	add    %al,(%esi)
     a99:	01 06                	add    %eax,(%esi)
     a9b:	17                   	pop    %ss
     a9c:	00 00                	add    %al,(%eax)
     a9e:	00 00                	add    %al,(%eax)
     aa0:	ed                   	in     (%dx),%eax
     aa1:	01 00                	add    %eax,(%eax)
     aa3:	00 02                	add    %al,(%edx)
     aa5:	00 40 04             	add    %al,0x4(%eax)
     aa8:	00 00                	add    %al,(%eax)
     aaa:	04 01                	add    $0x1,%al
     aac:	45                   	inc    %ebp
     aad:	00 00                	add    %al,(%eax)
     aaf:	00 01                	add    %al,(%ecx)
     ab1:	ec                   	in     (%dx),%al
     ab2:	02 00                	add    (%eax),%al
     ab4:	00 73 00             	add    %dh,0x0(%ebx)
     ab7:	00 00                	add    %al,(%eax)
     ab9:	d0 8a 04 08 87 8c    	rorb   -0x7378f7fc(%edx)
     abf:	04 08                	add    $0x8,%al
     ac1:	3b 03                	cmp    (%ebx),%eax
     ac3:	00 00                	add    %al,(%eax)
     ac5:	02 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%al
     acc:	03 d1                	add    %ecx,%edx
     ace:	00 00                	add    %al,(%eax)
     ad0:	00 02                	add    %al,(%edx)
     ad2:	0a 37                	or     (%edi),%dh
     ad4:	00 00                	add    %al,(%eax)
     ad6:	00 04 04             	add    %al,(%esp,%eax,1)
     ad9:	07                   	pop    %es
     ada:	26 00 00             	add    %al,%es:(%eax)
     add:	00 04 01             	add    %al,(%ecx,%eax,1)
     ae0:	06                   	push   %es
     ae1:	10 00                	adc    %al,(%eax)
     ae3:	00 00                	add    %al,(%eax)
     ae5:	04 02                	add    $0x2,%al
     ae7:	05 56 00 00 00       	add    $0x56,%eax
     aec:	04 08                	add    $0x8,%al
     aee:	05 00 00 00 00       	add    $0x0,%eax
     af3:	03 3d 00 00 00 03    	add    0x3000000,%edi
     af9:	14 5e                	adc    $0x5e,%al
     afb:	00 00                	add    %al,(%eax)
     afd:	00 04 01             	add    %al,(%ecx,%eax,1)
     b00:	08 0e                	or     %cl,(%esi)
     b02:	00 00                	add    %al,(%eax)
     b04:	00 04 02             	add    %al,(%edx,%eax,1)
     b07:	07                   	pop    %es
     b08:	60                   	pusha  
     b09:	00 00                	add    %al,(%eax)
     b0b:	00 04 08             	add    %al,(%eax,%ecx,1)
     b0e:	07                   	pop    %es
     b0f:	1c 00                	sbb    $0x0,%al
     b11:	00 00                	add    %al,(%eax)
     b13:	05 e8 00 00 00       	add    $0xe8,%eax
     b18:	01 19                	add    %ebx,(%ecx)
     b1a:	01 d0                	add    %edx,%eax
     b1c:	8a 04 08             	mov    (%eax,%ecx,1),%al
     b1f:	f5                   	cmc    
     b20:	8a 04 08             	mov    (%eax,%ecx,1),%al
     b23:	ec                   	in     (%dx),%al
     b24:	02 00                	add    (%eax),%al
     b26:	00 b0 00 00 00 06    	add    %dh,0x6000000(%eax)
     b2c:	61                   	popa   
     b2d:	00 01                	add    %al,(%ecx)
     b2f:	19 b0 00 00 00 02    	sbb    %esi,0x2000000(%eax)
     b35:	91                   	xchg   %eax,%ecx
     b36:	00 06                	add    %al,(%esi)
     b38:	62 00                	bound  %eax,(%eax)
     b3a:	01 19                	add    %ebx,(%ecx)
     b3c:	b0 00                	mov    $0x0,%al
     b3e:	00 00                	add    %al,(%eax)
     b40:	02 91 04 07 74 00    	add    0x740704(%ecx),%dl
     b46:	01 1b                	add    %ebx,(%ebx)
     b48:	53                   	push   %ebx
     b49:	00 00                	add    %al,(%eax)
     b4b:	00 02                	add    %al,(%edx)
     b4d:	91                   	xchg   %eax,%ecx
     b4e:	77 00                	ja     b50 <__executable_start-0x8047584>
     b50:	08 04 53             	or     %al,(%ebx,%edx,2)
     b53:	00 00                	add    %al,(%eax)
     b55:	00 09                	add    %cl,(%ecx)
     b57:	01 d5                	add    %edx,%ebp
     b59:	02 00                	add    (%eax),%al
     b5b:	00 01                	add    %al,(%ecx)
     b5d:	22 01                	and    (%ecx),%al
     b5f:	f5                   	cmc    
     b60:	8a 04 08             	mov    (%eax,%ecx,1),%al
     b63:	93                   	xchg   %eax,%ebx
     b64:	8b 04 08             	mov    (%eax,%ecx,1),%eax
     b67:	18 03                	sbb    %al,(%ebx)
     b69:	00 00                	add    %al,(%eax)
     b6b:	04 01                	add    $0x1,%al
     b6d:	00 00                	add    %al,(%eax)
     b6f:	0a e7                	or     %bh,%ah
     b71:	02 00                	add    (%eax),%al
     b73:	00 01                	add    %al,(%ecx)
     b75:	22 37                	and    (%edi),%dh
     b77:	00 00                	add    %al,(%eax)
     b79:	00 02                	add    %al,(%edx)
     b7b:	91                   	xchg   %eax,%ecx
     b7c:	00 0b                	add    %cl,(%ebx)
     b7e:	e1 02                	loope  b82 <__executable_start-0x8047552>
     b80:	00 00                	add    %al,(%eax)
     b82:	01 24 b0             	add    %esp,(%eax,%esi,4)
     b85:	00 00                	add    %al,(%eax)
     b87:	00 02                	add    %al,(%edx)
     b89:	91                   	xchg   %eax,%ecx
     b8a:	6c                   	insb   (%dx),%es:(%edi)
     b8b:	07                   	pop    %es
     b8c:	69 00 01 25 25 00    	imul   $0x252501,(%eax),%eax
     b92:	00 00                	add    %al,(%eax)
     b94:	02 91 70 07 6a 00    	add    0x6a0770(%ecx),%dl
     b9a:	01 26                	add    %esp,(%esi)
     b9c:	53                   	push   %ebx
     b9d:	00 00                	add    %al,(%eax)
     b9f:	00 02                	add    %al,(%edx)
     ba1:	91                   	xchg   %eax,%ecx
     ba2:	77 00                	ja     ba4 <__executable_start-0x8047530>
     ba4:	09 01                	or     %eax,(%ecx)
     ba6:	b4 02                	mov    $0x2,%ah
     ba8:	00 00                	add    %al,(%eax)
     baa:	01 36                	add    %esi,(%esi)
     bac:	01 93 8b 04 08 69    	add    %edx,0x6908048b(%ebx)
     bb2:	8c 04 08             	mov    %es,(%eax,%ecx,1)
     bb5:	44                   	inc    %esp
     bb6:	03 00                	add    (%eax),%eax
     bb8:	00 60 01             	add    %ah,0x1(%eax)
     bbb:	00 00                	add    %al,(%eax)
     bbd:	0a e3                	or     %bl,%ah
     bbf:	00 00                	add    %al,(%eax)
     bc1:	00 01                	add    %al,(%ecx)
     bc3:	36                   	ss
     bc4:	60                   	pusha  
     bc5:	01 00                	add    %eax,(%eax)
     bc7:	00 02                	add    %al,(%edx)
     bc9:	91                   	xchg   %eax,%ecx
     bca:	00 0a                	add    %cl,(%edx)
     bcc:	65 01 00             	add    %eax,%gs:(%eax)
     bcf:	00 01                	add    %al,(%ecx)
     bd1:	36                   	ss
     bd2:	2c 00                	sub    $0x0,%al
     bd4:	00 00                	add    %al,(%eax)
     bd6:	02 91 04 07 62 75    	add    0x75620704(%ecx),%dl
     bdc:	66                   	data16
     bdd:	00 01                	add    %al,(%ecx)
     bdf:	38 b0 00 00 00 02    	cmp    %dh,0x2000000(%eax)
     be5:	91                   	xchg   %eax,%ecx
     be6:	70 0c                	jo     bf4 <__executable_start-0x80474e0>
     be8:	be 8b 04 08 50       	mov    $0x5008048b,%esi
     bed:	8c 04 08             	mov    %es,(%eax,%ecx,1)
     bf0:	07                   	pop    %es
     bf1:	73 5f                	jae    c52 <__executable_start-0x8047482>
     bf3:	6b 00 01             	imul   $0x1,(%eax),%eax
     bf6:	3f                   	aas    
     bf7:	53                   	push   %ebx
     bf8:	00 00                	add    %al,(%eax)
     bfa:	00 02                	add    %al,(%edx)
     bfc:	91                   	xchg   %eax,%ecx
     bfd:	77 00                	ja     bff <__executable_start-0x80474d5>
     bff:	00 0d 04 0e 01 c8    	add    %cl,0xc8010e04
     c05:	02 00                	add    (%eax),%al
     c07:	00 01                	add    %al,(%ecx)
     c09:	4e                   	dec    %esi
     c0a:	01 8d 01 00 00 69    	add    %ecx,0x69000001(%ebp)
     c10:	8c 04 08             	mov    %es,(%eax,%ecx,1)
     c13:	87 8c 04 08 70 03 00 	xchg   %ecx,0x37008(%esp,%eax,1)
     c1a:	00 8d 01 00 00 07    	add    %cl,0x7000001(%ebp)
     c20:	75 6c                	jne    c8e <__executable_start-0x8047446>
     c22:	00 01                	add    %al,(%ecx)
     c24:	50                   	push   %eax
     c25:	8d 01                	lea    (%ecx),%eax
     c27:	00 00                	add    %al,(%eax)
     c29:	02 91 74 00 04 04    	add    0x4040074(%ecx),%dl
     c2f:	07                   	pop    %es
     c30:	21 00                	and    %eax,(%eax)
     c32:	00 00                	add    %al,(%eax)
     c34:	0f 53 00             	rcpps  (%eax),%xmm0
     c37:	00 00                	add    %al,(%eax)
     c39:	a4                   	movsb  %ds:(%esi),%es:(%edi)
     c3a:	01 00                	add    %eax,(%eax)
     c3c:	00 10                	add    %dl,(%eax)
     c3e:	a4                   	movsb  %ds:(%esi),%es:(%edi)
     c3f:	01 00                	add    %eax,(%eax)
     c41:	00 ff                	add    %bh,%bh
     c43:	00 11                	add    %dl,(%ecx)
     c45:	04 07                	add    $0x7,%al
     c47:	07                   	pop    %es
     c48:	73 00                	jae    c4a <__executable_start-0x804748a>
     c4a:	01 11                	add    %edx,(%ecx)
     c4c:	94                   	xchg   %eax,%esp
     c4d:	01 00                	add    %eax,(%eax)
     c4f:	00 05 03 60 ce 04    	add    %al,0x4ce6003
     c55:	08 07                	or     %al,(%edi)
     c57:	73 5f                	jae    cb8 <__executable_start-0x804741c>
     c59:	69 00 01 12 53 00    	imul   $0x531201,(%eax),%eax
     c5f:	00 00                	add    %al,(%eax)
     c61:	05 03 60 cf 04       	add    $0x4cf6003,%eax
     c66:	08 07                	or     %al,(%edi)
     c68:	73 5f                	jae    cc9 <__executable_start-0x804740b>
     c6a:	6a 00                	push   $0x0
     c6c:	01 12                	add    %edx,(%edx)
     c6e:	53                   	push   %ebx
     c6f:	00 00                	add    %al,(%eax)
     c71:	00 05 03 61 cf 04    	add    %al,0x4cf6103
     c77:	08 0b                	or     %cl,(%ebx)
     c79:	c1 02 00             	roll   $0x0,(%edx)
     c7c:	00 01                	add    %al,(%ecx)
     c7e:	15 e9 01 00 00       	adc    $0x1e9,%eax
     c83:	05 03 62 cf 04       	add    $0x4cf6203,%eax
     c88:	08 04 01             	or     %al,(%ecx,%eax,1)
     c8b:	02 5a 01             	add    0x1(%edx),%bl
     c8e:	00 00                	add    %al,(%eax)
     c90:	00 99 08 00 00 02    	add    %bl,0x2000008(%ecx)
     c96:	00 2c 05 00 00 04 01 	add    %ch,0x1040000(,%eax,1)
     c9d:	45                   	inc    %ebp
     c9e:	00 00                	add    %al,(%eax)
     ca0:	00 01                	add    %al,(%ecx)
     ca2:	1f                   	pop    %ds
     ca3:	03 00                	add    (%eax),%eax
     ca5:	00 73 00             	add    %dh,0x0(%ebx)
     ca8:	00 00                	add    %al,(%eax)
     caa:	88 8c 04 08 dd 9b 04 	mov    %cl,0x49bdd08(%esp,%eax,1)
     cb1:	08 c2                	or     %al,%dl
     cb3:	03 00                	add    (%eax),%eax
     cb5:	00 02                	add    %al,(%edx)
     cb7:	52                   	push   %edx
     cb8:	01 00                	add    %eax,(%eax)
     cba:	00 03                	add    %al,(%ebx)
     cbc:	07                   	pop    %es
     cbd:	30 00                	xor    %al,(%eax)
     cbf:	00 00                	add    %al,(%eax)
     cc1:	03 04 48             	add    (%eax,%ecx,2),%eax
     cc4:	01 00                	add    %eax,(%eax)
     cc6:	00 3a                	add    %bh,(%edx)
     cc8:	00 00                	add    %al,(%eax)
     cca:	00 04 01             	add    %al,(%ecx,%eax,1)
     ccd:	06                   	push   %es
     cce:	17                   	pop    %ss
     ccf:	00 00                	add    %al,(%eax)
     cd1:	00 05 04 05 69 6e    	add    %al,0x6e690504
     cd7:	74 00                	je     cd9 <__executable_start-0x80473fb>
     cd9:	02 d1                	add    %cl,%dl
     cdb:	00 00                	add    %al,(%eax)
     cdd:	00 04 0a             	add    %al,(%edx,%ecx,1)
     ce0:	53                   	push   %ebx
     ce1:	00 00                	add    %al,(%eax)
     ce3:	00 04 04             	add    %al,(%esp,%eax,1)
     ce6:	07                   	pop    %es
     ce7:	26 00 00             	add    %al,%es:(%eax)
     cea:	00 04 01             	add    %al,(%ecx,%eax,1)
     ced:	06                   	push   %es
     cee:	10 00                	adc    %al,(%eax)
     cf0:	00 00                	add    %al,(%eax)
     cf2:	04 02                	add    $0x2,%al
     cf4:	05 56 00 00 00       	add    $0x56,%eax
     cf9:	02 17                	add    (%edi),%dl
     cfb:	03 00                	add    (%eax),%eax
     cfd:	00 05 10 73 00 00    	add    %al,0x7310
     d03:	00 04 08             	add    %al,(%eax,%ecx,1)
     d06:	05 00 00 00 00       	add    $0x0,%eax
     d0b:	02 3d 00 00 00 05    	add    0x5000000,%bh
     d11:	14 85                	adc    $0x85,%al
     d13:	00 00                	add    %al,(%eax)
     d15:	00 04 01             	add    %al,(%ecx,%eax,1)
     d18:	08 0e                	or     %cl,(%esi)
     d1a:	00 00                	add    %al,(%eax)
     d1c:	00 04 02             	add    %al,(%edx,%eax,1)
     d1f:	07                   	pop    %es
     d20:	60                   	pusha  
     d21:	00 00                	add    %al,(%eax)
     d23:	00 02                	add    %al,(%edx)
     d25:	12 01                	adc    (%ecx),%al
     d27:	00 00                	add    %al,(%eax)
     d29:	05 1a 53 00 00       	add    $0x531a,%eax
     d2e:	00 02                	add    %al,(%edx)
     d30:	16                   	push   %ss
     d31:	03 00                	add    (%eax),%eax
     d33:	00 05 1d a9 00 00    	add    %al,0xa91d
     d39:	00 04 08             	add    %al,(%eax,%ecx,1)
     d3c:	07                   	pop    %es
     d3d:	1c 00                	sbb    $0x0,%al
     d3f:	00 00                	add    %al,(%eax)
     d41:	02 65 03             	add    0x3(%ebp),%ah
     d44:	00 00                	add    %al,(%eax)
     d46:	05 24 93 00 00       	add    $0x9324,%eax
     d4b:	00 02                	add    %al,(%edx)
     d4d:	04 04                	add    $0x4,%al
     d4f:	00 00                	add    %al,(%eax)
     d51:	05 27 68 00 00       	add    $0x6827,%eax
     d56:	00 02                	add    %al,(%edx)
     d58:	03 04 00             	add    (%eax,%eax,1),%eax
     d5b:	00 05 2b 9e 00 00    	add    %al,0x9e2b
     d61:	00 06                	add    %al,(%esi)
     d63:	73 04                	jae    d69 <__executable_start-0x804736b>
     d65:	00 00                	add    %al,(%eax)
     d67:	0c 02                	or     $0x2,%al
     d69:	0a 06                	or     (%esi),%al
     d6b:	01 00                	add    %eax,(%eax)
     d6d:	00 07                	add    %al,(%edi)
     d6f:	70 00                	jo     d71 <__executable_start-0x8047363>
     d71:	02 0b                	add    (%ebx),%cl
     d73:	06                   	push   %es
     d74:	01 00                	add    %eax,(%eax)
     d76:	00 02                	add    %al,(%edx)
     d78:	23 00                	and    (%eax),%eax
     d7a:	08 cc                	or     %cl,%ah
     d7c:	04 00                	add    $0x0,%al
     d7e:	00 02                	add    %al,(%edx)
     d80:	0c 41                	or     $0x41,%al
     d82:	00 00                	add    %al,(%eax)
     d84:	00 02                	add    %al,(%edx)
     d86:	23 04 08             	and    (%eax,%ecx,1),%eax
     d89:	c8 04 00 00          	enter  $0x4,$0x0
     d8d:	02 0d 41 00 00 00    	add    0x41,%cl
     d93:	02 23                	add    (%ebx),%ah
     d95:	08 00                	or     %al,(%eax)
     d97:	09 04 3a             	or     %eax,(%edx,%edi,1)
     d9a:	00 00                	add    %al,(%eax)
     d9c:	00 0a                	add    %cl,(%edx)
     d9e:	04 02                	add    $0x2,%al
     da0:	62 39                	bound  %edi,(%ecx)
     da2:	01 00                	add    %eax,(%eax)
     da4:	00 0b                	add    %cl,(%ebx)
     da6:	dc 04 00             	faddl  (%eax,%eax,1)
     da9:	00 01                	add    %al,(%ecx)
     dab:	0b b6 03 00 00 02    	or     0x2000003(%esi),%esi
     db1:	0b d6                	or     %esi,%edx
     db3:	03 00                	add    (%eax),%eax
     db5:	00 04 0b             	add    %al,(%ebx,%ecx,1)
     db8:	6d                   	insl   (%dx),%es:(%edi)
     db9:	04 00                	add    $0x0,%al
     dbb:	00 08                	add    %cl,(%eax)
     dbd:	0b 50 03             	or     0x3(%eax),%edx
     dc0:	00 00                	add    %al,(%eax)
     dc2:	10 0b                	adc    %cl,(%ebx)
     dc4:	07                   	pop    %es
     dc5:	03 00                	add    (%eax),%eax
     dc7:	00 20                	add    %ah,(%eax)
     dc9:	00 0a                	add    %cl,(%edx)
     dcb:	04 02                	add    $0x2,%al
     dcd:	75 72                	jne    e41 <__executable_start-0x8047293>
     dcf:	01 00                	add    %eax,(%eax)
     dd1:	00 0b                	add    %cl,(%ebx)
     dd3:	a2 03 00 00 01       	mov    %al,0x1000003
     dd8:	0b b0 04 00 00 02    	or     0x2000004(%eax),%esi
     dde:	0c 49                	or     $0x49,%al
     de0:	4e                   	dec    %esi
     de1:	54                   	push   %esp
     de2:	00 03                	add    %al,(%ebx)
     de4:	0b 39                	or     (%ecx),%edi
     de6:	04 00                	add    $0x0,%al
     de8:	00 04 0b             	add    %al,(%ebx,%ecx,1)
     deb:	4a                   	dec    %edx
     dec:	04 00                	add    $0x0,%al
     dee:	00 05 0b 46 04 00    	add    %al,0x4460b
     df4:	00 06                	add    %al,(%esi)
     df6:	0b 92 04 00 00 07    	or     0x7000004(%edx),%edx
     dfc:	0b b0 03 00 00 08    	or     0x8000003(%eax),%esi
     e02:	00 06                	add    %al,(%esi)
     e04:	b6 04                	mov    $0x4,%dh
     e06:	00 00                	add    %al,(%eax)
     e08:	10 02                	adc    %al,(%edx)
     e0a:	5f                   	pop    %edi
     e0b:	b7 01                	mov    $0x1,%bh
     e0d:	00 00                	add    %al,(%eax)
     e0f:	08 dc                	or     %bl,%ah
     e11:	03 00                	add    (%eax),%eax
     e13:	00 02                	add    %al,(%edx)
     e15:	6a 0c                	push   $0xc
     e17:	01 00                	add    %eax,(%eax)
     e19:	00 02                	add    %al,(%edx)
     e1b:	23 00                	and    (%eax),%eax
     e1d:	08 8a 03 00 00 02    	or     %cl,0x2000003(%edx)
     e23:	6d                   	insl   (%dx),%es:(%edi)
     e24:	41                   	inc    %ecx
     e25:	00 00                	add    %al,(%eax)
     e27:	00 02                	add    %al,(%edx)
     e29:	23 04 08             	and    (%eax,%ecx,1),%eax
     e2c:	e2 04                	loop   e32 <__executable_start-0x80472a2>
     e2e:	00 00                	add    %al,(%eax)
     e30:	02 71 41             	add    0x41(%ecx),%dh
     e33:	00 00                	add    %al,(%eax)
     e35:	00 02                	add    %al,(%edx)
     e37:	23 08                	and    (%eax),%ecx
     e39:	08 55 03             	or     %dl,0x3(%ebp)
     e3c:	00 00                	add    %al,(%eax)
     e3e:	02 7f 39             	add    0x39(%edi),%bh
     e41:	01 00                	add    %eax,(%eax)
     e43:	00 02                	add    %al,(%edx)
     e45:	23 0c 00             	and    (%eax,%eax,1),%ecx
     e48:	06                   	push   %es
     e49:	c2 03 00             	ret    $0x3
     e4c:	00 10                	add    %dl,(%eax)
     e4e:	02 83 fa 01 00 00    	add    0x1fa(%ebx),%al
     e54:	08 ca                	or     %cl,%dl
     e56:	03 00                	add    (%eax),%eax
     e58:	00 02                	add    %al,(%edx)
     e5a:	84 41 00             	test   %al,0x0(%ecx)
     e5d:	00 00                	add    %al,(%eax)
     e5f:	02 23                	add    (%ebx),%ah
     e61:	00 08                	add    %cl,(%eax)
     e63:	bb 03 00 00 02       	mov    $0x2000003,%ebx
     e68:	85 fa                	test   %edi,%edx
     e6a:	01 00                	add    %eax,(%eax)
     e6c:	00 02                	add    %al,(%edx)
     e6e:	23 04 07             	and    (%edi,%eax,1),%eax
     e71:	78 00                	js     e73 <__executable_start-0x8047261>
     e73:	02 86 41 00 00 00    	add    0x41(%esi),%al
     e79:	02 23                	add    (%ebx),%ah
     e7b:	08 08                	or     %cl,(%eax)
     e7d:	31 03                	xor    %eax,(%ebx)
     e7f:	00 00                	add    %al,(%eax)
     e81:	02 87 41 00 00 00    	add    0x41(%edi),%al
     e87:	02 23                	add    (%ebx),%ah
     e89:	0c 00                	or     $0x0,%al
     e8b:	09 04 00             	or     %eax,(%eax,%eax,1)
     e8e:	02 00                	add    (%eax),%al
     e90:	00 0d 3a 00 00 00    	add    %cl,0x3a
     e96:	0e                   	push   %cs
     e97:	ff 02                	incl   (%edx)
     e99:	00 00                	add    %al,(%eax)
     e9b:	01 07                	add    %eax,(%edi)
     e9d:	01 41 00             	add    %eax,0x0(%ecx)
     ea0:	00 00                	add    %al,(%eax)
     ea2:	88 8c 04 08 a5 8c 04 	mov    %cl,0x48ca508(%esp,%eax,1)
     ea9:	08 9c 03 00 00 2e 02 	or     %bl,0x22e0000(%ebx,%eax,1)
     eb0:	00 00                	add    %al,(%eax)
     eb2:	0f 63 00             	packsswb (%eax),%mm0
     eb5:	01 07                	add    %eax,(%edi)
     eb7:	41                   	inc    %ecx
     eb8:	00 00                	add    %al,(%eax)
     eba:	00 02                	add    %al,(%edx)
     ebc:	91                   	xchg   %eax,%ecx
     ebd:	00 00                	add    %al,(%eax)
     ebf:	0e                   	push   %cs
     ec0:	4f                   	dec    %edi
     ec1:	04 00                	add    $0x0,%al
     ec3:	00 01                	add    %al,(%ecx)
     ec5:	12 01                	adc    (%ecx),%al
     ec7:	41                   	inc    %ecx
     ec8:	00 00                	add    %al,(%eax)
     eca:	00 a5 8c 04 08 c2    	add    %ah,-0x3df7fb74(%ebp)
     ed0:	8c 04 08             	mov    %es,(%eax,%ecx,1)
     ed3:	c8 03 00 00          	enter  $0x3,$0x0
     ed7:	57                   	push   %edi
     ed8:	02 00                	add    (%eax),%al
     eda:	00 0f                	add    %cl,(%edi)
     edc:	63 00                	arpl   %ax,(%eax)
     ede:	01 12                	add    %edx,(%edx)
     ee0:	41                   	inc    %ecx
     ee1:	00 00                	add    %al,(%eax)
     ee3:	00 02                	add    %al,(%edx)
     ee5:	91                   	xchg   %eax,%ecx
     ee6:	00 00                	add    %al,(%eax)
     ee8:	10 01                	adc    %al,(%ecx)
     eea:	26                   	es
     eeb:	04 00                	add    $0x0,%al
     eed:	00 02                	add    %al,(%edx)
     eef:	1a 01                	sbb    (%ecx),%al
     ef1:	41                   	inc    %ecx
     ef2:	00 00                	add    %al,(%eax)
     ef4:	00 c2                	add    %al,%dl
     ef6:	8c 04 08             	mov    %es,(%eax,%ecx,1)
     ef9:	1d 8d 04 08 f4       	sbb    $0xf408048d,%eax
     efe:	03 00                	add    (%eax),%eax
     f00:	00 bb 02 00 00 11    	add    %bh,0x11000002(%ebx)
     f06:	57                   	push   %edi
     f07:	04 00                	add    $0x0,%al
     f09:	00 02                	add    %al,(%edx)
     f0b:	1a 06                	sbb    (%esi),%al
     f0d:	01 00                	add    %eax,(%eax)
     f0f:	00 02                	add    %al,(%edx)
     f11:	91                   	xchg   %eax,%ecx
     f12:	00 11                	add    %dl,(%ecx)
     f14:	0d 03 00 00 02       	or     $0x2000003,%eax
     f19:	1a 48 00             	sbb    0x0(%eax),%cl
     f1c:	00 00                	add    %al,(%eax)
     f1e:	02 91 04 11 e1 01    	add    0x1e11104(%ecx),%dl
     f24:	00 00                	add    %al,(%eax)
     f26:	02 1a                	add    (%edx),%bl
     f28:	fa                   	cli    
     f29:	01 00                	add    %eax,(%eax)
     f2b:	00 02                	add    %al,(%edx)
     f2d:	91                   	xchg   %eax,%ecx
     f2e:	08 11                	or     %dl,(%ecx)
     f30:	3a 02                	cmp    (%edx),%al
     f32:	00 00                	add    %al,(%eax)
     f34:	02 1a                	add    (%edx),%bl
     f36:	25 00 00 00 02       	and    $0x2000000,%eax
     f3b:	91                   	xchg   %eax,%ecx
     f3c:	0c 12                	or     $0x12,%al
     f3e:	61                   	popa   
     f3f:	75 78                	jne    fb9 <__executable_start-0x804711b>
     f41:	00 02                	add    %al,(%edx)
     f43:	1d d1 00 00 00       	sbb    $0xd1,%eax
     f48:	02 91 64 00 13 79    	add    0x79130064(%ecx),%dl
     f4e:	03 00                	add    (%eax),%eax
     f50:	00 02                	add    %al,(%edx)
     f52:	2e 01 1d 8d 04 08 62 	add    %ebx,%cs:0x6208048d
     f59:	8d 04 08             	lea    (%eax,%ecx,1),%eax
     f5c:	20 04 00             	and    %al,(%eax,%eax,1)
     f5f:	00 fd                	add    %bh,%ch
     f61:	02 00                	add    (%eax),%al
     f63:	00 0f                	add    %cl,(%edi)
     f65:	63 68 00             	arpl   %bp,0x0(%eax)
     f68:	02 2e                	add    (%esi),%ch
     f6a:	3a 00                	cmp    (%eax),%al
     f6c:	00 00                	add    %al,(%eax)
     f6e:	02 91 64 11 e2 03    	add    0x3e21164(%ecx),%dl
     f74:	00 00                	add    %al,(%eax)
     f76:	02 2e                	add    (%esi),%ch
     f78:	fd                   	std    
     f79:	02 00                	add    (%eax),%al
     f7b:	00 02                	add    %al,(%edx)
     f7d:	91                   	xchg   %eax,%ecx
     f7e:	04 12                	add    $0x12,%al
     f80:	61                   	popa   
     f81:	75 78                	jne    ffb <__executable_start-0x80470d9>
     f83:	00 02                	add    %al,(%edx)
     f85:	30 ff                	xor    %bh,%bh
     f87:	02 00                	add    (%eax),%al
     f89:	00 02                	add    %al,(%edx)
     f8b:	91                   	xchg   %eax,%ecx
     f8c:	74 00                	je     f8e <__executable_start-0x8047146>
     f8e:	14 04                	adc    $0x4,%al
     f90:	09 04 d1             	or     %eax,(%ecx,%edx,8)
     f93:	00 00                	add    %al,(%eax)
     f95:	00 10                	add    %dl,(%eax)
     f97:	01 27                	add    %esp,(%edi)
     f99:	04 00                	add    $0x0,%al
     f9b:	00 02                	add    %al,(%edx)
     f9d:	3e 01 41 00          	add    %eax,%ds:0x0(%ecx)
     fa1:	00 00                	add    %al,(%eax)
     fa3:	62 8d 04 08 96 8d    	bound  %ecx,-0x7269f7fc(%ebp)
     fa9:	04 08                	add    $0x8,%al
     fab:	4c                   	dec    %esp
     fac:	04 00                	add    $0x0,%al
     fae:	00 6a 03             	add    %ch,0x3(%edx)
     fb1:	00 00                	add    %al,(%eax)
     fb3:	11 57 04             	adc    %edx,0x4(%edi)
     fb6:	00 00                	add    %al,(%eax)
     fb8:	02 3e                	add    (%esi),%bh
     fba:	06                   	push   %es
     fbb:	01 00                	add    %eax,(%eax)
     fbd:	00 02                	add    %al,(%edx)
     fbf:	91                   	xchg   %eax,%ecx
     fc0:	00 11                	add    %dl,(%ecx)
     fc2:	0d 03 00 00 02       	or     $0x2000003,%eax
     fc7:	3e                   	ds
     fc8:	48                   	dec    %eax
     fc9:	00 00                	add    %al,(%eax)
     fcb:	00 02                	add    %al,(%edx)
     fcd:	91                   	xchg   %eax,%ecx
     fce:	04 11                	add    $0x11,%al
     fd0:	e1 01                	loope  fd3 <__executable_start-0x8047101>
     fd2:	00 00                	add    %al,(%eax)
     fd4:	02 3e                	add    (%esi),%bh
     fd6:	fa                   	cli    
     fd7:	01 00                	add    %eax,(%eax)
     fd9:	00 02                	add    %al,(%edx)
     fdb:	91                   	xchg   %eax,%ecx
     fdc:	08 15 16 3a 02 00    	or     %dl,0x23a16
     fe2:	00 02                	add    %al,(%edx)
     fe4:	40                   	inc    %eax
     fe5:	25 00 00 00 02       	and    $0x2000000,%eax
     fea:	91                   	xchg   %eax,%ecx
     feb:	68 16 49 03 00       	push   $0x34916
     ff0:	00 02                	add    %al,(%edx)
     ff2:	41                   	inc    %ecx
     ff3:	41                   	inc    %ecx
     ff4:	00 00                	add    %al,(%eax)
     ff6:	00 02                	add    %al,(%edx)
     ff8:	91                   	xchg   %eax,%ecx
     ff9:	6c                   	insb   (%dx),%es:(%edi)
     ffa:	00 10                	add    %dl,(%eax)
     ffc:	01 d5                	add    %edx,%ebp
     ffe:	04 00                	add    $0x0,%al
    1000:	00 02                	add    %al,(%edx)
    1002:	4f                   	dec    %edi
    1003:	01 41 00             	add    %eax,0x0(%ecx)
    1006:	00 00                	add    %al,(%eax)
    1008:	96                   	xchg   %eax,%esi
    1009:	8d 04 08             	lea    (%eax,%ecx,1),%eax
    100c:	bc 8d 04 08 78       	mov    $0x7808048d,%esp
    1011:	04 00                	add    $0x0,%al
    1013:	00 b3 03 00 00 11    	add    %dh,0x11000003(%ebx)
    1019:	e1 01                	loope  101c <__executable_start-0x80470b8>
    101b:	00 00                	add    %al,(%eax)
    101d:	02 4f fa             	add    -0x6(%edi),%cl
    1020:	01 00                	add    %eax,(%eax)
    1022:	00 02                	add    %al,(%edx)
    1024:	91                   	xchg   %eax,%ecx
    1025:	00 15 16 3a 02 00    	add    %dl,0x23a16
    102b:	00 02                	add    %al,(%edx)
    102d:	51                   	push   %ecx
    102e:	25 00 00 00 02       	and    $0x2000000,%eax
    1033:	91                   	xchg   %eax,%ecx
    1034:	68 16 49 03 00       	push   $0x34916
    1039:	00 02                	add    %al,(%edx)
    103b:	52                   	push   %edx
    103c:	41                   	inc    %ecx
    103d:	00 00                	add    %al,(%eax)
    103f:	00 02                	add    %al,(%edx)
    1041:	91                   	xchg   %eax,%ecx
    1042:	6c                   	insb   (%dx),%es:(%edi)
    1043:	00 17                	add    %dl,(%edi)
    1045:	01 6f 03             	add    %ebp,0x3(%edi)
    1048:	00 00                	add    %al,(%eax)
    104a:	02 9d 01 bc 8d 04    	add    0x48dbc01(%ebp),%bl
    1050:	08 ee                	or     %ch,%dh
    1052:	92                   	xchg   %eax,%edx
    1053:	04 08                	add    $0x8,%al
    1055:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    1056:	04 00                	add    $0x0,%al
    1058:	00 bf 04 00 00 11    	add    %bh,0x11000004(%edi)
    105e:	e1 01                	loope  1061 <__executable_start-0x8047073>
    1060:	00 00                	add    %al,(%eax)
    1062:	02 9d fa 01 00 00    	add    0x1fa(%ebp),%bl
    1068:	02 91 00 11 3a 02    	add    0x23a1100(%ecx),%dl
    106e:	00 00                	add    %al,(%eax)
    1070:	02 9d 25 00 00 00    	add    0x25(%ebp),%bl
    1076:	02 91 04 11 a9 04    	add    0x4a91104(%ecx),%dl
    107c:	00 00                	add    %al,(%eax)
    107e:	02 9e d0 04 00 00    	add    0x4d0(%esi),%bl
    1084:	02 91 08 0f 61 75    	add    0x75610f08(%ecx),%dl
    108a:	78 00                	js     108c <__executable_start-0x8047048>
    108c:	02 9e fd 02 00 00    	add    0x2fd(%esi),%bl
    1092:	02 91 0c 18 0d 04    	add    0x40d180c(%ecx),%dl
    1098:	00 00                	add    %al,(%eax)
    109a:	e9 04 00 00 01       	jmp    10010a3 <__executable_start-0x7047031>
    109f:	05 03 a5 b3 04       	add    $0x4b3a503,%eax
    10a4:	08 19                	or     %bl,(%ecx)
    10a6:	ca 8d 04             	lret   $0x48d
    10a9:	08 d4                	or     %dl,%ah
    10ab:	92                   	xchg   %eax,%edx
    10ac:	04 08                	add    $0x8,%al
    10ae:	12 63 00             	adc    0x0(%ebx),%ah
    10b1:	02 a2 72 01 00 00    	add    0x172(%edx),%ah
    10b7:	03 91 b0 7f 1a 51    	add    0x511a7fb0(%ecx),%edx
    10bd:	8e 04 08             	mov    (%eax,%ecx,1),%es
    10c0:	d6                   	(bad)  
    10c1:	8f 04 08             	popl   (%eax,%ecx,1)
    10c4:	46                   	inc    %esi
    10c5:	04 00                	add    $0x0,%al
    10c7:	00 16                	add    %dl,(%esi)
    10c9:	40                   	inc    %eax
    10ca:	04 00                	add    $0x0,%al
    10cc:	00 02                	add    %al,(%edx)
    10ce:	bd bb 00 00 00       	mov    $0xbb,%ebp
    10d3:	02 91 40 00 1a db    	add    -0x24e5ffc0(%ecx),%dl
    10d9:	8f 04 08             	popl   (%eax,%ecx,1)
    10dc:	96                   	xchg   %eax,%esi
    10dd:	91                   	xchg   %eax,%ecx
    10de:	04 08                	add    $0x8,%al
    10e0:	6e                   	outsb  %ds:(%esi),(%dx)
    10e1:	04 00                	add    $0x0,%al
    10e3:	00 16                	add    %dl,(%esi)
    10e5:	40                   	inc    %eax
    10e6:	04 00                	add    $0x0,%al
    10e8:	00 02                	add    %al,(%edx)
    10ea:	ea c6 00 00 00 02 91 	ljmp   $0x9102,$0xc6
    10f1:	48                   	dec    %eax
    10f2:	12 62 00             	adc    0x0(%edx),%ah
    10f5:	02 eb                	add    %bl,%ch
    10f7:	ee                   	out    %al,(%dx)
    10f8:	04 00                	add    $0x0,%al
    10fa:	00 02                	add    %al,(%edx)
    10fc:	91                   	xchg   %eax,%ecx
    10fd:	54                   	push   %esp
    10fe:	00 1a                	add    %bl,(%edx)
    1100:	9b                   	fwait
    1101:	91                   	xchg   %eax,%ecx
    1102:	04 08                	add    $0x8,%al
    1104:	d1 91 04 08 8b 04    	rcll   0x48b0804(%ecx)
    110a:	00 00                	add    %al,(%eax)
    110c:	1b 63 68             	sbb    0x68(%ebx),%esp
    110f:	00 02                	add    %al,(%edx)
    1111:	1e                   	push   %ds
    1112:	01 3a                	add    %edi,(%edx)
    1114:	00 00                	add    %al,(%eax)
    1116:	00 03                	add    %al,(%ebx)
    1118:	91                   	xchg   %eax,%ecx
    1119:	af                   	scas   %es:(%edi),%eax
    111a:	7f 00                	jg     111c <__executable_start-0x8046fb8>
    111c:	1a d6                	sbb    %dh,%dl
    111e:	91                   	xchg   %eax,%ecx
    111f:	04 08                	add    $0x8,%al
    1121:	27                   	daa    
    1122:	92                   	xchg   %eax,%edx
    1123:	04 08                	add    $0x8,%al
    1125:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1126:	04 00                	add    $0x0,%al
    1128:	00 1b                	add    %bl,(%ebx)
    112a:	73 00                	jae    112c <__executable_start-0x8046fa8>
    112c:	02 26                	add    (%esi),%ah
    112e:	01 fa                	add    %edi,%edx
    1130:	01 00                	add    %eax,(%eax)
    1132:	00 02                	add    %al,(%edx)
    1134:	91                   	xchg   %eax,%ecx
    1135:	58                   	pop    %eax
    1136:	00 19                	add    %bl,(%ecx)
    1138:	2c 92                	sub    $0x92,%al
    113a:	04 08                	add    $0x8,%al
    113c:	82                   	(bad)  
    113d:	92                   	xchg   %eax,%edx
    113e:	04 08                	add    $0x8,%al
    1140:	1b 70 00             	sbb    0x0(%eax),%esi
    1143:	02 35 01 fd 02 00    	add    0x2fd01,%dh
    1149:	00 02                	add    %al,(%edx)
    114b:	91                   	xchg   %eax,%ecx
    114c:	5c                   	pop    %esp
    114d:	00 00                	add    %al,(%eax)
    114f:	00 1c 01             	add    %bl,(%ecx,%eax,1)
    1152:	d0 04 00             	rolb   (%eax,%eax,1)
    1155:	00 1d 3a 00 00 00    	add    %bl,0x3a
    115b:	1d fd 02 00 00       	sbb    $0x2fd,%eax
    1160:	00 09                	add    %cl,(%ecx)
    1162:	04 bf                	add    $0xbf,%al
    1164:	04 00                	add    $0x0,%al
    1166:	00 1e                	add    %bl,(%esi)
    1168:	3a 00                	cmp    (%eax),%al
    116a:	00 00                	add    %al,(%eax)
    116c:	e6 04                	out    %al,$0x4
    116e:	00 00                	add    %al,(%eax)
    1170:	1f                   	pop    %ds
    1171:	e6 04                	out    %al,$0x4
    1173:	00 00                	add    %al,(%eax)
    1175:	09 00                	or     %eax,(%eax)
    1177:	20 04 07             	and    %al,(%edi,%eax,1)
    117a:	0d d6 04 00 00       	or     $0x4d6,%eax
    117f:	09 04 f4             	or     %eax,(%esp,%esi,8)
    1182:	04 00                	add    $0x0,%al
    1184:	00 21                	add    %ah,(%ecx)
    1186:	c2 03 00             	ret    $0x3
    1189:	00 b7 01 00 00 22    	add    %dh,0x22000001(%edi)
    118f:	81 04 00 00 02 54 01 	addl   $0x1540200,(%eax,%eax,1)
    1196:	01 fa                	add    %edi,%edx
    1198:	01 00                	add    %eax,(%eax)
    119a:	00 ee                	add    %ch,%dh
    119c:	92                   	xchg   %eax,%edx
    119d:	04 08                	add    $0x8,%al
    119f:	b7 95                	mov    $0x95,%bh
    11a1:	04 08                	add    $0x8,%al
    11a3:	d0 04 00             	rolb   (%eax,%eax,1)
    11a6:	00 52 05             	add    %dl,0x5(%edx)
    11a9:	00 00                	add    %al,(%eax)
    11ab:	23 e1                	and    %ecx,%esp
    11ad:	01 00                	add    %eax,(%eax)
    11af:	00 02                	add    %al,(%edx)
    11b1:	54                   	push   %esp
    11b2:	01 fa                	add    %edi,%edx
    11b4:	01 00                	add    %eax,(%eax)
    11b6:	00 02                	add    %al,(%edx)
    11b8:	91                   	xchg   %eax,%ecx
    11b9:	00 24 63             	add    %ah,(%ebx,%eiz,2)
    11bc:	00 02                	add    %al,(%edx)
    11be:	54                   	push   %esp
    11bf:	01 52 05             	add    %edx,0x5(%edx)
    11c2:	00 00                	add    %al,(%eax)
    11c4:	02 91 04 23 3a 02    	add    0x23a2304(%ecx),%dl
    11ca:	00 00                	add    %al,(%eax)
    11cc:	02 55 01             	add    0x1(%ebp),%dl
    11cf:	58                   	pop    %eax
    11d0:	05 00 00 02 91       	add    $0x91020000,%eax
    11d5:	08 25 90 03 00 00    	or     %ah,0x390
    11db:	02 74 01 86          	add    -0x7a(%ecx,%eax,1),%dh
    11df:	93                   	xchg   %eax,%ebx
    11e0:	04 08                	add    $0x8,%al
    11e2:	00 09                	add    %cl,(%ecx)
    11e4:	04 72                	add    $0x72,%al
    11e6:	01 00                	add    %eax,(%eax)
    11e8:	00 09                	add    %cl,(%ecx)
    11ea:	04 25                	add    $0x25,%al
    11ec:	00 00                	add    %al,(%eax)
    11ee:	00 26                	add    %ah,(%esi)
    11f0:	e7 03                	out    %eax,$0x3
    11f2:	00 00                	add    %al,(%eax)
    11f4:	02 d6                	add    %dh,%dl
    11f6:	01 01                	add    %eax,(%ecx)
    11f8:	b7 95                	mov    $0x95,%bh
    11fa:	04 08                	add    $0x8,%al
    11fc:	d9 98 04 08 fc 04    	fstps  0x4fc0804(%eax)
    1202:	00 00                	add    %al,(%eax)
    1204:	47                   	inc    %edi
    1205:	06                   	push   %es
    1206:	00 00                	add    %al,(%eax)
    1208:	23 40 04             	and    0x4(%eax),%eax
    120b:	00 00                	add    %al,(%eax)
    120d:	02 d6                	add    %dh,%dl
    120f:	01 c6                	add    %eax,%esi
    1211:	00 00                	add    %al,(%eax)
    1213:	00 03                	add    %al,(%ebx)
    1215:	91                   	xchg   %eax,%ecx
    1216:	88 7f 23             	mov    %bh,0x23(%edi)
    1219:	63 04 00             	arpl   %ax,(%eax,%eax,1)
    121c:	00 02                	add    %al,(%edx)
    121e:	d6                   	(bad)  
    121f:	01 47 06             	add    %eax,0x6(%edi)
    1222:	00 00                	add    %al,(%eax)
    1224:	03 91 84 7f 23 a7    	add    -0x58dc807c(%ecx),%edx
    122a:	03 00                	add    (%eax),%eax
    122c:	00 02                	add    %al,(%edx)
    122e:	d6                   	(bad)  
    122f:	01 47 06             	add    %eax,0x6(%edi)
    1232:	00 00                	add    %al,(%eax)
    1234:	03 91 80 7f 24 62    	add    0x62247f80(%ecx),%edx
    123a:	00 02                	add    %al,(%edx)
    123c:	d7                   	xlat   %ds:(%ebx)
    123d:	01 ee                	add    %ebp,%esi
    123f:	04 00                	add    $0x0,%al
    1241:	00 02                	add    %al,(%edx)
    1243:	91                   	xchg   %eax,%ecx
    1244:	10 24 63             	adc    %ah,(%ebx,%eiz,2)
    1247:	00 02                	add    %al,(%edx)
    1249:	d8 01                	fadds  (%ecx)
    124b:	4e                   	dec    %esi
    124c:	06                   	push   %es
    124d:	00 00                	add    %al,(%eax)
    124f:	02 91 14 23 a9 04    	add    0x4a92314(%ecx),%dl
    1255:	00 00                	add    %al,(%eax)
    1257:	02 d9                	add    %cl,%bl
    1259:	01 d0                	add    %edx,%eax
    125b:	04 00                	add    $0x0,%al
    125d:	00 02                	add    %al,(%edx)
    125f:	91                   	xchg   %eax,%ecx
    1260:	18 24 61             	sbb    %ah,(%ecx,%eiz,2)
    1263:	75 78                	jne    12dd <__executable_start-0x8046df7>
    1265:	00 02                	add    %al,(%edx)
    1267:	d9 01                	flds   (%ecx)
    1269:	fd                   	std    
    126a:	02 00                	add    (%eax),%al
    126c:	00 02                	add    %al,(%edx)
    126e:	91                   	xchg   %eax,%ecx
    126f:	1c 1b                	sbb    $0x1b,%al
    1271:	62 75 66             	bound  %esi,0x66(%ebp)
    1274:	00 02                	add    %al,(%edx)
    1276:	db 01                	fildl  (%ecx)
    1278:	5d                   	pop    %ebp
    1279:	06                   	push   %es
    127a:	00 00                	add    %al,(%eax)
    127c:	03 91 98 7f 1b 63    	add    0x631b7f98(%ecx),%edx
    1282:	70 00                	jo     1284 <__executable_start-0x8046e50>
    1284:	02 db                	add    %bl,%bl
    1286:	01 06                	add    %eax,(%esi)
    1288:	01 00                	add    %eax,(%eax)
    128a:	00 02                	add    %al,(%edx)
    128c:	91                   	xchg   %eax,%ecx
    128d:	58                   	pop    %eax
    128e:	1b 78 00             	sbb    0x0(%eax),%edi
    1291:	02 dc                	add    %ah,%bl
    1293:	01 41 00             	add    %eax,0x0(%ecx)
    1296:	00 00                	add    %al,(%eax)
    1298:	02 91 5c 27 5e 04    	add    0x45e275c(%ecx),%dl
    129e:	00 00                	add    %al,(%eax)
    12a0:	02 dd                	add    %ch,%bl
    12a2:	01 41 00             	add    %eax,0x0(%ecx)
    12a5:	00 00                	add    %al,(%eax)
    12a7:	02 91 60 27 e2 04    	add    0x4e22760(%ecx),%dl
    12ad:	00 00                	add    %al,(%eax)
    12af:	02 de                	add    %dh,%bl
    12b1:	01 41 00             	add    %eax,0x0(%ecx)
    12b4:	00 00                	add    %al,(%eax)
    12b6:	02 91 64 27 37 03    	add    0x3372764(%ecx),%dl
    12bc:	00 00                	add    %al,(%eax)
    12be:	02 df                	add    %bh,%bl
    12c0:	01 41 00             	add    %eax,0x0(%ecx)
    12c3:	00 00                	add    %al,(%eax)
    12c5:	02 91 68 27 3f 03    	add    0x33f2768(%ecx),%dl
    12cb:	00 00                	add    %al,(%eax)
    12cd:	02 e0                	add    %al,%ah
    12cf:	01 41 00             	add    %eax,0x0(%ecx)
    12d2:	00 00                	add    %al,(%eax)
    12d4:	02 91 6c 00 04 01    	add    0x104006c(%ecx),%dl
    12da:	02 5a 01             	add    0x1(%edx),%bl
    12dd:	00 00                	add    %al,(%eax)
    12df:	09 04 54             	or     %eax,(%esp,%edx,2)
    12e2:	06                   	push   %es
    12e3:	00 00                	add    %al,(%eax)
    12e5:	21 b6 04 00 00 72    	and    %esi,0x72000004(%esi)
    12eb:	01 00                	add    %eax,(%eax)
    12ed:	00 1e                	add    %bl,(%esi)
    12ef:	3a 00                	cmp    (%eax),%al
    12f1:	00 00                	add    %al,(%eax)
    12f3:	6d                   	insl   (%dx),%es:(%edi)
    12f4:	06                   	push   %es
    12f5:	00 00                	add    %al,(%eax)
    12f7:	1f                   	pop    %ds
    12f8:	e6 04                	out    %al,$0x4
    12fa:	00 00                	add    %al,(%eax)
    12fc:	3f                   	aas    
    12fd:	00 26                	add    %ah,(%esi)
    12ff:	5a                   	pop    %edx
    1300:	03 00                	add    (%eax),%eax
    1302:	00 02                	add    %al,(%edx)
    1304:	27                   	daa    
    1305:	02 01                	add    (%ecx),%al
    1307:	d9 98 04 08 0b 99    	fstps  -0x66f4f7fc(%eax)
    130d:	04 08                	add    $0x8,%al
    130f:	28 05 00 00 c2 06    	sub    %al,0x6c20000
    1315:	00 00                	add    %al,(%eax)
    1317:	24 63                	and    $0x63,%al
    1319:	68 00 02 27 02       	push   $0x2270200
    131e:	3a 00                	cmp    (%eax),%al
    1320:	00 00                	add    %al,(%eax)
    1322:	02 91 6c 24 63 6e    	add    0x6e63246c(%ecx),%dl
    1328:	74 00                	je     132a <__executable_start-0x8046daa>
    132a:	02 27                	add    (%edi),%ah
    132c:	02 48 00             	add    0x0(%eax),%cl
    132f:	00 00                	add    %al,(%eax)
    1331:	02 91 04 23 a9 04    	add    0x4a92304(%ecx),%dl
    1337:	00 00                	add    %al,(%eax)
    1339:	02 27                	add    (%edi),%ah
    133b:	02 d0                	add    %al,%dl
    133d:	04 00                	add    $0x0,%al
    133f:	00 02                	add    %al,(%edx)
    1341:	91                   	xchg   %eax,%ecx
    1342:	08 24 61             	or     %ah,(%ecx,%eiz,2)
    1345:	75 78                	jne    13bf <__executable_start-0x8046d15>
    1347:	00 02                	add    %al,(%edx)
    1349:	27                   	daa    
    134a:	02 fd                	add    %ch,%bh
    134c:	02 00                	add    (%eax),%al
    134e:	00 02                	add    %al,(%edx)
    1350:	91                   	xchg   %eax,%ecx
    1351:	0c 00                	or     $0x0,%al
    1353:	26                   	es
    1354:	9b                   	fwait
    1355:	04 00                	add    $0x0,%al
    1357:	00 02                	add    %al,(%edx)
    1359:	31 02                	xor    %eax,(%edx)
    135b:	01 0b                	add    %ecx,(%ebx)
    135d:	99                   	cltd   
    135e:	04 08                	add    $0x8,%al
    1360:	bf 99 04 08 54       	mov    $0x54080499,%edi
    1365:	05 00 00 32 07       	add    $0x7320000,%eax
    136a:	00 00                	add    %al,(%eax)
    136c:	23 a2 04 00 00 02    	and    0x2000004(%edx),%esp
    1372:	31 02                	xor    %eax,(%edx)
    1374:	fa                   	cli    
    1375:	01 00                	add    %eax,(%eax)
    1377:	00 02                	add    %al,(%edx)
    1379:	91                   	xchg   %eax,%ecx
    137a:	00 23                	add    %ah,(%ebx)
    137c:	cc                   	int3   
    137d:	04 00                	add    $0x0,%al
    137f:	00 02                	add    %al,(%edx)
    1381:	31 02                	xor    %eax,(%edx)
    1383:	41                   	inc    %ecx
    1384:	00 00                	add    %al,(%eax)
    1386:	00 02                	add    %al,(%edx)
    1388:	91                   	xchg   %eax,%ecx
    1389:	04 24                	add    $0x24,%al
    138b:	63 00                	arpl   %ax,(%eax)
    138d:	02 32                	add    (%edx),%dh
    138f:	02 52 05             	add    0x5(%edx),%dl
    1392:	00 00                	add    %al,(%eax)
    1394:	02 91 08 23 a9 04    	add    0x4a92308(%ecx),%dl
    139a:	00 00                	add    %al,(%eax)
    139c:	02 33                	add    (%ebx),%dh
    139e:	02 d0                	add    %al,%dl
    13a0:	04 00                	add    $0x0,%al
    13a2:	00 02                	add    %al,(%edx)
    13a4:	91                   	xchg   %eax,%ecx
    13a5:	0c 24                	or     $0x24,%al
    13a7:	61                   	popa   
    13a8:	75 78                	jne    1422 <__executable_start-0x8046cb2>
    13aa:	00 02                	add    %al,(%edx)
    13ac:	33 02                	xor    (%edx),%eax
    13ae:	fd                   	std    
    13af:	02 00                	add    (%eax),%al
    13b1:	00 02                	add    %al,(%edx)
    13b3:	91                   	xchg   %eax,%ecx
    13b4:	10 1b                	adc    %bl,(%ebx)
    13b6:	69 00 02 35 02 41    	imul   $0x41023502,(%eax),%eax
    13bc:	00 00                	add    %al,(%eax)
    13be:	00 02                	add    %al,(%edx)
    13c0:	91                   	xchg   %eax,%ecx
    13c1:	6c                   	insb   (%dx),%es:(%edi)
    13c2:	00 28                	add    %ch,(%eax)
    13c4:	01 d3                	add    %edx,%ebx
    13c6:	04 00                	add    $0x0,%al
    13c8:	00 02                	add    %al,(%edx)
    13ca:	41                   	inc    %ecx
    13cb:	02 01                	add    (%ecx),%al
    13cd:	bf 99 04 08 ed       	mov    $0xed080499,%edi
    13d2:	99                   	cltd   
    13d3:	04 08                	add    $0x8,%al
    13d5:	80 05 00 00 8a 07 00 	addb   $0x0,0x78a0000
    13dc:	00 23                	add    %ah,(%ebx)
    13de:	e1 01                	loope  13e1 <__executable_start-0x8046cf3>
    13e0:	00 00                	add    %al,(%eax)
    13e2:	02 41 02             	add    0x2(%ecx),%al
    13e5:	fa                   	cli    
    13e6:	01 00                	add    %eax,(%eax)
    13e8:	00 02                	add    %al,(%edx)
    13ea:	91                   	xchg   %eax,%ecx
    13eb:	00 23                	add    %ah,(%ebx)
    13ed:	a9 04 00 00 02       	test   $0x2000004,%eax
    13f2:	42                   	inc    %edx
    13f3:	02 d0                	add    %al,%dl
    13f5:	04 00                	add    $0x0,%al
    13f7:	00 02                	add    %al,(%edx)
    13f9:	91                   	xchg   %eax,%ecx
    13fa:	04 24                	add    $0x24,%al
    13fc:	61                   	popa   
    13fd:	75 78                	jne    1477 <__executable_start-0x8046c5d>
    13ff:	00 02                	add    %al,(%edx)
    1401:	42                   	inc    %edx
    1402:	02 fd                	add    %ch,%bh
    1404:	02 00                	add    (%eax),%al
    1406:	00 02                	add    %al,(%edx)
    1408:	91                   	xchg   %eax,%ecx
    1409:	08 15 27 3a 02 00    	or     %dl,0x23a27
    140f:	00 02                	add    %al,(%edx)
    1411:	44                   	inc    %esp
    1412:	02 25 00 00 00 02    	add    0x2000000,%ah
    1418:	91                   	xchg   %eax,%ecx
    1419:	6c                   	insb   (%dx),%es:(%edi)
    141a:	00 28                	add    %ch,(%eax)
    141c:	01 30                	add    %esi,(%eax)
    141e:	04 00                	add    $0x0,%al
    1420:	00 02                	add    %al,(%edx)
    1422:	51                   	push   %ecx
    1423:	02 01                	add    (%ecx),%al
    1425:	ed                   	in     (%dx),%eax
    1426:	99                   	cltd   
    1427:	04 08                	add    $0x8,%al
    1429:	dd 9b 04 08 ac 05    	fstpl  0x5ac0804(%ebx)
    142f:	00 00                	add    %al,(%eax)
    1431:	41                   	inc    %ecx
    1432:	08 00                	or     %al,(%eax)
    1434:	00 24 6f             	add    %ah,(%edi,%ebp,2)
    1437:	66                   	data16
    1438:	73 00                	jae    143a <__executable_start-0x8046c9a>
    143a:	02 51 02             	add    0x2(%ecx),%dl
    143d:	b0 00                	mov    $0x0,%al
    143f:	00 00                	add    %al,(%eax)
    1441:	02 91 00 23 e3 00    	add    0xe32300(%ecx),%dl
    1447:	00 00                	add    %al,(%eax)
    1449:	02 51 02             	add    0x2(%ecx),%dl
    144c:	41                   	inc    %ecx
    144d:	08 00                	or     %al,(%eax)
    144f:	00 02                	add    %al,(%edx)
    1451:	91                   	xchg   %eax,%ecx
    1452:	04 23                	add    $0x23,%al
    1454:	65 01 00             	add    %eax,%gs:(%eax)
    1457:	00 02                	add    %al,(%edx)
    1459:	51                   	push   %ecx
    145a:	02 48 00             	add    0x0(%eax),%cl
    145d:	00 00                	add    %al,(%eax)
    145f:	02 91 08 23 f6 03    	add    0x3f62308(%ecx),%dl
    1465:	00 00                	add    %al,(%eax)
    1467:	02 51 02             	add    0x2(%ecx),%dl
    146a:	47                   	inc    %edi
    146b:	06                   	push   %es
    146c:	00 00                	add    %al,(%eax)
    146e:	02 91 4c 1b 62 75    	add    0x75621b4c(%ecx),%dl
    1474:	66                   	data16
    1475:	00 02                	add    %al,(%edx)
    1477:	53                   	push   %ebx
    1478:	02 48 08             	add    0x8(%eax),%cl
    147b:	00 00                	add    %al,(%eax)
    147d:	02 91 58 27 16 04    	add    0x4162758(%ecx),%dl
    1483:	00 00                	add    %al,(%eax)
    1485:	02 54 02 53          	add    0x53(%edx,%eax,1),%dl
    1489:	08 00                	or     %al,(%eax)
    148b:	00 02                	add    %al,(%edx)
    148d:	91                   	xchg   %eax,%ecx
    148e:	5c                   	pop    %esp
    148f:	19 0c 9a             	sbb    %ecx,(%edx,%ebx,4)
    1492:	04 08                	add    $0x8,%al
    1494:	cd 9b                	int    $0x9b
    1496:	04 08                	add    $0x8,%al
    1498:	27                   	daa    
    1499:	97                   	xchg   %eax,%edi
    149a:	02 00                	add    (%eax),%al
    149c:	00 02                	add    %al,(%edx)
    149e:	58                   	pop    %eax
    149f:	02 48 00             	add    0x0(%eax),%cl
    14a2:	00 00                	add    %al,(%eax)
    14a4:	02 91 60 1b 65 6e    	add    0x6e651b60(%ecx),%dl
    14aa:	64 00 02             	add    %al,%fs:(%edx)
    14ad:	58                   	pop    %eax
    14ae:	02 48 00             	add    0x0(%eax),%cl
    14b1:	00 00                	add    %al,(%eax)
    14b3:	02 91 64 1b 6e 00    	add    0x6e1b64(%ecx),%dl
    14b9:	02 58 02             	add    0x2(%eax),%bl
    14bc:	48                   	dec    %eax
    14bd:	00 00                	add    %al,(%eax)
    14bf:	00 02                	add    %al,(%edx)
    14c1:	91                   	xchg   %eax,%ecx
    14c2:	68 1b 69 00 02       	push   $0x200691b
    14c7:	59                   	pop    %ecx
    14c8:	02 48 00             	add    0x0(%eax),%cl
    14cb:	00 00                	add    %al,(%eax)
    14cd:	02 91 6c 00 00 09    	add    0x900006c(%ecx),%dl
    14d3:	04 47                	add    $0x47,%al
    14d5:	08 00                	or     %al,(%eax)
    14d7:	00 29                	add    %ch,(%ecx)
    14d9:	09 04 4e             	or     %eax,(%esi,%ecx,2)
    14dc:	08 00                	or     %al,(%eax)
    14de:	00 0d 7a 00 00 00    	add    %cl,0x7a
    14e4:	0d 48 00 00 00       	or     $0x48,%eax
    14e9:	16                   	push   %ss
    14ea:	9b                   	fwait
    14eb:	03 00                	add    (%eax),%eax
    14ed:	00 02                	add    %al,(%edx)
    14ef:	8a f4                	mov    %ah,%dh
    14f1:	04 00                	add    $0x0,%al
    14f3:	00 05 03 0c b1 04    	add    %al,0x4b10c03
    14f9:	08 16                	or     %dl,(%esi)
    14fb:	fc                   	cld    
    14fc:	03 00                	add    (%eax),%eax
    14fe:	00 02                	add    %al,(%edx)
    1500:	8b f4                	mov    %esp,%esi
    1502:	04 00                	add    $0x0,%al
    1504:	00 05 03 28 b1 04    	add    %al,0x4b12803
    150a:	08 16                	or     %dl,(%esi)
    150c:	1f                   	pop    %ds
    150d:	04 00                	add    $0x0,%al
    150f:	00 02                	add    %al,(%edx)
    1511:	8c f4                	mov    %?,%esp
    1513:	04 00                	add    $0x0,%al
    1515:	00 05 03 4c b1 04    	add    %al,0x4b14c03
    151b:	08 16                	or     %dl,(%esi)
    151d:	cf                   	iret   
    151e:	03 00                	add    (%eax),%eax
    1520:	00 02                	add    %al,(%edx)
    1522:	8d                   	(bad)  
    1523:	f4                   	hlt    
    1524:	04 00                	add    $0x0,%al
    1526:	00 05 03 70 b1 04    	add    %al,0x4b17003
    152c:	08 00                	or     %al,(%eax)
    152e:	66 07                	popw   %es
    1530:	00 00                	add    %al,(%eax)
    1532:	02 00                	add    (%eax),%al
    1534:	54                   	push   %esp
    1535:	07                   	pop    %es
    1536:	00 00                	add    %al,(%eax)
    1538:	04 01                	add    $0x1,%al
    153a:	45                   	inc    %ebp
    153b:	00 00                	add    %al,(%eax)
    153d:	00 01                	add    %al,(%ecx)
    153f:	8e 05 00 00 73 00    	mov    0x730000,%es
    1545:	00 00                	add    %al,(%eax)
    1547:	e0 9b                	loopne 14e4 <__executable_start-0x8046bf0>
    1549:	04 08                	add    $0x8,%al
    154b:	6a a5                	push   $0xffffffa5
    154d:	04 08                	add    $0x8,%al
    154f:	d9 05 00 00 02 04    	flds   0x4020000
    1555:	05 69 6e 74 00       	add    $0x746e69,%eax
    155a:	03 d1                	add    %ecx,%edx
    155c:	00 00                	add    %al,(%eax)
    155e:	00 02                	add    %al,(%edx)
    1560:	0a 37                	or     (%edi),%dh
    1562:	00 00                	add    %al,(%eax)
    1564:	00 04 04             	add    %al,(%esp,%eax,1)
    1567:	07                   	pop    %es
    1568:	26 00 00             	add    %al,%es:(%eax)
    156b:	00 05 01 b3 05 00    	add    %al,0x5b301
    1571:	00 01                	add    %al,(%ecx)
    1573:	07                   	pop    %es
    1574:	01 b2 00 00 00 e0    	add    %esi,-0x20000000(%edx)
    157a:	9b                   	fwait
    157b:	04 08                	add    $0x8,%al
    157d:	8f                   	(bad)  
    157e:	9c                   	pushf  
    157f:	04 08                	add    $0x8,%al
    1581:	d8 05 00 00 b2 00    	fadds  0xb20000
    1587:	00 00                	add    %al,(%eax)
    1589:	06                   	push   %es
    158a:	5c                   	pop    %esp
    158b:	05 00 00 01 07       	add    $0x7010000,%eax
    1590:	b2 00                	mov    $0x0,%dl
    1592:	00 00                	add    %al,(%eax)
    1594:	02 91 00 06 1a 05    	add    0x51a0600(%ecx),%dl
    159a:	00 00                	add    %al,(%eax)
    159c:	01 07                	add    %eax,(%edi)
    159e:	b4 00                	mov    $0x0,%ah
    15a0:	00 00                	add    %al,(%eax)
    15a2:	02 91 04 06 65 01    	add    0x1650604(%ecx),%dl
    15a8:	00 00                	add    %al,(%eax)
    15aa:	01 07                	add    %eax,(%edi)
    15ac:	2c 00                	sub    $0x0,%al
    15ae:	00 00                	add    %al,(%eax)
    15b0:	02 91 08 07 64 73    	add    0x73640708(%ecx),%dl
    15b6:	74 00                	je     15b8 <__executable_start-0x8046b1c>
    15b8:	01 09                	add    %ecx,(%ecx)
    15ba:	bb 00 00 00 02       	mov    $0x2000000,%ebx
    15bf:	91                   	xchg   %eax,%ecx
    15c0:	68 07 73 72 63       	push   $0x63727307
    15c5:	00 01                	add    %al,(%ecx)
    15c7:	0a c8                	or     %al,%cl
    15c9:	00 00                	add    %al,(%eax)
    15cb:	00 02                	add    %al,(%edx)
    15cd:	91                   	xchg   %eax,%ecx
    15ce:	6c                   	insb   (%dx),%es:(%edi)
    15cf:	08 0d 04 00 00 ed    	or     %cl,0xed000004
    15d5:	00 00                	add    %al,(%eax)
    15d7:	00 01                	add    %al,(%ecx)
    15d9:	05 03 08 b5 04       	add    $0x4b50803,%eax
    15de:	08 00                	or     %al,(%eax)
    15e0:	09 04 0a             	or     %eax,(%edx,%ecx,1)
    15e3:	04 ba                	add    $0xba,%al
    15e5:	00 00                	add    %al,(%eax)
    15e7:	00 0b                	add    %cl,(%ebx)
    15e9:	0a 04 c1             	or     (%ecx,%eax,8),%al
    15ec:	00 00                	add    %al,(%eax)
    15ee:	00 04 01             	add    %al,(%ecx,%eax,1)
    15f1:	08 0e                	or     %cl,(%esi)
    15f3:	00 00                	add    %al,(%eax)
    15f5:	00 0a                	add    %cl,(%edx)
    15f7:	04 ce                	add    $0xce,%al
    15f9:	00 00                	add    %al,(%eax)
    15fb:	00 0c c1             	add    %cl,(%ecx,%eax,8)
    15fe:	00 00                	add    %al,(%eax)
    1600:	00 0d e6 00 00 00    	add    %cl,0xe6
    1606:	e3 00                	jecxz  1608 <__executable_start-0x8046acc>
    1608:	00 00                	add    %al,(%eax)
    160a:	0e                   	push   %cs
    160b:	e3 00                	jecxz  160d <__executable_start-0x8046ac7>
    160d:	00 00                	add    %al,(%eax)
    160f:	06                   	push   %es
    1610:	00 0f                	add    %cl,(%edi)
    1612:	04 07                	add    $0x7,%al
    1614:	04 01                	add    $0x1,%al
    1616:	06                   	push   %es
    1617:	17                   	pop    %ss
    1618:	00 00                	add    %al,(%eax)
    161a:	00 0c d3             	add    %cl,(%ebx,%edx,8)
    161d:	00 00                	add    %al,(%eax)
    161f:	00 05 01 ec 04 00    	add    %al,0x4ec01
    1625:	00 01                	add    %al,(%ecx)
    1627:	18 01                	sbb    %al,(%ecx)
    1629:	b2 00                	mov    $0x0,%dl
    162b:	00 00                	add    %al,(%eax)
    162d:	8f                   	(bad)  
    162e:	9c                   	pushf  
    162f:	04 08                	add    $0x8,%al
    1631:	74 9d                	je     15d0 <__executable_start-0x8046b04>
    1633:	04 08                	add    $0x8,%al
    1635:	04 06                	add    $0x6,%al
    1637:	00 00                	add    %al,(%eax)
    1639:	66 01 00             	add    %ax,(%eax)
    163c:	00 06                	add    %al,(%esi)
    163e:	5c                   	pop    %esp
    163f:	05 00 00 01 18       	add    $0x18010000,%eax
    1644:	b2 00                	mov    $0x0,%dl
    1646:	00 00                	add    %al,(%eax)
    1648:	02 91 00 06 1a 05    	add    0x51a0600(%ecx),%dl
    164e:	00 00                	add    %al,(%eax)
    1650:	01 18                	add    %ebx,(%eax)
    1652:	b4 00                	mov    $0x0,%ah
    1654:	00 00                	add    %al,(%eax)
    1656:	02 91 04 06 65 01    	add    0x1650604(%ecx),%dl
    165c:	00 00                	add    %al,(%eax)
    165e:	01 18                	add    %ebx,(%eax)
    1660:	2c 00                	sub    $0x0,%al
    1662:	00 00                	add    %al,(%eax)
    1664:	02 91 08 07 64 73    	add    0x73640708(%ecx),%dl
    166a:	74 00                	je     166c <__executable_start-0x8046a68>
    166c:	01 1a                	add    %ebx,(%edx)
    166e:	bb 00 00 00 02       	mov    $0x2000000,%ebx
    1673:	91                   	xchg   %eax,%ecx
    1674:	68 07 73 72 63       	push   $0x63727307
    1679:	00 01                	add    %al,(%ecx)
    167b:	1b c8                	sbb    %eax,%ecx
    167d:	00 00                	add    %al,(%eax)
    167f:	00 02                	add    %al,(%edx)
    1681:	91                   	xchg   %eax,%ecx
    1682:	6c                   	insb   (%dx),%es:(%edi)
    1683:	08 0d 04 00 00 76    	or     %cl,0x76000004
    1689:	01 00                	add    %eax,(%eax)
    168b:	00 01                	add    %al,(%ecx)
    168d:	05 03 00 b5 04       	add    $0x4b50003,%eax
    1692:	08 00                	or     %al,(%eax)
    1694:	0d e6 00 00 00       	or     $0xe6,%eax
    1699:	76 01                	jbe    169c <__executable_start-0x8046a38>
    169b:	00 00                	add    %al,(%eax)
    169d:	0e                   	push   %cs
    169e:	e3 00                	jecxz  16a0 <__executable_start-0x8046a34>
    16a0:	00 00                	add    %al,(%eax)
    16a2:	07                   	pop    %es
    16a3:	00 0c 66             	add    %cl,(%esi,%eiz,2)
    16a6:	01 00                	add    %eax,(%eax)
    16a8:	00 05 01 0b 05 00    	add    %al,0x50b01
    16ae:	00 01                	add    %al,(%ecx)
    16b0:	35 01 25 00 00       	xor    $0x2501,%eax
    16b5:	00 74 9d 04          	add    %dh,0x4(%ebp,%ebx,4)
    16b9:	08 48 9e             	or     %cl,-0x62(%eax)
    16bc:	04 08                	add    $0x8,%al
    16be:	30 06                	xor    %al,(%esi)
    16c0:	00 00                	add    %al,(%eax)
    16c2:	e9 01 00 00 10       	jmp    100016c8 <test_name+0x7fb4760>
    16c7:	61                   	popa   
    16c8:	5f                   	pop    %edi
    16c9:	00 01                	add    %al,(%ecx)
    16cb:	35 b4 00 00 00       	xor    $0xb4,%eax
    16d0:	02 91 00 10 62 5f    	add    0x5f621000(%ecx),%dl
    16d6:	00 01                	add    %al,(%ecx)
    16d8:	35 b4 00 00 00       	xor    $0xb4,%eax
    16dd:	02 91 04 06 65 01    	add    0x1650604(%ecx),%dl
    16e3:	00 00                	add    %al,(%eax)
    16e5:	01 35 2c 00 00 00    	add    %esi,0x2c
    16eb:	02 91 08 07 61 00    	add    0x610708(%ecx),%dl
    16f1:	01 37                	add    %esi,(%edi)
    16f3:	c8 00 00 00          	enter  $0x0,$0x0
    16f7:	02 91 68 07 62 00    	add    0x620768(%ecx),%dl
    16fd:	01 38                	add    %edi,(%eax)
    16ff:	c8 00 00 00          	enter  $0x0,$0x0
    1703:	02 91 6c 08 0d 04    	add    0x40d086c(%ecx),%dl
    1709:	00 00                	add    %al,(%eax)
    170b:	e9 01 00 00 01       	jmp    1001711 <__executable_start-0x70469c3>
    1710:	05 03 f9 b4 04       	add    $0x4b4f903,%eax
    1715:	08 00                	or     %al,(%eax)
    1717:	0c d3                	or     $0xd3,%al
    1719:	00 00                	add    %al,(%eax)
    171b:	00 05 01 ac 05 00    	add    %al,0x5ac01
    1721:	00 01                	add    %al,(%ecx)
    1723:	49                   	dec    %ecx
    1724:	01 25 00 00 00 48    	add    %esp,0x48000000
    172a:	9e                   	sahf   
    172b:	04 08                	add    $0x8,%al
    172d:	12 9f 04 08 5c 06    	adc    0x65c0804(%edi),%bl
    1733:	00 00                	add    %al,(%eax)
    1735:	4e                   	dec    %esi
    1736:	02 00                	add    (%eax),%al
    1738:	00 10                	add    %dl,(%eax)
    173a:	61                   	popa   
    173b:	5f                   	pop    %edi
    173c:	00 01                	add    %al,(%ecx)
    173e:	49                   	dec    %ecx
    173f:	4e                   	dec    %esi
    1740:	02 00                	add    (%eax),%al
    1742:	00 02                	add    %al,(%edx)
    1744:	91                   	xchg   %eax,%ecx
    1745:	00 10                	add    %dl,(%eax)
    1747:	62 5f 00             	bound  %ebx,0x0(%edi)
    174a:	01 49 4e             	add    %ecx,0x4e(%ecx)
    174d:	02 00                	add    (%eax),%al
    174f:	00 02                	add    %al,(%edx)
    1751:	91                   	xchg   %eax,%ecx
    1752:	04 07                	add    $0x7,%al
    1754:	61                   	popa   
    1755:	00 01                	add    %al,(%ecx)
    1757:	4b                   	dec    %ebx
    1758:	c8 00 00 00          	enter  $0x0,$0x0
    175c:	02 91 68 07 62 00    	add    0x620768(%ecx),%dl
    1762:	01 4c c8 00          	add    %ecx,0x0(%eax,%ecx,8)
    1766:	00 00                	add    %al,(%eax)
    1768:	02 91 6c 08 0d 04    	add    0x40d086c(%ecx),%dl
    176e:	00 00                	add    %al,(%eax)
    1770:	59                   	pop    %ecx
    1771:	02 00                	add    (%eax),%al
    1773:	00 01                	add    %al,(%ecx)
    1775:	05 03 f2 b4 04       	add    $0x4b4f203,%eax
    177a:	08 00                	or     %al,(%eax)
    177c:	0a 04 54             	or     (%esp,%edx,2),%al
    177f:	02 00                	add    (%eax),%al
    1781:	00 0c e6             	add    %cl,(%esi,%eiz,8)
    1784:	00 00                	add    %al,(%eax)
    1786:	00 0c d3             	add    %cl,(%ebx,%edx,8)
    1789:	00 00                	add    %al,(%eax)
    178b:	00 05 01 4e 05 00    	add    %al,0x54e01
    1791:	00 01                	add    %al,(%ecx)
    1793:	5e                   	pop    %esi
    1794:	01 b2 00 00 00 12    	add    %esi,0x12000000(%edx)
    179a:	9f                   	lahf   
    179b:	04 08                	add    $0x8,%al
    179d:	8c 9f 04 08 88 06    	mov    %ds,0x6880804(%edi)
    17a3:	00 00                	add    %al,(%eax)
    17a5:	d1 02                	roll   (%edx)
    17a7:	00 00                	add    %al,(%eax)
    17a9:	06                   	push   %es
    17aa:	61                   	popa   
    17ab:	05 00 00 01 5e       	add    $0x5e010000,%eax
    17b0:	b4 00                	mov    $0x0,%ah
    17b2:	00 00                	add    %al,(%eax)
    17b4:	02 91 00 10 63 68    	add    0x68631000(%ecx),%dl
    17ba:	5f                   	pop    %edi
    17bb:	00 01                	add    %al,(%ecx)
    17bd:	5e                   	pop    %esi
    17be:	25 00 00 00 02       	and    $0x2000000,%eax
    17c3:	91                   	xchg   %eax,%ecx
    17c4:	04 06                	add    $0x6,%al
    17c6:	65 01 00             	add    %eax,%gs:(%eax)
    17c9:	00 01                	add    %al,(%ecx)
    17cb:	5e                   	pop    %esi
    17cc:	2c 00                	sub    $0x0,%al
    17ce:	00 00                	add    %al,(%eax)
    17d0:	02 91 08 11 83 01    	add    0x1831108(%ecx),%dl
    17d6:	00 00                	add    %al,(%eax)
    17d8:	01 60 c8             	add    %esp,-0x38(%eax)
    17db:	00 00                	add    %al,(%eax)
    17dd:	00 02                	add    %al,(%edx)
    17df:	91                   	xchg   %eax,%ecx
    17e0:	68 07 63 68 00       	push   $0x686307
    17e5:	01 61 c1             	add    %esp,-0x3f(%ecx)
    17e8:	00 00                	add    %al,(%eax)
    17ea:	00 02                	add    %al,(%edx)
    17ec:	91                   	xchg   %eax,%ecx
    17ed:	6f                   	outsl  %ds:(%esi),(%dx)
    17ee:	08 0d 04 00 00 d1    	or     %cl,0xd1000004
    17f4:	02 00                	add    (%eax),%al
    17f6:	00 01                	add    %al,(%ecx)
    17f8:	05 03 eb b4 04       	add    $0x4b4eb03,%eax
    17fd:	08 00                	or     %al,(%eax)
    17ff:	0c d3                	or     $0xd3,%al
    1801:	00 00                	add    %al,(%eax)
    1803:	00 05 01 fd 04 00    	add    %al,0x4fd01
    1809:	00 01                	add    %al,(%ecx)
    180b:	71 01                	jno    180e <__executable_start-0x80468c6>
    180d:	2b 03                	sub    (%ebx),%eax
    180f:	00 00                	add    %al,(%eax)
    1811:	8c 9f 04 08 f3 9f    	mov    %ds,-0x600cf7fc(%edi)
    1817:	04 08                	add    $0x8,%al
    1819:	b4 06                	mov    $0x6,%ah
    181b:	00 00                	add    %al,(%eax)
    181d:	2b 03                	sub    (%ebx),%eax
    181f:	00 00                	add    %al,(%eax)
    1821:	06                   	push   %es
    1822:	a2 04 00 00 01       	mov    %al,0x1000004
    1827:	71 4e                	jno    1877 <__executable_start-0x804685d>
    1829:	02 00                	add    (%eax),%al
    182b:	00 02                	add    %al,(%edx)
    182d:	91                   	xchg   %eax,%ecx
    182e:	00 10                	add    %dl,(%eax)
    1830:	63 5f 00             	arpl   %bx,0x0(%edi)
    1833:	01 71 25             	add    %esi,0x25(%ecx)
    1836:	00 00                	add    %al,(%eax)
    1838:	00 02                	add    %al,(%edx)
    183a:	91                   	xchg   %eax,%ecx
    183b:	04 07                	add    $0x7,%al
    183d:	63 00                	arpl   %ax,(%eax)
    183f:	01 73 e6             	add    %esi,-0x1a(%ebx)
    1842:	00 00                	add    %al,(%eax)
    1844:	00 02                	add    %al,(%edx)
    1846:	91                   	xchg   %eax,%ecx
    1847:	6f                   	outsl  %ds:(%esi),(%dx)
    1848:	08 0d 04 00 00 31    	or     %cl,0x31000004
    184e:	03 00                	add    (%eax),%eax
    1850:	00 01                	add    %al,(%ecx)
    1852:	05 03 e4 b4 04       	add    $0x4b4e403,%eax
    1857:	08 00                	or     %al,(%eax)
    1859:	0a 04 e6             	or     (%esi,%eiz,8),%al
    185c:	00 00                	add    %al,(%eax)
    185e:	00 0c d3             	add    %cl,(%ebx,%edx,8)
    1861:	00 00                	add    %al,(%eax)
    1863:	00 05 01 68 05 00    	add    %al,0x56801
    1869:	00 01                	add    %al,(%ecx)
    186b:	83 01 2c             	addl   $0x2c,(%ecx)
    186e:	00 00                	add    %al,(%eax)
    1870:	00 f3                	add    %dh,%bl
    1872:	9f                   	lahf   
    1873:	04 08                	add    $0x8,%al
    1875:	40                   	inc    %eax
    1876:	a0 04 08 e0 06       	mov    0x6e00804,%al
    187b:	00 00                	add    %al,(%eax)
    187d:	7e 03                	jle    1882 <__executable_start-0x8046852>
    187f:	00 00                	add    %al,(%eax)
    1881:	06                   	push   %es
    1882:	a2 04 00 00 01       	mov    %al,0x1000004
    1887:	83 4e 02 00          	orl    $0x0,0x2(%esi)
    188b:	00 02                	add    %al,(%edx)
    188d:	91                   	xchg   %eax,%ecx
    188e:	00 06                	add    %al,(%esi)
    1890:	39 05 00 00 01 83    	cmp    %eax,0x83010000
    1896:	4e                   	dec    %esi
    1897:	02 00                	add    (%eax),%al
    1899:	00 02                	add    %al,(%edx)
    189b:	91                   	xchg   %eax,%ecx
    189c:	04 11                	add    $0x11,%al
    189e:	cc                   	int3   
    189f:	04 00                	add    $0x0,%al
    18a1:	00 01                	add    %al,(%ecx)
    18a3:	85 2c 00             	test   %ebp,(%eax,%eax,1)
    18a6:	00 00                	add    %al,(%eax)
    18a8:	02 91 6c 00 05 01    	add    0x105006c(%ecx),%dl
    18ae:	46                   	inc    %esi
    18af:	05 00 00 01 91       	add    $0x91010000,%eax
    18b4:	01 2b                	add    %ebp,(%ebx)
    18b6:	03 00                	add    (%eax),%eax
    18b8:	00 40 a0             	add    %al,-0x60(%eax)
    18bb:	04 08                	add    $0x8,%al
    18bd:	7e a0                	jle    185f <__executable_start-0x8046875>
    18bf:	04 08                	add    $0x8,%al
    18c1:	0c 07                	or     $0x7,%al
    18c3:	00 00                	add    %al,(%eax)
    18c5:	b8 03 00 00 06       	mov    $0x6000003,%eax
    18ca:	a2 04 00 00 01       	mov    %al,0x1000004
    18cf:	91                   	xchg   %eax,%ecx
    18d0:	4e                   	dec    %esi
    18d1:	02 00                	add    (%eax),%al
    18d3:	00 02                	add    %al,(%edx)
    18d5:	91                   	xchg   %eax,%ecx
    18d6:	00 06                	add    %al,(%esi)
    18d8:	39 05 00 00 01 91    	cmp    %eax,0x91010000
    18de:	4e                   	dec    %esi
    18df:	02 00                	add    (%eax),%al
    18e1:	00 02                	add    %al,(%edx)
    18e3:	91                   	xchg   %eax,%ecx
    18e4:	04 00                	add    $0x0,%al
    18e6:	05 01 f4 05 00       	add    $0x5f401,%eax
    18eb:	00 01                	add    %al,(%ecx)
    18ed:	9c                   	pushf  
    18ee:	01 2b                	add    %ebp,(%ebx)
    18f0:	03 00                	add    (%eax),%eax
    18f2:	00 7e a0             	add    %bh,-0x60(%esi)
    18f5:	04 08                	add    $0x8,%al
    18f7:	b7 a0                	mov    $0xa0,%bh
    18f9:	04 08                	add    $0x8,%al
    18fb:	38 07                	cmp    %al,(%edi)
    18fd:	00 00                	add    %al,(%eax)
    18ff:	09 04 00             	or     %eax,(%eax,%eax,1)
    1902:	00 06                	add    %al,(%esi)
    1904:	a2 04 00 00 01       	mov    %al,0x1000004
    1909:	9c                   	pushf  
    190a:	4e                   	dec    %esi
    190b:	02 00                	add    (%eax),%al
    190d:	00 02                	add    %al,(%edx)
    190f:	91                   	xchg   %eax,%ecx
    1910:	00 10                	add    %dl,(%eax)
    1912:	63 5f 00             	arpl   %bx,0x0(%edi)
    1915:	01 9c 25 00 00 00 02 	add    %ebx,0x2000000(%ebp,%eiz,1)
    191c:	91                   	xchg   %eax,%ecx
    191d:	04 07                	add    $0x7,%al
    191f:	63 00                	arpl   %ax,(%eax)
    1921:	01 9e e6 00 00 00    	add    %ebx,0xe6(%esi)
    1927:	02 91 73 07 70 00    	add    0x700773(%ecx),%dl
    192d:	01 9f 4e 02 00 00    	add    %ebx,0x24e(%edi)
    1933:	02 91 74 00 05 01    	add    0x1050074(%ecx),%dl
    1939:	ba 05 00 00 01       	mov    $0x1000005,%edx
    193e:	aa                   	stos   %al,%es:(%edi)
    193f:	01 2c 00             	add    %ebp,(%eax,%eax,1)
    1942:	00 00                	add    %al,(%eax)
    1944:	b7 a0                	mov    $0xa0,%bh
    1946:	04 08                	add    $0x8,%al
    1948:	04 a1                	add    $0xa1,%al
    194a:	04 08                	add    $0x8,%al
    194c:	64                   	fs
    194d:	07                   	pop    %es
    194e:	00 00                	add    %al,(%eax)
    1950:	51                   	push   %ecx
    1951:	04 00                	add    $0x0,%al
    1953:	00 06                	add    %al,(%esi)
    1955:	a2 04 00 00 01       	mov    %al,0x1000004
    195a:	aa                   	stos   %al,%es:(%edi)
    195b:	4e                   	dec    %esi
    195c:	02 00                	add    (%eax),%al
    195e:	00 02                	add    %al,(%edx)
    1960:	91                   	xchg   %eax,%ecx
    1961:	00 06                	add    %al,(%esi)
    1963:	70 05                	jo     196a <__executable_start-0x804676a>
    1965:	00 00                	add    %al,(%eax)
    1967:	01 aa 4e 02 00 00    	add    %ebp,0x24e(%edx)
    196d:	02 91 04 11 cc 04    	add    0x4cc1104(%ecx),%dl
    1973:	00 00                	add    %al,(%eax)
    1975:	01 ac 2c 00 00 00 02 	add    %ebp,0x2000000(%esp,%ebp,1)
    197c:	91                   	xchg   %eax,%ecx
    197d:	6c                   	insb   (%dx),%es:(%edi)
    197e:	00 05 01 db 05 00    	add    %al,0x5db01
    1984:	00 01                	add    %al,(%ecx)
    1986:	b8 01 2b 03 00       	mov    $0x32b01,%eax
    198b:	00 04 a1             	add    %al,(%ecx,%eiz,4)
    198e:	04 08                	add    $0x8,%al
    1990:	80 a1 04 08 90 07 00 	andb   $0x0,0x7900804(%ecx)
    1997:	00 bd 04 00 00 06    	add    %bh,0x6000004(%ebp)
    199d:	f4                   	hlt    
    199e:	04 00                	add    $0x0,%al
    19a0:	00 01                	add    %al,(%ecx)
    19a2:	b8 4e 02 00 00       	mov    $0x24e,%eax
    19a7:	02 91 00 06 55 05    	add    0x5550600(%ecx),%dl
    19ad:	00 00                	add    %al,(%eax)
    19af:	01 b8 4e 02 00 00    	add    %edi,0x24e(%eax)
    19b5:	02 91 04 11 c8 05    	add    0x5c81104(%ecx),%dl
    19bb:	00 00                	add    %al,(%eax)
    19bd:	01 ba 2c 00 00 00    	add    %edi,0x2c(%edx)
    19c3:	02 91 64 11 a1 05    	add    0x5a11164(%ecx),%dl
    19c9:	00 00                	add    %al,(%eax)
    19cb:	01 bb 2c 00 00 00    	add    %edi,0x2c(%ebx)
    19d1:	02 91 68 12 2e a1    	add    -0x5ed1ed98(%ecx),%dl
    19d7:	04 08                	add    $0x8,%al
    19d9:	79 a1                	jns    197c <__executable_start-0x8046758>
    19db:	04 08                	add    $0x8,%al
    19dd:	07                   	pop    %es
    19de:	69 00 01 bf 2c 00    	imul   $0x2cbf01,(%eax),%eax
    19e4:	00 00                	add    %al,(%eax)
    19e6:	02 91 6c 00 00 05    	add    0x500006c(%ecx),%dl
    19ec:	01 eb                	add    %ebp,%ebx
    19ee:	05 00 00 01 eb       	add    $0xeb010000,%eax
    19f3:	01 2b                	add    %ebp,(%ebx)
    19f5:	03 00                	add    (%eax),%eax
    19f7:	00 80 a1 04 08 bc    	add    %al,-0x43f7fb5f(%eax)
    19fd:	a2 04 08 bc 07       	mov    %al,0x7bc0804
    1a02:	00 00                	add    %al,(%eax)
    1a04:	21 05 00 00 10 73    	and    %eax,0x73100000
    1a0a:	00 01                	add    %al,(%ecx)
    1a0c:	eb 2b                	jmp    1a39 <__executable_start-0x804669b>
    1a0e:	03 00                	add    (%eax),%eax
    1a10:	00 02                	add    %al,(%edx)
    1a12:	91                   	xchg   %eax,%ecx
    1a13:	00 06                	add    %al,(%esi)
    1a15:	2e                   	cs
    1a16:	05 00 00 01 eb       	add    $0xeb010000,%eax
    1a1b:	4e                   	dec    %esi
    1a1c:	02 00                	add    (%eax),%al
    1a1e:	00 02                	add    %al,(%edx)
    1a20:	91                   	xchg   %eax,%ecx
    1a21:	04 06                	add    $0x6,%al
    1a23:	75 05                	jne    1a2a <__executable_start-0x80466aa>
    1a25:	00 00                	add    %al,(%eax)
    1a27:	01 eb                	add    %ebp,%ebx
    1a29:	21 05 00 00 02 91    	and    %eax,0x91020000
    1a2f:	08 11                	or     %dl,(%ecx)
    1a31:	d5 05                	aad    $0x5
    1a33:	00 00                	add    %al,(%eax)
    1a35:	01 ed                	add    %ebp,%ebp
    1a37:	2b 03                	sub    (%ebx),%eax
    1a39:	00 00                	add    %al,(%eax)
    1a3b:	02 91 6c 08 0d 04    	add    0x40d086c(%ecx),%dl
    1a41:	00 00                	add    %al,(%eax)
    1a43:	37                   	aaa    
    1a44:	05 00 00 01 05       	add    $0x5010000,%eax
    1a49:	03 db                	add    %ebx,%ebx
    1a4b:	b4 04                	mov    $0x4,%ah
    1a4d:	08 00                	or     %al,(%eax)
    1a4f:	0a 04 2b             	or     (%ebx,%ebp,1),%al
    1a52:	03 00                	add    (%eax),%eax
    1a54:	00 0d e6 00 00 00    	add    %cl,0xe6
    1a5a:	37                   	aaa    
    1a5b:	05 00 00 0e e3       	add    $0xe30e0000,%eax
    1a60:	00 00                	add    %al,(%eax)
    1a62:	00 08                	add    %cl,(%eax)
    1a64:	00 0c 27             	add    %cl,(%edi,%eiz,1)
    1a67:	05 00 00 13 01       	add    $0x1130000,%eax
    1a6c:	c1 05 00 00 01 17 01 	roll   $0x1,0x17010000
    1a73:	01 b2 00 00 00 bc    	add    %esi,-0x44000000(%edx)
    1a79:	a2 04 08 28 a3       	mov    %al,0xa3280804
    1a7e:	04 08                	add    $0x8,%al
    1a80:	e8 07 00 00 a7       	call   a7001a8c <test_name+0x9efb4b24>
    1a85:	05 00 00 14 5c       	add    $0x5c140000,%eax
    1a8a:	05 00 00 01 17       	add    $0x17010000,%eax
    1a8f:	01 b2 00 00 00 02    	add    %esi,0x2000000(%edx)
    1a95:	91                   	xchg   %eax,%ecx
    1a96:	00 14 40             	add    %dl,(%eax,%eax,2)
    1a99:	04 00                	add    $0x0,%al
    1a9b:	00 01                	add    %al,(%ecx)
    1a9d:	17                   	pop    %ss
    1a9e:	01 25 00 00 00 02    	add    %esp,0x2000000
    1aa4:	91                   	xchg   %eax,%ecx
    1aa5:	04 14                	add    $0x14,%al
    1aa7:	65 01 00             	add    %eax,%gs:(%eax)
    1aaa:	00 01                	add    %al,(%ecx)
    1aac:	17                   	pop    %ss
    1aad:	01 2c 00             	add    %ebp,(%eax,%eax,1)
    1ab0:	00 00                	add    %al,(%eax)
    1ab2:	02 91 08 15 64 73    	add    0x73641508(%ecx),%dl
    1ab8:	74 00                	je     1aba <__executable_start-0x804661a>
    1aba:	01 19                	add    %ebx,(%ecx)
    1abc:	01 bb 00 00 00 02    	add    %edi,0x2000000(%ebx)
    1ac2:	91                   	xchg   %eax,%ecx
    1ac3:	6c                   	insb   (%dx),%es:(%edi)
    1ac4:	08 0d 04 00 00 a7    	or     %cl,0xa7000004
    1aca:	05 00 00 01 05       	add    $0x5010000,%eax
    1acf:	03 d4                	add    %esp,%edx
    1ad1:	b4 04                	mov    $0x4,%ah
    1ad3:	08 00                	or     %al,(%eax)
    1ad5:	0c d3                	or     $0xd3,%al
    1ad7:	00 00                	add    %al,(%eax)
    1ad9:	00 13                	add    %dl,(%ebx)
    1adb:	01 1f                	add    %ebx,(%edi)
    1add:	05 00 00 01 25       	add    $0x25010000,%eax
    1ae2:	01 01                	add    %eax,(%ecx)
    1ae4:	2c 00                	sub    $0x0,%al
    1ae6:	00 00                	add    %al,(%eax)
    1ae8:	28 a3 04 08 84 a3    	sub    %ah,-0x5c7bf7fc(%ebx)
    1aee:	04 08                	add    $0x8,%al
    1af0:	14 08                	adc    $0x8,%al
    1af2:	00 00                	add    %al,(%eax)
    1af4:	f7 05 00 00 14 a2 04 	testl  $0x1000004,0xa2140000
    1afb:	00 00 01 
    1afe:	25 01 4e 02 00       	and    $0x24e01,%eax
    1b03:	00 02                	add    %al,(%edx)
    1b05:	91                   	xchg   %eax,%ecx
    1b06:	00 15 70 00 01 27    	add    %dl,0x27010070
    1b0c:	01 4e 02             	add    %ecx,0x2(%esi)
    1b0f:	00 00                	add    %al,(%eax)
    1b11:	02 91 6c 08 0d 04    	add    0x40d086c(%ecx),%dl
    1b17:	00 00                	add    %al,(%eax)
    1b19:	f7 05 00 00 01 05 03 	testl  $0x4b4cd03,0x5010000
    1b20:	cd b4 04 
    1b23:	08 00                	or     %al,(%eax)
    1b25:	0c d3                	or     $0xd3,%al
    1b27:	00 00                	add    %al,(%eax)
    1b29:	00 13                	add    %dl,(%ebx)
    1b2b:	01 86 05 00 00 01    	add    %eax,0x1000005(%esi)
    1b31:	33 01                	xor    (%ecx),%eax
    1b33:	01 2c 00             	add    %ebp,(%eax,%eax,1)
    1b36:	00 00                	add    %al,(%eax)
    1b38:	84 a3 04 08 b4 a3    	test   %ah,-0x5c4bf7fc(%ebx)
    1b3e:	04 08                	add    $0x8,%al
    1b40:	40                   	inc    %eax
    1b41:	08 00                	or     %al,(%eax)
    1b43:	00 48 06             	add    %cl,0x6(%eax)
    1b46:	00 00                	add    %al,(%eax)
    1b48:	14 a2                	adc    $0xa2,%al
    1b4a:	04 00                	add    $0x0,%al
    1b4c:	00 01                	add    %al,(%ecx)
    1b4e:	33 01                	xor    (%ecx),%eax
    1b50:	4e                   	dec    %esi
    1b51:	02 00                	add    (%eax),%al
    1b53:	00 02                	add    %al,(%edx)
    1b55:	91                   	xchg   %eax,%ecx
    1b56:	00 14 04             	add    %dl,(%esp,%eax,1)
    1b59:	05 00 00 01 33       	add    $0x33010000,%eax
    1b5e:	01 2c 00             	add    %ebp,(%eax,%eax,1)
    1b61:	00 00                	add    %al,(%eax)
    1b63:	02 91 04 16 cc 04    	add    0x4cc1604(%ecx),%dl
    1b69:	00 00                	add    %al,(%eax)
    1b6b:	01 35 01 2c 00 00    	add    %esi,0x2c01
    1b71:	00 02                	add    %al,(%edx)
    1b73:	91                   	xchg   %eax,%ecx
    1b74:	74 00                	je     1b76 <__executable_start-0x804655e>
    1b76:	13 01                	adc    (%ecx),%eax
    1b78:	26                   	es
    1b79:	05 00 00 01 46       	add    $0x46010000,%eax
    1b7e:	01 01                	add    %eax,(%ecx)
    1b80:	2c 00                	sub    $0x0,%al
    1b82:	00 00                	add    %al,(%eax)
    1b84:	b4 a3                	mov    $0xa3,%ah
    1b86:	04 08                	add    $0x8,%al
    1b88:	77 a4                	ja     1b2e <__executable_start-0x80465a6>
    1b8a:	04 08                	add    $0x8,%al
    1b8c:	6c                   	insb   (%dx),%es:(%edi)
    1b8d:	08 00                	or     %al,(%eax)
    1b8f:	00 cc                	add    %cl,%ah
    1b91:	06                   	push   %es
    1b92:	00 00                	add    %al,(%eax)
    1b94:	17                   	pop    %ss
    1b95:	64                   	fs
    1b96:	73 74                	jae    1c0c <__executable_start-0x80464c8>
    1b98:	00 01                	add    %al,(%ecx)
    1b9a:	46                   	inc    %esi
    1b9b:	01 2b                	add    %ebp,(%ebx)
    1b9d:	03 00                	add    (%eax),%eax
    1b9f:	00 02                	add    %al,(%edx)
    1ba1:	91                   	xchg   %eax,%ecx
    1ba2:	00 17                	add    %dl,(%edi)
    1ba4:	73 72                	jae    1c18 <__executable_start-0x80464bc>
    1ba6:	63 00                	arpl   %ax,(%eax)
    1ba8:	01 46 01             	add    %eax,0x1(%esi)
    1bab:	4e                   	dec    %esi
    1bac:	02 00                	add    (%eax),%al
    1bae:	00 02                	add    %al,(%edx)
    1bb0:	91                   	xchg   %eax,%ecx
    1bb1:	04 14                	add    $0x14,%al
    1bb3:	65 01 00             	add    %eax,%gs:(%eax)
    1bb6:	00 01                	add    %al,(%ecx)
    1bb8:	46                   	inc    %esi
    1bb9:	01 2c 00             	add    %ebp,(%eax,%eax,1)
    1bbc:	00 00                	add    %al,(%eax)
    1bbe:	02 91 08 16 12 05    	add    0x5121608(%ecx),%dl
    1bc4:	00 00                	add    %al,(%eax)
    1bc6:	01 48 01             	add    %ecx,0x1(%eax)
    1bc9:	2c 00                	sub    $0x0,%al
    1bcb:	00 00                	add    %al,(%eax)
    1bcd:	02 91 68 08 0d 04    	add    0x40d0868(%ecx),%dl
    1bd3:	00 00                	add    %al,(%eax)
    1bd5:	cc                   	int3   
    1bd6:	06                   	push   %es
    1bd7:	00 00                	add    %al,(%eax)
    1bd9:	01 05 03 c5 b4 04    	add    %eax,0x4b4c503
    1bdf:	08 12                	or     %dl,(%edx)
    1be1:	36 a4                	movsb  %ss:(%esi),%es:(%edi)
    1be3:	04 08                	add    $0x8,%al
    1be5:	72 a4                	jb     1b8b <__executable_start-0x8046549>
    1be7:	04 08                	add    $0x8,%al
    1be9:	16                   	push   %ss
    1bea:	3e                   	ds
    1beb:	05 00 00 01 50       	add    $0x50010000,%eax
    1bf0:	01 2c 00             	add    %ebp,(%eax,%eax,1)
    1bf3:	00 00                	add    %al,(%eax)
    1bf5:	02 91 6c 00 00 0c    	add    0xc00006c(%ecx),%dl
    1bfb:	66 01 00             	add    %ax,(%eax)
    1bfe:	00 13                	add    %dl,(%ebx)
    1c00:	01 7e 05             	add    %edi,0x5(%esi)
    1c03:	00 00                	add    %al,(%eax)
    1c05:	01 64 01 01          	add    %esp,0x1(%ecx,%eax,1)
    1c09:	2c 00                	sub    $0x0,%al
    1c0b:	00 00                	add    %al,(%eax)
    1c0d:	77 a4                	ja     1bb3 <__executable_start-0x8046521>
    1c0f:	04 08                	add    $0x8,%al
    1c11:	6a a5                	push   $0xffffffa5
    1c13:	04 08                	add    $0x8,%al
    1c15:	98                   	cwtl   
    1c16:	08 00                	or     %al,(%eax)
    1c18:	00 64 07 00          	add    %ah,0x0(%edi,%eax,1)
    1c1c:	00 17                	add    %dl,(%edi)
    1c1e:	64                   	fs
    1c1f:	73 74                	jae    1c95 <__executable_start-0x804643f>
    1c21:	00 01                	add    %al,(%ecx)
    1c23:	64 01 2b             	add    %ebp,%fs:(%ebx)
    1c26:	03 00                	add    (%eax),%eax
    1c28:	00 02                	add    %al,(%edx)
    1c2a:	91                   	xchg   %eax,%ecx
    1c2b:	00 17                	add    %dl,(%edi)
    1c2d:	73 72                	jae    1ca1 <__executable_start-0x8046433>
    1c2f:	63 00                	arpl   %ax,(%eax)
    1c31:	01 64 01 4e          	add    %esp,0x4e(%ecx,%eax,1)
    1c35:	02 00                	add    (%eax),%al
    1c37:	00 02                	add    %al,(%edx)
    1c39:	91                   	xchg   %eax,%ecx
    1c3a:	04 14                	add    $0x14,%al
    1c3c:	65 01 00             	add    %eax,%gs:(%eax)
    1c3f:	00 01                	add    %al,(%ecx)
    1c41:	64 01 2c 00          	add    %ebp,%fs:(%eax,%eax,1)
    1c45:	00 00                	add    %al,(%eax)
    1c47:	02 91 08 16 12 05    	add    0x5121608(%ecx),%dl
    1c4d:	00 00                	add    %al,(%eax)
    1c4f:	01 66 01             	add    %esp,0x1(%esi)
    1c52:	2c 00                	sub    $0x0,%al
    1c54:	00 00                	add    %al,(%eax)
    1c56:	02 91 64 16 3e 05    	add    0x53e1664(%ecx),%dl
    1c5c:	00 00                	add    %al,(%eax)
    1c5e:	01 66 01             	add    %esp,0x1(%esi)
    1c61:	2c 00                	sub    $0x0,%al
    1c63:	00 00                	add    %al,(%eax)
    1c65:	02 91 68 08 0d 04    	add    0x40d0868(%ecx),%dl
    1c6b:	00 00                	add    %al,(%eax)
    1c6d:	64                   	fs
    1c6e:	07                   	pop    %es
    1c6f:	00 00                	add    %al,(%eax)
    1c71:	01 05 03 bd b4 04    	add    %eax,0x4b4bd03
    1c77:	08 12                	or     %dl,(%edx)
    1c79:	12 a5 04 08 5f a5    	adc    -0x5aa0f7fc(%ebp),%ah
    1c7f:	04 08                	add    $0x8,%al
    1c81:	16                   	push   %ss
    1c82:	e2 05                	loop   1c89 <__executable_start-0x804644b>
    1c84:	00 00                	add    %al,(%eax)
    1c86:	01 6f 01             	add    %ebp,0x1(%edi)
    1c89:	2c 00                	sub    $0x0,%al
    1c8b:	00 00                	add    %al,(%eax)
    1c8d:	02 91 6c 00 00 0c    	add    0xc00006c(%ecx),%dl
    1c93:	66 01 00             	add    %ax,(%eax)
    1c96:	00 00                	add    %al,(%eax)
    1c98:	66 03 00             	add    (%eax),%ax
    1c9b:	00 02                	add    %al,(%edx)
    1c9d:	00 82 08 00 00 04    	add    %al,0x4000008(%edx)
    1ca3:	01 45 00             	add    %eax,0x0(%ebp)
    1ca6:	00 00                	add    %al,(%eax)
    1ca8:	01 21                	add    %esp,(%ecx)
    1caa:	06                   	push   %es
    1cab:	00 00                	add    %al,(%eax)
    1cad:	73 00                	jae    1caf <__executable_start-0x8046425>
    1caf:	00 00                	add    %al,(%eax)
    1cb1:	6c                   	insb   (%dx),%es:(%edi)
    1cb2:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    1cb3:	04 08                	add    $0x8,%al
    1cb5:	39 aa 04 08 2a 07    	cmp    %ebp,0x72a0804(%edx)
    1cbb:	00 00                	add    %al,(%eax)
    1cbd:	02 01                	add    (%ecx),%al
    1cbf:	06                   	push   %es
    1cc0:	10 00                	adc    %al,(%eax)
    1cc2:	00 00                	add    %al,(%eax)
    1cc4:	02 02                	add    (%edx),%al
    1cc6:	05 56 00 00 00       	add    $0x56,%eax
    1ccb:	03 13                	add    (%ebx),%edx
    1ccd:	01 00                	add    %eax,(%eax)
    1ccf:	00 02                	add    %al,(%edx)
    1cd1:	0c 3e                	or     $0x3e,%al
    1cd3:	00 00                	add    %al,(%eax)
    1cd5:	00 04 04             	add    %al,(%esp,%eax,1)
    1cd8:	05 69 6e 74 00       	add    $0x746e69,%eax
    1cdd:	03 17                	add    (%edi),%edx
    1cdf:	03 00                	add    (%eax),%eax
    1ce1:	00 02                	add    %al,(%edx)
    1ce3:	10 50 00             	adc    %dl,0x0(%eax)
    1ce6:	00 00                	add    %al,(%eax)
    1ce8:	02 08                	add    (%eax),%cl
    1cea:	05 00 00 00 00       	add    $0x0,%eax
    1cef:	02 01                	add    (%ecx),%al
    1cf1:	08 0e                	or     %cl,(%esi)
    1cf3:	00 00                	add    %al,(%eax)
    1cf5:	00 02                	add    %al,(%edx)
    1cf7:	02 07                	add    (%edi),%al
    1cf9:	60                   	pusha  
    1cfa:	00 00                	add    %al,(%eax)
    1cfc:	00 03                	add    %al,(%ebx)
    1cfe:	12 01                	adc    (%ecx),%al
    1d00:	00 00                	add    %al,(%eax)
    1d02:	02 1a                	add    (%edx),%bl
    1d04:	70 00                	jo     1d06 <__executable_start-0x80463ce>
    1d06:	00 00                	add    %al,(%eax)
    1d08:	02 04 07             	add    (%edi,%eax,1),%al
    1d0b:	26 00 00             	add    %al,%es:(%eax)
    1d0e:	00 03                	add    %al,(%ebx)
    1d10:	16                   	push   %ss
    1d11:	03 00                	add    (%eax),%eax
    1d13:	00 02                	add    %al,(%edx)
    1d15:	1d 82 00 00 00       	sbb    $0x82,%eax
    1d1a:	02 08                	add    (%eax),%cl
    1d1c:	07                   	pop    %es
    1d1d:	1c 00                	sbb    $0x0,%al
    1d1f:	00 00                	add    %al,(%eax)
    1d21:	05 1c 06 00 00       	add    $0x61c,%eax
    1d26:	01 1a                	add    %ebx,(%edx)
    1d28:	01 65 00             	add    %esp,0x0(%ebp)
    1d2b:	00 00                	add    %al,(%eax)
    1d2d:	6c                   	insb   (%dx),%es:(%edi)
    1d2e:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    1d2f:	04 08                	add    $0x8,%al
    1d31:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    1d32:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    1d33:	04 08                	add    $0x8,%al
    1d35:	c4 08                	les    (%eax),%ecx
    1d37:	00 00                	add    %al,(%eax)
    1d39:	f0 00 00             	lock add %al,(%eax)
    1d3c:	00 06                	add    %al,(%esi)
    1d3e:	6e                   	outsb  %ds:(%esi),(%dx)
    1d3f:	00 01                	add    %al,(%ecx)
    1d41:	1a 77 00             	sbb    0x0(%edi),%dh
    1d44:	00 00                	add    %al,(%eax)
    1d46:	02 91 60 06 64 00    	add    0x640660(%ecx),%dl
    1d4c:	01 1a                	add    %ebx,(%edx)
    1d4e:	65 00 00             	add    %al,%gs:(%eax)
    1d51:	00 02                	add    %al,(%edx)
    1d53:	91                   	xchg   %eax,%ecx
    1d54:	08 07                	or     %al,(%edi)
    1d56:	6e                   	outsb  %ds:(%esi),(%dx)
    1d57:	31 00                	xor    %eax,(%eax)
    1d59:	01 1c 65 00 00 00 02 	add    %ebx,0x2000000(,%eiz,2)
    1d60:	91                   	xchg   %eax,%ecx
    1d61:	68 07 6e 30 00       	push   $0x306e07
    1d66:	01 1d 65 00 00 00    	add    %ebx,0x65
    1d6c:	02 91 6c 07 71 00    	add    0x71076c(%ecx),%dl
    1d72:	01 1e                	add    %ebx,(%esi)
    1d74:	65 00 00             	add    %al,%gs:(%eax)
    1d77:	00 02                	add    %al,(%edx)
    1d79:	91                   	xchg   %eax,%ecx
    1d7a:	70 07                	jo     1d83 <__executable_start-0x8046351>
    1d7c:	72 00                	jb     1d7e <__executable_start-0x8046356>
    1d7e:	01 1e                	add    %ebx,(%esi)
    1d80:	65 00 00             	add    %al,%gs:(%eax)
    1d83:	00 02                	add    %al,(%edx)
    1d85:	91                   	xchg   %eax,%ecx
    1d86:	74 00                	je     1d88 <__executable_start-0x804634c>
    1d88:	08 6e 6c             	or     %ch,0x6c(%esi)
    1d8b:	7a 00                	jp     1d8d <__executable_start-0x8046347>
    1d8d:	01 2a                	add    %ebp,(%edx)
    1d8f:	01 3e                	add    %edi,(%esi)
    1d91:	00 00                	add    %al,(%eax)
    1d93:	00 a5 a5 04 08 06    	add    %ah,0x60804a5(%ebp)
    1d99:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1d9a:	04 08                	add    $0x8,%al
    1d9c:	f0 08 00             	lock or %al,(%eax)
    1d9f:	00 25 01 00 00 06    	add    %ah,0x6000001
    1da5:	78 00                	js     1da7 <__executable_start-0x804632d>
    1da7:	01 2a                	add    %ebp,(%edx)
    1da9:	65 00 00             	add    %al,%gs:(%eax)
    1dac:	00 02                	add    %al,(%edx)
    1dae:	91                   	xchg   %eax,%ecx
    1daf:	00 07                	add    %al,(%edi)
    1db1:	6e                   	outsb  %ds:(%esi),(%dx)
    1db2:	00 01                	add    %al,(%ecx)
    1db4:	31 3e                	xor    %edi,(%esi)
    1db6:	00 00                	add    %al,(%eax)
    1db8:	00 02                	add    %al,(%edx)
    1dba:	91                   	xchg   %eax,%ecx
    1dbb:	74 00                	je     1dbd <__executable_start-0x8046317>
    1dbd:	05 41 06 00 00       	add    $0x641,%eax
    1dc2:	01 4e 01             	add    %ecx,0x1(%esi)
    1dc5:	77 00                	ja     1dc7 <__executable_start-0x804630d>
    1dc7:	00 00                	add    %al,(%eax)
    1dc9:	06                   	push   %es
    1dca:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1dcb:	04 08                	add    $0x8,%al
    1dcd:	d0 a7 04 08 1c 09    	shlb   0x91c0804(%edi)
    1dd3:	00 00                	add    %al,(%eax)
    1dd5:	cc                   	int3   
    1dd6:	01 00                	add    %eax,(%eax)
    1dd8:	00 06                	add    %al,(%esi)
    1dda:	6e                   	outsb  %ds:(%esi),(%dx)
    1ddb:	00 01                	add    %al,(%ecx)
    1ddd:	4e                   	dec    %esi
    1dde:	77 00                	ja     1de0 <__executable_start-0x80462f4>
    1de0:	00 00                	add    %al,(%eax)
    1de2:	03 91 b0 7f 06 64    	add    0x64067fb0(%ecx),%edx
    1de8:	00 01                	add    %al,(%ecx)
    1dea:	4e                   	dec    %esi
    1deb:	77 00                	ja     1ded <__executable_start-0x80462e7>
    1ded:	00 00                	add    %al,(%eax)
    1def:	03 91 a8 7f 09 3b    	add    0x3b097fa8(%ecx),%edx
    1df5:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    1df6:	04 08                	add    $0x8,%al
    1df8:	dd a6 04 08 9c 01    	frstor 0x19c0804(%esi)
    1dfe:	00 00                	add    %al,(%eax)
    1e00:	07                   	pop    %es
    1e01:	62 00                	bound  %eax,(%eax)
    1e03:	01 6a 77             	add    %ebp,0x77(%edx)
    1e06:	00 00                	add    %al,(%eax)
    1e08:	00 02                	add    %al,(%edx)
    1e0a:	91                   	xchg   %eax,%ecx
    1e0b:	40                   	inc    %eax
    1e0c:	07                   	pop    %es
    1e0d:	6e                   	outsb  %ds:(%esi),(%dx)
    1e0e:	31 00                	xor    %eax,(%eax)
    1e10:	01 6b 65             	add    %ebp,0x65(%ebx)
    1e13:	00 00                	add    %al,(%eax)
    1e15:	00 02                	add    %al,(%edx)
    1e17:	91                   	xchg   %eax,%ecx
    1e18:	4c                   	dec    %esp
    1e19:	07                   	pop    %es
    1e1a:	6e                   	outsb  %ds:(%esi),(%dx)
    1e1b:	30 00                	xor    %al,(%eax)
    1e1d:	01 6c 65 00          	add    %ebp,0x0(%ebp,%eiz,2)
    1e21:	00 00                	add    %al,(%eax)
    1e23:	02 91 50 07 64 30    	add    0x30640750(%ecx),%dl
    1e29:	00 01                	add    %al,(%ecx)
    1e2b:	6d                   	insl   (%dx),%es:(%edi)
    1e2c:	65 00 00             	add    %al,%gs:(%eax)
    1e2f:	00 02                	add    %al,(%edx)
    1e31:	91                   	xchg   %eax,%ecx
    1e32:	54                   	push   %esp
    1e33:	00 0a                	add    %cl,(%edx)
    1e35:	01 a7 04 08 c8 a7    	add    %esp,-0x5837f7fc(%edi)
    1e3b:	04 08                	add    $0x8,%al
    1e3d:	07                   	pop    %es
    1e3e:	64 31 00             	xor    %eax,%fs:(%eax)
    1e41:	01 79 65             	add    %edi,0x65(%ecx)
    1e44:	00 00                	add    %al,(%eax)
    1e46:	00 02                	add    %al,(%edx)
    1e48:	91                   	xchg   %eax,%ecx
    1e49:	58                   	pop    %eax
    1e4a:	07                   	pop    %es
    1e4b:	73 00                	jae    1e4d <__executable_start-0x8046287>
    1e4d:	01 7a 3e             	add    %edi,0x3e(%edx)
    1e50:	00 00                	add    %al,(%eax)
    1e52:	00 02                	add    %al,(%edx)
    1e54:	91                   	xchg   %eax,%ecx
    1e55:	5c                   	pop    %esp
    1e56:	07                   	pop    %es
    1e57:	71 00                	jno    1e59 <__executable_start-0x804627b>
    1e59:	01 7b 77             	add    %edi,0x77(%ebx)
    1e5c:	00 00                	add    %al,(%eax)
    1e5e:	00 02                	add    %al,(%edx)
    1e60:	91                   	xchg   %eax,%ecx
    1e61:	60                   	pusha  
    1e62:	00 00                	add    %al,(%eax)
    1e64:	05 52 06 00 00       	add    $0x652,%eax
    1e69:	01 84 01 65 00 00 00 	add    %eax,0x65(%ecx,%eax,1)
    1e70:	d0 a7 04 08 26 a8    	shlb   -0x57d9f7fc(%edi)
    1e76:	04 08                	add    $0x8,%al
    1e78:	48                   	dec    %eax
    1e79:	09 00                	or     %eax,(%eax)
    1e7b:	00 01                	add    %al,(%ecx)
    1e7d:	02 00                	add    (%eax),%al
    1e7f:	00 06                	add    %al,(%esi)
    1e81:	6e                   	outsb  %ds:(%esi),(%dx)
    1e82:	00 01                	add    %al,(%ecx)
    1e84:	84 77 00             	test   %dh,0x0(%edi)
    1e87:	00 00                	add    %al,(%eax)
    1e89:	02 91 68 06 64 00    	add    0x640668(%ecx),%dl
    1e8f:	01 84 77 00 00 00 02 	add    %eax,0x2000000(%edi,%esi,2)
    1e96:	91                   	xchg   %eax,%ecx
    1e97:	60                   	pusha  
    1e98:	00 05 5f 06 00 00    	add    %al,0x65f
    1e9e:	01 8c 01 45 00 00 00 	add    %ecx,0x45(%ecx,%eax,1)
    1ea5:	26                   	es
    1ea6:	a8 04                	test   $0x4,%al
    1ea8:	08 d9                	or     %bl,%cl
    1eaa:	a8 04                	test   $0x4,%al
    1eac:	08 74 09 00          	or     %dh,0x0(%ecx,%ecx,1)
    1eb0:	00 60 02             	add    %ah,0x2(%eax)
    1eb3:	00 00                	add    %al,(%eax)
    1eb5:	06                   	push   %es
    1eb6:	6e                   	outsb  %ds:(%esi),(%dx)
    1eb7:	00 01                	add    %al,(%ecx)
    1eb9:	8c 45 00             	mov    %es,0x0(%ebp)
    1ebc:	00 00                	add    %al,(%eax)
    1ebe:	02 91 50 06 64 00    	add    0x640650(%ecx),%dl
    1ec4:	01 8c 45 00 00 00 02 	add    %ecx,0x2000000(%ebp,%eax,2)
    1ecb:	91                   	xchg   %eax,%ecx
    1ecc:	48                   	dec    %eax
    1ecd:	0b fc                	or     %esp,%edi
    1ecf:	05 00 00 01 8e       	add    $0x8e010000,%eax
    1ed4:	77 00                	ja     1ed6 <__executable_start-0x80461fe>
    1ed6:	00 00                	add    %al,(%eax)
    1ed8:	02 91 60 0b 66 06    	add    0x6660b60(%ecx),%dl
    1ede:	00 00                	add    %al,(%eax)
    1ee0:	01 8f 77 00 00 00    	add    %ecx,0x77(%edi)
    1ee6:	02 91 68 0b 59 06    	add    0x6590b68(%ecx),%dl
    1eec:	00 00                	add    %al,(%eax)
    1eee:	01 90 77 00 00 00    	add    %edx,0x77(%eax)
    1ef4:	02 91 70 00 05 15    	add    0x15050070(%ecx),%dl
    1efa:	06                   	push   %es
    1efb:	00 00                	add    %al,(%eax)
    1efd:	01 97 01 33 00 00    	add    %edx,0x3301(%edi)
    1f03:	00 d9                	add    %bl,%cl
    1f05:	a8 04                	test   $0x4,%al
    1f07:	08 2f                	or     %ch,(%edi)
    1f09:	a9 04 08 a0 09       	test   $0x9a00804,%eax
    1f0e:	00 00                	add    %al,(%eax)
    1f10:	95                   	xchg   %eax,%ebp
    1f11:	02 00                	add    (%eax),%al
    1f13:	00 06                	add    %al,(%esi)
    1f15:	6e                   	outsb  %ds:(%esi),(%dx)
    1f16:	00 01                	add    %al,(%ecx)
    1f18:	97                   	xchg   %eax,%edi
    1f19:	45                   	inc    %ebp
    1f1a:	00 00                	add    %al,(%eax)
    1f1c:	00 02                	add    %al,(%edx)
    1f1e:	91                   	xchg   %eax,%ecx
    1f1f:	68 06 64 00 01       	push   $0x1006406
    1f24:	97                   	xchg   %eax,%edi
    1f25:	45                   	inc    %ebp
    1f26:	00 00                	add    %al,(%eax)
    1f28:	00 02                	add    %al,(%edx)
    1f2a:	91                   	xchg   %eax,%ecx
    1f2b:	60                   	pusha  
    1f2c:	00 0c 01             	add    %cl,(%ecx,%eax,1)
    1f2f:	38 06                	cmp    %al,(%esi)
    1f31:	00 00                	add    %al,(%eax)
    1f33:	01 a5 01 50 00 00    	add    %esp,0x5001(%ebp)
    1f39:	00 2f                	add    %ch,(%edi)
    1f3b:	a9 04 08 6f a9       	test   $0xa96f0804,%eax
    1f40:	04 08                	add    $0x8,%al
    1f42:	cc                   	int3   
    1f43:	09 00                	or     %eax,(%eax)
    1f45:	00 cb                	add    %cl,%bl
    1f47:	02 00                	add    (%eax),%al
    1f49:	00 06                	add    %al,(%esi)
    1f4b:	6e                   	outsb  %ds:(%esi),(%dx)
    1f4c:	00 01                	add    %al,(%ecx)
    1f4e:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    1f4f:	50                   	push   %eax
    1f50:	00 00                	add    %al,(%eax)
    1f52:	00 02                	add    %al,(%edx)
    1f54:	91                   	xchg   %eax,%ecx
    1f55:	70 06                	jo     1f5d <__executable_start-0x8046177>
    1f57:	64 00 01             	add    %al,%fs:(%ecx)
    1f5a:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    1f5b:	50                   	push   %eax
    1f5c:	00 00                	add    %al,(%eax)
    1f5e:	00 02                	add    %al,(%edx)
    1f60:	91                   	xchg   %eax,%ecx
    1f61:	68 00 0c 01 02       	push   $0x2010c00
    1f66:	06                   	push   %es
    1f67:	00 00                	add    %al,(%eax)
    1f69:	01 ac 01 50 00 00 00 	add    %ebp,0x50(%ecx,%eax,1)
    1f70:	6f                   	outsl  %ds:(%esi),(%dx)
    1f71:	a9 04 08 b4 a9       	test   $0xa9b40804,%eax
    1f76:	04 08                	add    $0x8,%al
    1f78:	f8                   	clc    
    1f79:	09 00                	or     %eax,(%eax)
    1f7b:	00 01                	add    %al,(%ecx)
    1f7d:	03 00                	add    (%eax),%eax
    1f7f:	00 06                	add    %al,(%esi)
    1f81:	6e                   	outsb  %ds:(%esi),(%dx)
    1f82:	00 01                	add    %al,(%ecx)
    1f84:	ac                   	lods   %ds:(%esi),%al
    1f85:	50                   	push   %eax
    1f86:	00 00                	add    %al,(%eax)
    1f88:	00 02                	add    %al,(%edx)
    1f8a:	91                   	xchg   %eax,%ecx
    1f8b:	70 06                	jo     1f93 <__executable_start-0x8046141>
    1f8d:	64 00 01             	add    %al,%fs:(%ecx)
    1f90:	ac                   	lods   %ds:(%esi),%al
    1f91:	50                   	push   %eax
    1f92:	00 00                	add    %al,(%eax)
    1f94:	00 02                	add    %al,(%edx)
    1f96:	91                   	xchg   %eax,%ecx
    1f97:	68 00 0c 01 48       	push   $0x48010c00
    1f9c:	06                   	push   %es
    1f9d:	00 00                	add    %al,(%eax)
    1f9f:	01 b3 01 82 00 00    	add    %esi,0x8201(%ebx)
    1fa5:	00 b4 a9 04 08 f4 a9 	add    %dh,-0x560bf7fc(%ecx,%ebp,4)
    1fac:	04 08                	add    $0x8,%al
    1fae:	24 0a                	and    $0xa,%al
    1fb0:	00 00                	add    %al,(%eax)
    1fb2:	37                   	aaa    
    1fb3:	03 00                	add    (%eax),%eax
    1fb5:	00 06                	add    %al,(%esi)
    1fb7:	6e                   	outsb  %ds:(%esi),(%dx)
    1fb8:	00 01                	add    %al,(%ecx)
    1fba:	b3 82                	mov    $0x82,%bl
    1fbc:	00 00                	add    %al,(%eax)
    1fbe:	00 02                	add    %al,(%edx)
    1fc0:	91                   	xchg   %eax,%ecx
    1fc1:	70 06                	jo     1fc9 <__executable_start-0x804610b>
    1fc3:	64 00 01             	add    %al,%fs:(%ecx)
    1fc6:	b3 82                	mov    $0x82,%bl
    1fc8:	00 00                	add    %al,(%eax)
    1fca:	00 02                	add    %al,(%edx)
    1fcc:	91                   	xchg   %eax,%ecx
    1fcd:	68 00 0d 01 0b       	push   $0xb010d00
    1fd2:	06                   	push   %es
    1fd3:	00 00                	add    %al,(%eax)
    1fd5:	01 ba 01 82 00 00    	add    %edi,0x8201(%edx)
    1fdb:	00 f4                	add    %dh,%ah
    1fdd:	a9 04 08 39 aa       	test   $0xaa390804,%eax
    1fe2:	04 08                	add    $0x8,%al
    1fe4:	50                   	push   %eax
    1fe5:	0a 00                	or     (%eax),%al
    1fe7:	00 06                	add    %al,(%esi)
    1fe9:	6e                   	outsb  %ds:(%esi),(%dx)
    1fea:	00 01                	add    %al,(%ecx)
    1fec:	ba 82 00 00 00       	mov    $0x82,%edx
    1ff1:	02 91 70 06 64 00    	add    0x640670(%ecx),%dl
    1ff7:	01 ba 82 00 00 00    	add    %edi,0x82(%edx)
    1ffd:	02 91 68 00 00 e2    	add    -0x1dffff98(%ecx),%dl
    2003:	00 00                	add    %al,(%eax)
    2005:	00 02                	add    %al,(%edx)
    2007:	00 58 09             	add    %bl,0x9(%eax)
    200a:	00 00                	add    %al,(%eax)
    200c:	04 01                	add    $0x1,%al
    200e:	45                   	inc    %ebp
    200f:	00 00                	add    %al,(%eax)
    2011:	00 01                	add    %al,(%ecx)
    2013:	89 06                	mov    %eax,(%esi)
    2015:	00 00                	add    %al,(%eax)
    2017:	73 00                	jae    2019 <__executable_start-0x80460bb>
    2019:	00 00                	add    %al,(%eax)
    201b:	3c aa                	cmp    $0xaa,%al
    201d:	04 08                	add    $0x8,%al
    201f:	98                   	cwtl   
    2020:	aa                   	stos   %al,%es:(%edi)
    2021:	04 08                	add    $0x8,%al
    2023:	de 07                	fiadd  (%edi)
    2025:	00 00                	add    %al,(%eax)
    2027:	02 52 01             	add    0x1(%edx),%dl
    202a:	00 00                	add    %al,(%eax)
    202c:	02 07                	add    (%edi),%al
    202e:	30 00                	xor    %al,(%eax)
    2030:	00 00                	add    %al,(%eax)
    2032:	03 04 48             	add    (%eax,%ecx,2),%eax
    2035:	01 00                	add    %eax,(%eax)
    2037:	00 3a                	add    %bh,(%edx)
    2039:	00 00                	add    %al,(%eax)
    203b:	00 04 01             	add    %al,(%ecx,%eax,1)
    203e:	06                   	push   %es
    203f:	17                   	pop    %ss
    2040:	00 00                	add    %al,(%eax)
    2042:	00 05 04 05 69 6e    	add    %al,0x6e690504
    2048:	74 00                	je     204a <__executable_start-0x804608a>
    204a:	04 04                	add    $0x4,%al
    204c:	07                   	pop    %es
    204d:	26 00 00             	add    %al,%es:(%eax)
    2050:	00 04 01             	add    %al,(%ecx,%eax,1)
    2053:	06                   	push   %es
    2054:	10 00                	adc    %al,(%eax)
    2056:	00 00                	add    %al,(%eax)
    2058:	04 02                	add    $0x2,%al
    205a:	05 56 00 00 00       	add    $0x56,%eax
    205f:	04 08                	add    $0x8,%al
    2061:	05 00 00 00 00       	add    $0x0,%eax
    2066:	04 01                	add    $0x1,%al
    2068:	08 0e                	or     %cl,(%esi)
    206a:	00 00                	add    %al,(%eax)
    206c:	00 04 02             	add    %al,(%edx,%eax,1)
    206f:	07                   	pop    %es
    2070:	60                   	pusha  
    2071:	00 00                	add    %al,(%eax)
    2073:	00 04 08             	add    %al,(%eax,%ecx,1)
    2076:	07                   	pop    %es
    2077:	1c 00                	sbb    $0x0,%al
    2079:	00 00                	add    %al,(%eax)
    207b:	06                   	push   %es
    207c:	01 74 06 00          	add    %esi,0x0(%esi,%eax,1)
    2080:	00 01                	add    %al,(%ecx)
    2082:	0a 01                	or     (%ecx),%al
    2084:	3c aa                	cmp    $0xaa,%al
    2086:	04 08                	add    $0x8,%al
    2088:	98                   	cwtl   
    2089:	aa                   	stos   %al,%es:(%edi)
    208a:	04 08                	add    $0x8,%al
    208c:	7c 0a                	jl     2098 <__executable_start-0x804603c>
    208e:	00 00                	add    %al,(%eax)
    2090:	da 00                	fiaddl (%eax)
    2092:	00 00                	add    %al,(%eax)
    2094:	07                   	pop    %es
    2095:	dc 01                	faddl  (%ecx)
    2097:	00 00                	add    %al,(%eax)
    2099:	01 0a                	add    %ecx,(%edx)
    209b:	da 00                	fiaddl (%eax)
    209d:	00 00                	add    %al,(%eax)
    209f:	02 91 00 07 b8 01    	add    0x1b80700(%ecx),%dl
    20a5:	00 00                	add    %al,(%eax)
    20a7:	01 0a                	add    %ecx,(%edx)
    20a9:	41                   	inc    %ecx
    20aa:	00 00                	add    %al,(%eax)
    20ac:	00 02                	add    %al,(%edx)
    20ae:	91                   	xchg   %eax,%ecx
    20af:	04 07                	add    $0x7,%al
    20b1:	80 06 00             	addb   $0x0,(%esi)
    20b4:	00 01                	add    %al,(%ecx)
    20b6:	0a da                	or     %dl,%bl
    20b8:	00 00                	add    %al,(%eax)
    20ba:	00 02                	add    %al,(%edx)
    20bc:	91                   	xchg   %eax,%ecx
    20bd:	08 07                	or     %al,(%edi)
    20bf:	6c                   	insb   (%dx),%es:(%edi)
    20c0:	06                   	push   %es
    20c1:	00 00                	add    %al,(%eax)
    20c3:	01 0b                	add    %ecx,(%ebx)
    20c5:	da 00                	fiaddl (%eax)
    20c7:	00 00                	add    %al,(%eax)
    20c9:	02 91 0c 08 09 3a    	add    0x3a09080c(%ecx),%dl
    20cf:	02 00                	add    (%eax),%al
    20d1:	00 01                	add    %al,(%ecx)
    20d3:	0d 25 00 00 00       	or     $0x25,%eax
    20d8:	02 91 6c 00 0a 04    	add    0x40a006c(%ecx),%dl
    20de:	e0 00                	loopne 20e0 <__executable_start-0x8045ff4>
    20e0:	00 00                	add    %al,(%eax)
    20e2:	0b 3a                	or     (%edx),%edi
    20e4:	00 00                	add    %al,(%eax)
    20e6:	00 00                	add    %al,(%eax)
    20e8:	c2 06 00             	ret    $0x6
    20eb:	00 02                	add    %al,(%edx)
    20ed:	00 e4                	add    %ah,%ah
    20ef:	09 00                	or     %eax,(%eax)
    20f1:	00 04 01             	add    %al,(%ecx,%eax,1)
    20f4:	45                   	inc    %ebp
    20f5:	00 00                	add    %al,(%eax)
    20f7:	00 01                	add    %al,(%ecx)
    20f9:	e4 07                	in     $0x7,%al
    20fb:	00 00                	add    %al,(%eax)
    20fd:	73 00                	jae    20ff <__executable_start-0x8045fd5>
    20ff:	00 00                	add    %al,(%eax)
    2101:	98                   	cwtl   
    2102:	aa                   	stos   %al,%es:(%edi)
    2103:	04 08                	add    $0x8,%al
    2105:	e0 ac                	loopne 20b3 <__executable_start-0x8046021>
    2107:	04 08                	add    $0x8,%al
    2109:	42                   	inc    %edx
    210a:	08 00                	or     %al,(%eax)
    210c:	00 02                	add    %al,(%edx)
    210e:	d9 07                	flds   (%edi)
    2110:	00 00                	add    %al,(%eax)
    2112:	02 08                	add    (%eax),%cl
    2114:	30 00                	xor    %al,(%eax)
    2116:	00 00                	add    %al,(%eax)
    2118:	03 04 05 69 6e 74 00 	add    0x746e69(,%eax,1),%eax
    211f:	02 d7                	add    %bh,%dl
    2121:	07                   	pop    %es
    2122:	00 00                	add    %al,(%eax)
    2124:	02 0c 30             	add    (%eax,%esi,1),%cl
    2127:	00 00                	add    %al,(%eax)
    2129:	00 04 04             	add    %al,(%esp,%eax,1)
    212c:	03 06                	add    (%esi),%eax
    212e:	c9                   	leave  
    212f:	00 00                	add    %al,(%eax)
    2131:	00 05 c4 07 00 00    	add    %al,0x7c4
    2137:	00 05 4d 07 00 00    	add    %al,0x74d
    213d:	01 05 ee 06 00 00    	add    %eax,0x6ee
    2143:	02 05 10 07 00 00    	add    0x710,%al
    2149:	03 05 2a 07 00 00    	add    0x72a,%eax
    214f:	04 05                	add    $0x5,%al
    2151:	82                   	(bad)  
    2152:	07                   	pop    %es
    2153:	00 00                	add    %al,(%eax)
    2155:	05 05 93 07 00       	add    $0x79305,%eax
    215a:	00 06                	add    %al,(%esi)
    215c:	05 0e 08 00 00       	add    $0x80e,%eax
    2161:	07                   	pop    %es
    2162:	05 00 07 00 00       	add    $0x700,%eax
    2167:	08 05 19 07 00 00    	or     %al,0x719
    216d:	09 05 a8 07 00 00    	or     %eax,0x7a8
    2173:	0a 05 6e 07 00 00    	or     0x76e,%al
    2179:	0b 05 cd 07 00 00    	or     0x7cd,%eax
    217f:	0c 05                	or     $0x5,%al
    2181:	b0 06                	mov    $0x6,%al
    2183:	00 00                	add    %al,(%eax)
    2185:	0d 05 3b 07 00       	or     $0x73b05,%eax
    218a:	00 0e                	add    %cl,(%esi)
    218c:	05 d7 06 00 00       	add    $0x6d7,%eax
    2191:	0f 05                	syscall 
    2193:	1b 08                	sbb    (%eax),%ecx
    2195:	00 00                	add    %al,(%eax)
    2197:	10 05 cb 06 00 00    	adc    %al,0x6cb
    219d:	11 05 ba 07 00 00    	adc    %eax,0x7ba
    21a3:	12 05 9c 07 00 00    	adc    0x79c,%al
    21a9:	13 05 b1 07 00 00    	adc    0x7b1,%eax
    21af:	14 00                	adc    $0x0,%al
    21b1:	06                   	push   %es
    21b2:	01 ab 06 00 00 01    	add    %ebp,0x1000006(%ebx)
    21b8:	41                   	inc    %ecx
    21b9:	01 98 aa 04 08 cc    	add    %ebx,-0x33f7fb56(%eax)
    21bf:	aa                   	stos   %al,%es:(%edi)
    21c0:	04 08                	add    $0x8,%al
    21c2:	a8 0a                	test   $0xa,%al
    21c4:	00 00                	add    %al,(%eax)
    21c6:	0b 01                	or     (%ecx),%eax
    21c8:	00 00                	add    %al,(%eax)
    21ca:	07                   	pop    %es
    21cb:	0d 04 00 00 25       	or     $0x25000004,%eax
    21d0:	01 00                	add    %eax,(%eax)
    21d2:	00 01                	add    %al,(%ecx)
    21d4:	05 03 78 b5 04       	add    $0x4b57803,%eax
    21d9:	08 08                	or     %cl,(%eax)
    21db:	9e                   	sahf   
    21dc:	aa                   	stos   %al,%es:(%edi)
    21dd:	04 08                	add    $0x8,%al
    21df:	a8 aa                	test   $0xaa,%al
    21e1:	04 08                	add    $0x8,%al
    21e3:	09 49 03             	or     %ecx,0x3(%ecx)
    21e6:	00 00                	add    %al,(%eax)
    21e8:	01 43 30             	add    %eax,0x30(%ebx)
    21eb:	00 00                	add    %al,(%eax)
    21ed:	00 02                	add    %al,(%edx)
    21ef:	91                   	xchg   %eax,%ecx
    21f0:	6c                   	insb   (%dx),%es:(%edi)
    21f1:	00 00                	add    %al,(%eax)
    21f3:	0a 1e                	or     (%esi),%bl
    21f5:	01 00                	add    %eax,(%eax)
    21f7:	00 1b                	add    %bl,(%ebx)
    21f9:	01 00                	add    %eax,(%eax)
    21fb:	00 0b                	add    %cl,(%ebx)
    21fd:	1b 01                	sbb    (%ecx),%eax
    21ff:	00 00                	add    %al,(%eax)
    2201:	04 00                	add    $0x0,%al
    2203:	0c 04                	or     $0x4,%al
    2205:	07                   	pop    %es
    2206:	0d 01 06 17 00       	or     $0x170601,%eax
    220b:	00 00                	add    %al,(%eax)
    220d:	0e                   	push   %cs
    220e:	0b 01                	or     (%ecx),%eax
    2210:	00 00                	add    %al,(%eax)
    2212:	06                   	push   %es
    2213:	01 df                	add    %ebx,%edi
    2215:	07                   	pop    %es
    2216:	00 00                	add    %al,(%eax)
    2218:	01 48 01             	add    %ecx,0x1(%eax)
    221b:	cc                   	int3   
    221c:	aa                   	stos   %al,%es:(%edi)
    221d:	04 08                	add    $0x8,%al
    221f:	03 ab 04 08 d4 0a    	add    0xad40804(%ebx),%ebp
    2225:	00 00                	add    %al,(%eax)
    2227:	7a 01                	jp     222a <__executable_start-0x8045eaa>
    2229:	00 00                	add    %al,(%eax)
    222b:	0f 3c                	(bad)  
    222d:	01 00                	add    %eax,(%eax)
    222f:	00 01                	add    %al,(%ecx)
    2231:	48                   	dec    %eax
    2232:	30 00                	xor    %al,(%eax)
    2234:	00 00                	add    %al,(%eax)
    2236:	02 91 00 07 0d 04    	add    0x40d0700(%ecx),%dl
    223c:	00 00                	add    %al,(%eax)
    223e:	7a 01                	jp     2241 <__executable_start-0x8045e93>
    2240:	00 00                	add    %al,(%eax)
    2242:	01 05 03 73 b5 04    	add    %eax,0x4b57303
    2248:	08 08                	or     %cl,(%eax)
    224a:	d2 aa 04 08 df aa    	shrb   %cl,-0x5520f7fc(%edx)
    2250:	04 08                	add    $0x8,%al
    2252:	09 49 03             	or     %ecx,0x3(%ecx)
    2255:	00 00                	add    %al,(%eax)
    2257:	01 4a 30             	add    %ecx,0x30(%edx)
    225a:	00 00                	add    %al,(%eax)
    225c:	00 02                	add    %al,(%edx)
    225e:	91                   	xchg   %eax,%ecx
    225f:	6c                   	insb   (%dx),%es:(%edi)
    2260:	00 00                	add    %al,(%eax)
    2262:	0e                   	push   %cs
    2263:	0b 01                	or     (%ecx),%eax
    2265:	00 00                	add    %al,(%eax)
    2267:	10 01                	adc    %al,(%ecx)
    2269:	69 07 00 00 01 4f    	imul   $0x4f010000,(%edi),%eax
    226f:	01 25 00 00 00 03    	add    %esp,0x3000000
    2275:	ab                   	stos   %eax,%es:(%edi)
    2276:	04 08                	add    $0x8,%al
    2278:	1b ab 04 08 00 0b    	sbb    0xb000804(%ebx),%ebp
    227e:	00 00                	add    %al,(%eax)
    2280:	c3                   	ret    
    2281:	01 00                	add    %eax,(%eax)
    2283:	00 0f                	add    %cl,(%edi)
    2285:	dc 01                	faddl  (%ecx)
    2287:	00 00                	add    %al,(%eax)
    2289:	01 4f c3             	add    %ecx,-0x3d(%edi)
    228c:	01 00                	add    %eax,(%eax)
    228e:	00 02                	add    %al,(%edx)
    2290:	91                   	xchg   %eax,%ecx
    2291:	00 08                	add    %cl,(%eax)
    2293:	09 ab 04 08 19 ab    	or     %ebp,-0x54e6f7fc(%ebx)
    2299:	04 08                	add    $0x8,%al
    229b:	09 49 03             	or     %ecx,0x3(%ecx)
    229e:	00 00                	add    %al,(%eax)
    22a0:	01 51 30             	add    %edx,0x30(%ecx)
    22a3:	00 00                	add    %al,(%eax)
    22a5:	00 02                	add    %al,(%edx)
    22a7:	91                   	xchg   %eax,%ecx
    22a8:	74 00                	je     22aa <__executable_start-0x8045e2a>
    22aa:	00 11                	add    %dl,(%ecx)
    22ac:	04 c9                	add    $0xc9,%al
    22ae:	01 00                	add    %eax,(%eax)
    22b0:	00 0e                	add    %cl,(%esi)
    22b2:	1e                   	push   %ds
    22b3:	01 00                	add    %eax,(%eax)
    22b5:	00 10                	add    %dl,(%eax)
    22b7:	01 64 07 00          	add    %esp,0x0(%edi,%eax,1)
    22bb:	00 01                	add    %al,(%ecx)
    22bd:	55                   	push   %ebp
    22be:	01 30                	add    %esi,(%eax)
    22c0:	00 00                	add    %al,(%eax)
    22c2:	00 1b                	add    %bl,(%ebx)
    22c4:	ab                   	stos   %eax,%es:(%edi)
    22c5:	04 08                	add    $0x8,%al
    22c7:	33 ab 04 08 2c 0b    	xor    0xb2c0804(%ebx),%ebp
    22cd:	00 00                	add    %al,(%eax)
    22cf:	12 02                	adc    (%edx),%al
    22d1:	00 00                	add    %al,(%eax)
    22d3:	12 70 69             	adc    0x69(%eax),%dh
    22d6:	64 00 01             	add    %al,%fs:(%ecx)
    22d9:	55                   	push   %ebp
    22da:	25 00 00 00 02       	and    $0x2000000,%eax
    22df:	91                   	xchg   %eax,%ecx
    22e0:	00 08                	add    %cl,(%eax)
    22e2:	21 ab 04 08 31 ab    	and    %ebp,-0x54cef7fc(%ebx)
    22e8:	04 08                	add    $0x8,%al
    22ea:	09 49 03             	or     %ecx,0x3(%ecx)
    22ed:	00 00                	add    %al,(%eax)
    22ef:	01 57 30             	add    %edx,0x30(%edi)
    22f2:	00 00                	add    %al,(%eax)
    22f4:	00 02                	add    %al,(%edx)
    22f6:	91                   	xchg   %eax,%ecx
    22f7:	74 00                	je     22f9 <__executable_start-0x8045ddb>
    22f9:	00 10                	add    %dl,(%eax)
    22fb:	01 09                	add    %ecx,(%ecx)
    22fd:	07                   	pop    %es
    22fe:	00 00                	add    %al,(%eax)
    2300:	01 5b 01             	add    %ebx,0x1(%ebx)
    2303:	64 02 00             	add    %fs:(%eax),%al
    2306:	00 33                	add    %dh,(%ebx)
    2308:	ab                   	stos   %eax,%es:(%edi)
    2309:	04 08                	add    $0x8,%al
    230b:	53                   	push   %ebx
    230c:	ab                   	stos   %eax,%es:(%edi)
    230d:	04 08                	add    $0x8,%al
    230f:	58                   	pop    %eax
    2310:	0b 00                	or     (%eax),%eax
    2312:	00 64 02 00          	add    %ah,0x0(%edx,%eax,1)
    2316:	00 0f                	add    %cl,(%edi)
    2318:	dc 01                	faddl  (%ecx)
    231a:	00 00                	add    %al,(%eax)
    231c:	01 5b c3             	add    %ebx,-0x3d(%ebx)
    231f:	01 00                	add    %eax,(%eax)
    2321:	00 02                	add    %al,(%edx)
    2323:	91                   	xchg   %eax,%ecx
    2324:	00 0f                	add    %cl,(%edi)
    2326:	e1 06                	loope  232e <__executable_start-0x8045da6>
    2328:	00 00                	add    %al,(%eax)
    232a:	01 5b 6b             	add    %ebx,0x6b(%ebx)
    232d:	02 00                	add    (%eax),%al
    232f:	00 02                	add    %al,(%edx)
    2331:	91                   	xchg   %eax,%ecx
    2332:	04 08                	add    $0x8,%al
    2334:	39 ab 04 08 4c ab    	cmp    %ebp,-0x54b3f7fc(%ebx)
    233a:	04 08                	add    $0x8,%al
    233c:	09 49 03             	or     %ecx,0x3(%ecx)
    233f:	00 00                	add    %al,(%eax)
    2341:	01 5d 30             	add    %ebx,0x30(%ebp)
    2344:	00 00                	add    %al,(%eax)
    2346:	00 02                	add    %al,(%edx)
    2348:	91                   	xchg   %eax,%ecx
    2349:	74 00                	je     234b <__executable_start-0x8045d89>
    234b:	00 0d 01 02 5a 01    	add    %cl,0x15a0201
    2351:	00 00                	add    %al,(%eax)
    2353:	0d 04 07 26 00       	or     $0x260704,%eax
    2358:	00 00                	add    %al,(%eax)
    235a:	10 01                	adc    %al,(%ecx)
    235c:	46                   	inc    %esi
    235d:	07                   	pop    %es
    235e:	00 00                	add    %al,(%eax)
    2360:	01 61 01             	add    %esp,0x1(%ecx)
    2363:	64 02 00             	add    %fs:(%eax),%al
    2366:	00 53 ab             	add    %dl,-0x55(%ebx)
    2369:	04 08                	add    $0x8,%al
    236b:	70 ab                	jo     2318 <__executable_start-0x8045dbc>
    236d:	04 08                	add    $0x8,%al
    236f:	84 0b                	test   %cl,(%ebx)
    2371:	00 00                	add    %al,(%eax)
    2373:	b6 02                	mov    $0x2,%dh
    2375:	00 00                	add    %al,(%eax)
    2377:	0f dc 01             	paddusb (%ecx),%mm0
    237a:	00 00                	add    %al,(%eax)
    237c:	01 61 c3             	add    %esp,-0x3d(%ecx)
    237f:	01 00                	add    %eax,(%eax)
    2381:	00 02                	add    %al,(%edx)
    2383:	91                   	xchg   %eax,%ecx
    2384:	00 08                	add    %cl,(%eax)
    2386:	59                   	pop    %ecx
    2387:	ab                   	stos   %eax,%es:(%edi)
    2388:	04 08                	add    $0x8,%al
    238a:	69 ab 04 08 09 49 03 	imul   $0x1000003,0x49090804(%ebx),%ebp
    2391:	00 00 01 
    2394:	63 30                	arpl   %si,(%eax)
    2396:	00 00                	add    %al,(%eax)
    2398:	00 02                	add    %al,(%edx)
    239a:	91                   	xchg   %eax,%ecx
    239b:	74 00                	je     239d <__executable_start-0x8045d37>
    239d:	00 10                	add    %dl,(%eax)
    239f:	01 a0 06 00 00 01    	add    %esp,0x1000006(%eax)
    23a5:	67 01 30             	addr16 add %esi,(%bx,%si)
    23a8:	00 00                	add    %al,(%eax)
    23aa:	00 70 ab             	add    %dh,-0x55(%eax)
    23ad:	04 08                	add    $0x8,%al
    23af:	88 ab 04 08 b0 0b    	mov    %ch,0xbb00804(%ebx)
    23b5:	00 00                	add    %al,(%eax)
    23b7:	fa                   	cli    
    23b8:	02 00                	add    (%eax),%al
    23ba:	00 0f                	add    %cl,(%edi)
    23bc:	dc 01                	faddl  (%ecx)
    23be:	00 00                	add    %al,(%eax)
    23c0:	01 67 c3             	add    %esp,-0x3d(%edi)
    23c3:	01 00                	add    %eax,(%eax)
    23c5:	00 02                	add    %al,(%edx)
    23c7:	91                   	xchg   %eax,%ecx
    23c8:	00 08                	add    %cl,(%eax)
    23ca:	76 ab                	jbe    2377 <__executable_start-0x8045d5d>
    23cc:	04 08                	add    $0x8,%al
    23ce:	86 ab 04 08 09 49    	xchg   %ch,0x49090804(%ebx)
    23d4:	03 00                	add    (%eax),%eax
    23d6:	00 01                	add    %al,(%ecx)
    23d8:	69 30 00 00 00 02    	imul   $0x2000000,(%eax),%esi
    23de:	91                   	xchg   %eax,%ecx
    23df:	74 00                	je     23e1 <__executable_start-0x8045cf3>
    23e1:	00 10                	add    %dl,(%eax)
    23e3:	01 f7                	add    %esi,%edi
    23e5:	06                   	push   %es
    23e6:	00 00                	add    %al,(%eax)
    23e8:	01 6d 01             	add    %ebp,0x1(%ebp)
    23eb:	30 00                	xor    %al,(%eax)
    23ed:	00 00                	add    %al,(%eax)
    23ef:	88 ab 04 08 a0 ab    	mov    %ch,-0x545ff7fc(%ebx)
    23f5:	04 08                	add    $0x8,%al
    23f7:	dc 0b                	fmull  (%ebx)
    23f9:	00 00                	add    %al,(%eax)
    23fb:	3d 03 00 00 12       	cmp    $0x12000003,%eax
    2400:	66                   	data16
    2401:	64 00 01             	add    %al,%fs:(%ecx)
    2404:	6d                   	insl   (%dx),%es:(%edi)
    2405:	30 00                	xor    %al,(%eax)
    2407:	00 00                	add    %al,(%eax)
    2409:	02 91 00 08 8e ab    	add    -0x5471f800(%ecx),%dl
    240f:	04 08                	add    $0x8,%al
    2411:	9e                   	sahf   
    2412:	ab                   	stos   %eax,%es:(%edi)
    2413:	04 08                	add    $0x8,%al
    2415:	09 49 03             	or     %ecx,0x3(%ecx)
    2418:	00 00                	add    %al,(%eax)
    241a:	01 6f 30             	add    %ebp,0x30(%edi)
    241d:	00 00                	add    %al,(%eax)
    241f:	00 02                	add    %al,(%edx)
    2421:	91                   	xchg   %eax,%ecx
    2422:	74 00                	je     2424 <__executable_start-0x8045cb0>
    2424:	00 10                	add    %dl,(%eax)
    2426:	01 56 07             	add    %edx,0x7(%esi)
    2429:	00 00                	add    %al,(%eax)
    242b:	01 73 01             	add    %esi,0x1(%ebx)
    242e:	30 00                	xor    %al,(%eax)
    2430:	00 00                	add    %al,(%eax)
    2432:	a0 ab 04 08 be       	mov    0xbe0804ab,%al
    2437:	ab                   	stos   %eax,%es:(%edi)
    2438:	04 08                	add    $0x8,%al
    243a:	08 0c 00             	or     %cl,(%eax,%eax,1)
    243d:	00 9c 03 00 00 12 66 	add    %bl,0x66120000(%ebx,%eax,1)
    2444:	64 00 01             	add    %al,%fs:(%ecx)
    2447:	73 30                	jae    2479 <__executable_start-0x8045c5b>
    2449:	00 00                	add    %al,(%eax)
    244b:	00 02                	add    %al,(%edx)
    244d:	91                   	xchg   %eax,%ecx
    244e:	00 0f                	add    %cl,(%edi)
    2450:	57                   	push   %edi
    2451:	04 00                	add    $0x0,%al
    2453:	00 01                	add    %al,(%ecx)
    2455:	73 9c                	jae    23f3 <__executable_start-0x8045ce1>
    2457:	03 00                	add    (%eax),%eax
    2459:	00 02                	add    %al,(%edx)
    245b:	91                   	xchg   %eax,%ecx
    245c:	04 0f                	add    $0xf,%al
    245e:	65 01 00             	add    %eax,%gs:(%eax)
    2461:	00 01                	add    %al,(%ecx)
    2463:	73 6b                	jae    24d0 <__executable_start-0x8045c04>
    2465:	02 00                	add    (%eax),%al
    2467:	00 02                	add    %al,(%edx)
    2469:	91                   	xchg   %eax,%ecx
    246a:	08 08                	or     %cl,(%eax)
    246c:	a6                   	cmpsb  %es:(%edi),%ds:(%esi)
    246d:	ab                   	stos   %eax,%es:(%edi)
    246e:	04 08                	add    $0x8,%al
    2470:	bc ab 04 08 09       	mov    $0x90804ab,%esp
    2475:	49                   	dec    %ecx
    2476:	03 00                	add    (%eax),%eax
    2478:	00 01                	add    %al,(%ecx)
    247a:	75 30                	jne    24ac <__executable_start-0x8045c28>
    247c:	00 00                	add    %al,(%eax)
    247e:	00 02                	add    %al,(%edx)
    2480:	91                   	xchg   %eax,%ecx
    2481:	74 00                	je     2483 <__executable_start-0x8045c51>
    2483:	00 13                	add    %dl,(%ebx)
    2485:	04 10                	add    $0x10,%al
    2487:	01 35 07 00 00 01    	add    %esi,0x1000007
    248d:	79 01                	jns    2490 <__executable_start-0x8045c44>
    248f:	30 00                	xor    %al,(%eax)
    2491:	00 00                	add    %al,(%eax)
    2493:	be ab 04 08 dc       	mov    $0xdc0804ab,%esi
    2498:	ab                   	stos   %eax,%es:(%edi)
    2499:	04 08                	add    $0x8,%al
    249b:	34 0c                	xor    $0xc,%al
    249d:	00 00                	add    %al,(%eax)
    249f:	fd                   	std    
    24a0:	03 00                	add    (%eax),%eax
    24a2:	00 12                	add    %dl,(%edx)
    24a4:	66                   	data16
    24a5:	64 00 01             	add    %al,%fs:(%ecx)
    24a8:	79 30                	jns    24da <__executable_start-0x8045bfa>
    24aa:	00 00                	add    %al,(%eax)
    24ac:	00 02                	add    %al,(%edx)
    24ae:	91                   	xchg   %eax,%ecx
    24af:	00 0f                	add    %cl,(%edi)
    24b1:	57                   	push   %edi
    24b2:	04 00                	add    $0x0,%al
    24b4:	00 01                	add    %al,(%ecx)
    24b6:	79 fd                	jns    24b5 <__executable_start-0x8045c1f>
    24b8:	03 00                	add    (%eax),%eax
    24ba:	00 02                	add    %al,(%edx)
    24bc:	91                   	xchg   %eax,%ecx
    24bd:	04 0f                	add    $0xf,%al
    24bf:	65 01 00             	add    %eax,%gs:(%eax)
    24c2:	00 01                	add    %al,(%ecx)
    24c4:	79 6b                	jns    2531 <__executable_start-0x8045ba3>
    24c6:	02 00                	add    (%eax),%al
    24c8:	00 02                	add    %al,(%edx)
    24ca:	91                   	xchg   %eax,%ecx
    24cb:	08 08                	or     %cl,(%eax)
    24cd:	c4 ab 04 08 da ab    	les    -0x5425f7fc(%ebx),%ebp
    24d3:	04 08                	add    $0x8,%al
    24d5:	09 49 03             	or     %ecx,0x3(%ecx)
    24d8:	00 00                	add    %al,(%eax)
    24da:	01 7b 30             	add    %edi,0x30(%ebx)
    24dd:	00 00                	add    %al,(%eax)
    24df:	00 02                	add    %al,(%edx)
    24e1:	91                   	xchg   %eax,%ecx
    24e2:	74 00                	je     24e4 <__executable_start-0x8045bf0>
    24e4:	00 11                	add    %dl,(%ecx)
    24e6:	04 03                	add    $0x3,%al
    24e8:	04 00                	add    $0x0,%al
    24ea:	00 14 06             	add    %dl,(%esi,%eax,1)
    24ed:	01 03                	add    %eax,(%ebx)
    24ef:	08 00                	or     %al,(%eax)
    24f1:	00 01                	add    %al,(%ecx)
    24f3:	7f 01                	jg     24f6 <__executable_start-0x8045bde>
    24f5:	dc ab 04 08 f4 ab    	fsubrl -0x540bf7fc(%ebx)
    24fb:	04 08                	add    $0x8,%al
    24fd:	60                   	pusha  
    24fe:	0c 00                	or     $0x0,%al
    2500:	00 51 04             	add    %dl,0x4(%ecx)
    2503:	00 00                	add    %al,(%eax)
    2505:	12 66 64             	adc    0x64(%esi),%ah
    2508:	00 01                	add    %al,(%ecx)
    250a:	7f 30                	jg     253c <__executable_start-0x8045b98>
    250c:	00 00                	add    %al,(%eax)
    250e:	00 02                	add    %al,(%edx)
    2510:	91                   	xchg   %eax,%ecx
    2511:	00 0f                	add    %cl,(%edi)
    2513:	5b                   	pop    %ebx
    2514:	07                   	pop    %es
    2515:	00 00                	add    %al,(%eax)
    2517:	01 7f 6b             	add    %edi,0x6b(%edi)
    251a:	02 00                	add    (%eax),%al
    251c:	00 02                	add    %al,(%edx)
    251e:	91                   	xchg   %eax,%ecx
    251f:	04 08                	add    $0x8,%al
    2521:	e2 ab                	loop   24ce <__executable_start-0x8045c06>
    2523:	04 08                	add    $0x8,%al
    2525:	f2 ab                	repnz stos %eax,%es:(%edi)
    2527:	04 08                	add    $0x8,%al
    2529:	09 49 03             	or     %ecx,0x3(%ecx)
    252c:	00 00                	add    %al,(%eax)
    252e:	01 81 30 00 00 00    	add    %eax,0x30(%ecx)
    2534:	02 91 74 00 00 10    	add    0x10000074(%ecx),%dl
    253a:	01 b9 06 00 00 01    	add    %edi,0x1000006(%ecx)
    2540:	85 01                	test   %eax,(%ecx)
    2542:	6b 02 00             	imul   $0x0,(%edx),%eax
    2545:	00 f4                	add    %dh,%ah
    2547:	ab                   	stos   %eax,%es:(%edi)
    2548:	04 08                	add    $0x8,%al
    254a:	0c ac                	or     $0xac,%al
    254c:	04 08                	add    $0x8,%al
    254e:	8c 0c 00             	mov    %cs,(%eax,%eax,1)
    2551:	00 94 04 00 00 12 66 	add    %dl,0x66120000(%esp,%eax,1)
    2558:	64 00 01             	add    %al,%fs:(%ecx)
    255b:	85 30                	test   %esi,(%eax)
    255d:	00 00                	add    %al,(%eax)
    255f:	00 02                	add    %al,(%edx)
    2561:	91                   	xchg   %eax,%ecx
    2562:	00 08                	add    %cl,(%eax)
    2564:	fa                   	cli    
    2565:	ab                   	stos   %eax,%es:(%edi)
    2566:	04 08                	add    $0x8,%al
    2568:	0a ac 04 08 09 49 03 	or     0x3490908(%esp,%eax,1),%ch
    256f:	00 00                	add    %al,(%eax)
    2571:	01 87 30 00 00 00    	add    %eax,0x30(%edi)
    2577:	02 91 74 00 00 06    	add    0x6000074(%ecx),%dl
    257d:	01 08                	add    %ecx,(%eax)
    257f:	08 00                	or     %al,(%eax)
    2581:	00 01                	add    %al,(%ecx)
    2583:	8b 01                	mov    (%ecx),%eax
    2585:	0c ac                	or     $0xac,%al
    2587:	04 08                	add    $0x8,%al
    2589:	21 ac 04 08 b8 0c 00 	and    %ebp,0xcb808(%esp,%eax,1)
    2590:	00 d3                	add    %dl,%bl
    2592:	04 00                	add    $0x0,%al
    2594:	00 12                	add    %dl,(%edx)
    2596:	66                   	data16
    2597:	64 00 01             	add    %al,%fs:(%ecx)
    259a:	8b 30                	mov    (%eax),%esi
    259c:	00 00                	add    %al,(%eax)
    259e:	00 02                	add    %al,(%edx)
    25a0:	91                   	xchg   %eax,%ecx
    25a1:	00 08                	add    %cl,(%eax)
    25a3:	12 ac 04 08 1f ac 04 	adc    0x4ac1f08(%esp,%eax,1),%ch
    25aa:	08 09                	or     %cl,(%ecx)
    25ac:	49                   	dec    %ecx
    25ad:	03 00                	add    (%eax),%eax
    25af:	00 01                	add    %al,(%ecx)
    25b1:	8d 30                	lea    (%eax),%esi
    25b3:	00 00                	add    %al,(%eax)
    25b5:	00 02                	add    %al,(%edx)
    25b7:	91                   	xchg   %eax,%ecx
    25b8:	74 00                	je     25ba <__executable_start-0x8045b1a>
    25ba:	00 10                	add    %dl,(%eax)
    25bc:	01 77 07             	add    %esi,0x7(%edi)
    25bf:	00 00                	add    %al,(%eax)
    25c1:	01 91 01 37 00 00    	add    %edx,0x3701(%ecx)
    25c7:	00 21                	add    %ah,(%ecx)
    25c9:	ac                   	lods   %ds:(%esi),%al
    25ca:	04 08                	add    $0x8,%al
    25cc:	3c ac                	cmp    $0xac,%al
    25ce:	04 08                	add    $0x8,%al
    25d0:	e4 0c                	in     $0xc,%al
    25d2:	00 00                	add    %al,(%eax)
    25d4:	24 05                	and    $0x5,%al
    25d6:	00 00                	add    %al,(%eax)
    25d8:	12 66 64             	adc    0x64(%esi),%ah
    25db:	00 01                	add    %al,(%ecx)
    25dd:	91                   	xchg   %eax,%ecx
    25de:	30 00                	xor    %al,(%eax)
    25e0:	00 00                	add    %al,(%eax)
    25e2:	02 91 00 0f be 06    	add    0x6be0f00(%ecx),%dl
    25e8:	00 00                	add    %al,(%eax)
    25ea:	01 91 9c 03 00 00    	add    %edx,0x39c(%ecx)
    25f0:	02 91 04 08 27 ac    	add    -0x53d8f7fc(%ecx),%dl
    25f6:	04 08                	add    $0x8,%al
    25f8:	3a ac 04 08 09 49 03 	cmp    0x3490908(%esp,%eax,1),%ch
    25ff:	00 00                	add    %al,(%eax)
    2601:	01 93 30 00 00 00    	add    %edx,0x30(%ebx)
    2607:	02 91 74 00 00 06    	add    0x6000074(%ecx),%dl
    260d:	01 23                	add    %esp,(%ebx)
    260f:	07                   	pop    %es
    2610:	00 00                	add    %al,(%eax)
    2612:	01 97 01 3c ac 04    	add    %edx,0x4ac3c01(%edi)
    2618:	08 51 ac             	or     %dl,-0x54(%ecx)
    261b:	04 08                	add    $0x8,%al
    261d:	10 0d 00 00 64 05    	adc    %cl,0x5640000
    2623:	00 00                	add    %al,(%eax)
    2625:	0f 7c                	(bad)  
    2627:	07                   	pop    %es
    2628:	00 00                	add    %al,(%eax)
    262a:	01 97 37 00 00 00    	add    %edx,0x37(%edi)
    2630:	02 91 00 08 42 ac    	add    -0x53bdf800(%ecx),%dl
    2636:	04 08                	add    $0x8,%al
    2638:	4f                   	dec    %edi
    2639:	ac                   	lods   %ds:(%esi),%al
    263a:	04 08                	add    $0x8,%al
    263c:	09 49 03             	or     %ecx,0x3(%ecx)
    263f:	00 00                	add    %al,(%eax)
    2641:	01 99 30 00 00 00    	add    %ebx,0x30(%ecx)
    2647:	02 91 74 00 00 10    	add    0x10000074(%ecx),%dl
    264d:	01 a5 06 00 00 01    	add    %esp,0x1000006(%ebp)
    2653:	9d                   	popf   
    2654:	01 64 02 00          	add    %esp,0x0(%edx,%eax,1)
    2658:	00 51 ac             	add    %dl,-0x54(%ecx)
    265b:	04 08                	add    $0x8,%al
    265d:	6e                   	outsb  %ds:(%esi),(%dx)
    265e:	ac                   	lods   %ds:(%esi),%al
    265f:	04 08                	add    $0x8,%al
    2661:	3c 0d                	cmp    $0xd,%al
    2663:	00 00                	add    %al,(%eax)
    2665:	a8 05                	test   $0x5,%al
    2667:	00 00                	add    %al,(%eax)
    2669:	12 64 69 72          	adc    0x72(%ecx,%ebp,2),%ah
    266d:	00 01                	add    %al,(%ecx)
    266f:	9d                   	popf   
    2670:	c3                   	ret    
    2671:	01 00                	add    %eax,(%eax)
    2673:	00 02                	add    %al,(%edx)
    2675:	91                   	xchg   %eax,%ecx
    2676:	00 08                	add    %cl,(%eax)
    2678:	57                   	push   %edi
    2679:	ac                   	lods   %ds:(%esi),%al
    267a:	04 08                	add    $0x8,%al
    267c:	67 ac                	addr16 lods %ds:(%si),%al
    267e:	04 08                	add    $0x8,%al
    2680:	09 49 03             	or     %ecx,0x3(%ecx)
    2683:	00 00                	add    %al,(%eax)
    2685:	01 9f 30 00 00 00    	add    %ebx,0x30(%edi)
    268b:	02 91 74 00 00 10    	add    0x10000074(%ecx),%dl
    2691:	01 8d 07 00 00 01    	add    %ecx,0x1000007(%ebp)
    2697:	a3 01 64 02 00       	mov    %eax,0x26401
    269c:	00 6e ac             	add    %ch,-0x54(%esi)
    269f:	04 08                	add    $0x8,%al
    26a1:	8b ac 04 08 68 0d 00 	mov    0xd6808(%esp,%eax,1),%ebp
    26a8:	00 ec                	add    %ch,%ah
    26aa:	05 00 00 12 64       	add    $0x64120000,%eax
    26af:	69 72 00 01 a3 c3 01 	imul   $0x1c3a301,0x0(%edx),%esi
    26b6:	00 00                	add    %al,(%eax)
    26b8:	02 91 00 08 74 ac    	add    -0x538bf800(%ecx),%dl
    26be:	04 08                	add    $0x8,%al
    26c0:	84 ac 04 08 09 49 03 	test   %ch,0x3490908(%esp,%eax,1)
    26c7:	00 00                	add    %al,(%eax)
    26c9:	01 a5 30 00 00 00    	add    %esp,0x30(%ebp)
    26cf:	02 91 74 00 00 10    	add    0x10000074(%ecx),%dl
    26d5:	01 25 08 00 00 01    	add    %esp,0x1000008
    26db:	a9 01 64 02 00       	test   $0x26401,%eax
    26e0:	00 8b ac 04 08 ab    	add    %cl,-0x54f7fb54(%ebx)
    26e6:	ac                   	lods   %ds:(%esi),%al
    26e7:	04 08                	add    $0x8,%al
    26e9:	94                   	xchg   %eax,%esp
    26ea:	0d 00 00 3d 06       	or     $0x63d0000,%eax
    26ef:	00 00                	add    %al,(%eax)
    26f1:	12 66 64             	adc    0x64(%esi),%ah
    26f4:	00 01                	add    %al,(%ecx)
    26f6:	a9 30 00 00 00       	test   $0x30,%eax
    26fb:	02 91 00 0f 27 02    	add    0x2270f00(%ecx),%dl
    2701:	00 00                	add    %al,(%eax)
    2703:	01 a9 3d 06 00 00    	add    %ebp,0x63d(%ecx)
    2709:	02 91 04 08 91 ac    	add    -0x536ef7fc(%ecx),%dl
    270f:	04 08                	add    $0x8,%al
    2711:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    2712:	ac                   	lods   %ds:(%esi),%al
    2713:	04 08                	add    $0x8,%al
    2715:	09 49 03             	or     %ecx,0x3(%ecx)
    2718:	00 00                	add    %al,(%eax)
    271a:	01 ab 30 00 00 00    	add    %ebp,0x30(%ebx)
    2720:	02 91 74 00 00 11    	add    0x11000074(%ecx),%dl
    2726:	04 1e                	add    $0x1e,%al
    2728:	01 00                	add    %eax,(%eax)
    272a:	00 10                	add    %dl,(%eax)
    272c:	01 fd                	add    %edi,%ebp
    272e:	07                   	pop    %es
    272f:	00 00                	add    %al,(%eax)
    2731:	01 af 01 64 02 00    	add    %ebp,0x26401(%edi)
    2737:	00 ab ac 04 08 c8    	add    %ch,-0x37f7fb54(%ebx)
    273d:	ac                   	lods   %ds:(%esi),%al
    273e:	04 08                	add    $0x8,%al
    2740:	c0 0d 00 00 86 06 00 	rorb   $0x0,0x6860000
    2747:	00 12                	add    %dl,(%edx)
    2749:	66                   	data16
    274a:	64 00 01             	add    %al,%fs:(%ecx)
    274d:	af                   	scas   %es:(%edi),%eax
    274e:	30 00                	xor    %al,(%eax)
    2750:	00 00                	add    %al,(%eax)
    2752:	02 91 00 08 b1 ac    	add    -0x534ef800(%ecx),%dl
    2758:	04 08                	add    $0x8,%al
    275a:	c1 ac 04 08 09 49 03 	shrl   $0x0,0x3490908(%esp,%eax,1)
    2761:	00 
    2762:	00 01                	add    %al,(%ecx)
    2764:	b1 30                	mov    $0x30,%cl
    2766:	00 00                	add    %al,(%eax)
    2768:	00 02                	add    %al,(%edx)
    276a:	91                   	xchg   %eax,%ecx
    276b:	74 00                	je     276d <__executable_start-0x8045967>
    276d:	00 15 01 c3 06 00    	add    %dl,0x6c301
    2773:	00 01                	add    %al,(%ecx)
    2775:	b5 01                	mov    $0x1,%ch
    2777:	30 00                	xor    %al,(%eax)
    2779:	00 00                	add    %al,(%eax)
    277b:	c8 ac 04 08          	enter  $0x4ac,$0x8
    277f:	e0 ac                	loopne 272d <__executable_start-0x80459a7>
    2781:	04 08                	add    $0x8,%al
    2783:	ec                   	in     (%dx),%al
    2784:	0d 00 00 12 66       	or     $0x66120000,%eax
    2789:	64 00 01             	add    %al,%fs:(%ecx)
    278c:	b5 30                	mov    $0x30,%ch
    278e:	00 00                	add    %al,(%eax)
    2790:	00 02                	add    %al,(%edx)
    2792:	91                   	xchg   %eax,%ecx
    2793:	00 08                	add    %cl,(%eax)
    2795:	ce                   	into   
    2796:	ac                   	lods   %ds:(%esi),%al
    2797:	04 08                	add    $0x8,%al
    2799:	de ac 04 08 09 49 03 	fisubr 0x3490908(%esp,%eax,1)
    27a0:	00 00                	add    %al,(%eax)
    27a2:	01 b7 30 00 00 00    	add    %esi,0x30(%edi)
    27a8:	02 91 74 00 00 00    	add    0x74(%ecx),%dl
    27ae:	92                   	xchg   %eax,%edx
    27af:	02 00                	add    (%eax),%al
    27b1:	00 02                	add    %al,(%edx)
    27b3:	00 f2                	add    %dh,%dl
    27b5:	0a 00                	or     (%eax),%al
    27b7:	00 04 01             	add    %al,(%ecx,%eax,1)
    27ba:	45                   	inc    %ebp
    27bb:	00 00                	add    %al,(%eax)
    27bd:	00 01                	add    %al,(%ecx)
    27bf:	36 08 00             	or     %al,%ss:(%eax)
    27c2:	00 73 00             	add    %dh,0x0(%ebx)
    27c5:	00 00                	add    %al,(%eax)
    27c7:	e0 ac                	loopne 2775 <__executable_start-0x804595f>
    27c9:	04 08                	add    $0x8,%al
    27cb:	7d ae                	jge    277b <__executable_start-0x8045959>
    27cd:	04 08                	add    $0x8,%al
    27cf:	02 09                	add    (%ecx),%cl
    27d1:	00 00                	add    %al,(%eax)
    27d3:	02 52 01             	add    0x1(%edx),%dl
    27d6:	00 00                	add    %al,(%eax)
    27d8:	02 07                	add    (%edi),%al
    27da:	30 00                	xor    %al,(%eax)
    27dc:	00 00                	add    %al,(%eax)
    27de:	03 04 48             	add    (%eax,%ecx,2),%eax
    27e1:	01 00                	add    %eax,(%eax)
    27e3:	00 3a                	add    %bh,(%edx)
    27e5:	00 00                	add    %al,(%eax)
    27e7:	00 04 01             	add    %al,(%ecx,%eax,1)
    27ea:	06                   	push   %es
    27eb:	17                   	pop    %ss
    27ec:	00 00                	add    %al,(%eax)
    27ee:	00 05 04 05 69 6e    	add    %al,0x6e690504
    27f4:	74 00                	je     27f6 <__executable_start-0x80458de>
    27f6:	04 04                	add    $0x4,%al
    27f8:	07                   	pop    %es
    27f9:	26 00 00             	add    %al,%es:(%eax)
    27fc:	00 04 01             	add    %al,(%ecx,%eax,1)
    27ff:	06                   	push   %es
    2800:	10 00                	adc    %al,(%eax)
    2802:	00 00                	add    %al,(%eax)
    2804:	04 02                	add    $0x2,%al
    2806:	05 56 00 00 00       	add    $0x56,%eax
    280b:	04 08                	add    $0x8,%al
    280d:	05 00 00 00 00       	add    $0x0,%eax
    2812:	04 01                	add    $0x1,%al
    2814:	08 0e                	or     %cl,(%esi)
    2816:	00 00                	add    %al,(%eax)
    2818:	00 04 02             	add    %al,(%edx,%eax,1)
    281b:	07                   	pop    %es
    281c:	60                   	pusha  
    281d:	00 00                	add    %al,(%eax)
    281f:	00 04 08             	add    %al,(%eax,%ecx,1)
    2822:	07                   	pop    %es
    2823:	1c 00                	sbb    $0x0,%al
    2825:	00 00                	add    %al,(%eax)
    2827:	06                   	push   %es
    2828:	6b 08 00             	imul   $0x0,(%eax),%ecx
    282b:	00 4c 01 32          	add    %cl,0x32(%ecx,%eax,1)
    282f:	bc 00 00 00 07       	mov    $0x7000000,%esp
    2834:	62 75 66             	bound  %esi,0x66(%ebp)
    2837:	00 01                	add    %al,(%ecx)
    2839:	33 bc 00 00 00 02 23 	xor    0x23020000(%eax,%eax,1),%edi
    2840:	00 07                	add    %al,(%edi)
    2842:	70 00                	jo     2844 <__executable_start-0x8045890>
    2844:	01 34 cf             	add    %esi,(%edi,%ecx,8)
    2847:	00 00                	add    %al,(%eax)
    2849:	00 02                	add    %al,(%edx)
    284b:	23 40 08             	and    0x8(%eax),%eax
    284e:	78 08                	js     2858 <__executable_start-0x804587c>
    2850:	00 00                	add    %al,(%eax)
    2852:	01 35 41 00 00 00    	add    %esi,0x41
    2858:	02 23                	add    (%ebx),%ah
    285a:	44                   	inc    %esp
    285b:	08 ad 01 00 00 01    	or     %ch,0x1000001(%ebp)
    2861:	36                   	ss
    2862:	41                   	inc    %ecx
    2863:	00 00                	add    %al,(%eax)
    2865:	00 02                	add    %al,(%edx)
    2867:	23 48 00             	and    0x0(%eax),%ecx
    286a:	09 3a                	or     %edi,(%edx)
    286c:	00 00                	add    %al,(%eax)
    286e:	00 cc                	add    %cl,%ah
    2870:	00 00                	add    %al,(%eax)
    2872:	00 0a                	add    %cl,(%edx)
    2874:	cc                   	int3   
    2875:	00 00                	add    %al,(%eax)
    2877:	00 3f                	add    %bh,(%edi)
    2879:	00 0b                	add    %cl,(%ebx)
    287b:	04 07                	add    $0x7,%al
    287d:	0c 04                	or     $0x4,%al
    287f:	3a 00                	cmp    (%eax),%al
    2881:	00 00                	add    %al,(%eax)
    2883:	0d 01 71 03 00       	or     $0x37101,%eax
    2888:	00 01                	add    %al,(%ecx)
    288a:	09 01                	or     %eax,(%ecx)
    288c:	41                   	inc    %ecx
    288d:	00 00                	add    %al,(%eax)
    288f:	00 e0                	add    %ah,%al
    2891:	ac                   	lods   %ds:(%esi),%al
    2892:	04 08                	add    $0x8,%al
    2894:	02 ad 04 08 18 0e    	add    0xe180804(%ebp),%ch
    289a:	00 00                	add    %al,(%eax)
    289c:	0f 01 00             	sgdtl  (%eax)
    289f:	00 0e                	add    %cl,(%esi)
    28a1:	e1 01                	loope  28a4 <__executable_start-0x8045830>
    28a3:	00 00                	add    %al,(%eax)
    28a5:	01 09                	add    %ecx,(%ecx)
    28a7:	0f 01 00             	sgdtl  (%eax)
    28aa:	00 02                	add    %al,(%edx)
    28ac:	91                   	xchg   %eax,%ecx
    28ad:	00 0e                	add    %cl,(%esi)
    28af:	3a 02                	cmp    (%edx),%al
    28b1:	00 00                	add    %al,(%eax)
    28b3:	01 09                	add    %ecx,(%ecx)
    28b5:	25 00 00 00 02       	and    $0x2000000,%eax
    28ba:	91                   	xchg   %eax,%ecx
    28bb:	04 00                	add    $0x0,%al
    28bd:	0c 04                	or     $0x4,%al
    28bf:	15 01 00 00 0f       	adc    $0xf000001,%eax
    28c4:	3a 00                	cmp    (%eax),%al
    28c6:	00 00                	add    %al,(%eax)
    28c8:	0d 01 2e 08 00       	or     $0x82e01,%eax
    28cd:	00 01                	add    %al,(%ecx)
    28cf:	10 01                	adc    %al,(%ecx)
    28d1:	41                   	inc    %ecx
    28d2:	00 00                	add    %al,(%eax)
    28d4:	00 02                	add    %al,(%edx)
    28d6:	ad                   	lods   %ds:(%esi),%eax
    28d7:	04 08                	add    $0x8,%al
    28d9:	2f                   	das    
    28da:	ad                   	lods   %ds:(%esi),%eax
    28db:	04 08                	add    $0x8,%al
    28dd:	44                   	inc    %esp
    28de:	0e                   	push   %cs
    28df:	00 00                	add    %al,(%eax)
    28e1:	71 01                	jno    28e4 <__executable_start-0x80457f0>
    28e3:	00 00                	add    %al,(%eax)
    28e5:	0e                   	push   %cs
    28e6:	ad                   	lods   %ds:(%esi),%eax
    28e7:	01 00                	add    %eax,(%eax)
    28e9:	00 01                	add    %al,(%ecx)
    28eb:	10 41 00             	adc    %al,0x0(%ecx)
    28ee:	00 00                	add    %al,(%eax)
    28f0:	02 91 00 0e e1 01    	add    0x1e10e00(%ecx),%dl
    28f6:	00 00                	add    %al,(%eax)
    28f8:	01 10                	add    %edx,(%eax)
    28fa:	0f 01 00             	sgdtl  (%eax)
    28fd:	00 02                	add    %al,(%edx)
    28ff:	91                   	xchg   %eax,%ecx
    2900:	04 10                	add    $0x10,%al
    2902:	11 3a                	adc    %edi,(%edx)
    2904:	02 00                	add    (%eax),%al
    2906:	00 01                	add    %al,(%ecx)
    2908:	12 25 00 00 00 02    	adc    0x2000000,%ah
    290e:	91                   	xchg   %eax,%ecx
    290f:	68 11 49 03 00       	push   $0x34911
    2914:	00 01                	add    %al,(%ecx)
    2916:	13 41 00             	adc    0x0(%ecx),%eax
    2919:	00 00                	add    %al,(%eax)
    291b:	02 91 6c 00 0d 01    	add    0x10d006c(%ecx),%dl
    2921:	60                   	pusha  
    2922:	08 00                	or     %al,(%eax)
    2924:	00 01                	add    %al,(%ecx)
    2926:	1f                   	pop    %ds
    2927:	01 41 00             	add    %eax,0x0(%ecx)
    292a:	00 00                	add    %al,(%eax)
    292c:	2f                   	das    
    292d:	ad                   	lods   %ds:(%esi),%eax
    292e:	04 08                	add    $0x8,%al
    2930:	6a ad                	push   $0xffffffad
    2932:	04 08                	add    $0x8,%al
    2934:	70 0e                	jo     2944 <__executable_start-0x8045790>
    2936:	00 00                	add    %al,(%eax)
    2938:	9b                   	fwait
    2939:	01 00                	add    %eax,(%eax)
    293b:	00 12                	add    %dl,(%edx)
    293d:	73 00                	jae    293f <__executable_start-0x8045795>
    293f:	01 1f                	add    %ebx,(%edi)
    2941:	0f 01 00             	sgdtl  (%eax)
    2944:	00 02                	add    %al,(%edx)
    2946:	91                   	xchg   %eax,%ecx
    2947:	00 00                	add    %al,(%eax)
    2949:	0d 01 58 08 00       	or     $0x85801,%eax
    294e:	00 01                	add    %al,(%ecx)
    2950:	29 01                	sub    %eax,(%ecx)
    2952:	41                   	inc    %ecx
    2953:	00 00                	add    %al,(%eax)
    2955:	00 6a ad             	add    %ch,-0x53(%edx)
    2958:	04 08                	add    $0x8,%al
    295a:	96                   	xchg   %eax,%esi
    295b:	ad                   	lods   %ds:(%esi),%eax
    295c:	04 08                	add    $0x8,%al
    295e:	9c                   	pushf  
    295f:	0e                   	push   %cs
    2960:	00 00                	add    %al,(%eax)
    2962:	d2 01                	rolb   %cl,(%ecx)
    2964:	00 00                	add    %al,(%eax)
    2966:	12 63 00             	adc    0x0(%ebx),%ah
    2969:	01 29                	add    %ebp,(%ecx)
    296b:	41                   	inc    %ecx
    296c:	00 00                	add    %al,(%eax)
    296e:	00 02                	add    %al,(%edx)
    2970:	91                   	xchg   %eax,%ecx
    2971:	00 13                	add    %dl,(%ebx)
    2973:	63 32                	arpl   %si,(%edx)
    2975:	00 01                	add    %al,(%ecx)
    2977:	2b 3a                	sub    (%edx),%edi
    2979:	00 00                	add    %al,(%eax)
    297b:	00 02                	add    %al,(%edx)
    297d:	91                   	xchg   %eax,%ecx
    297e:	6f                   	outsl  %ds:(%esi),(%dx)
    297f:	00 0d 01 2d 08 00    	add    %cl,0x82d01
    2985:	00 01                	add    %al,(%ecx)
    2987:	40                   	inc    %eax
    2988:	01 41 00             	add    %eax,0x0(%ecx)
    298b:	00 00                	add    %al,(%eax)
    298d:	96                   	xchg   %eax,%esi
    298e:	ad                   	lods   %ds:(%esi),%eax
    298f:	04 08                	add    $0x8,%al
    2991:	e0 ad                	loopne 2940 <__executable_start-0x8045794>
    2993:	04 08                	add    $0x8,%al
    2995:	c8 0e 00 00          	enter  $0xe,$0x0
    2999:	29 02                	sub    %eax,(%edx)
    299b:	00 00                	add    %al,(%eax)
    299d:	0e                   	push   %cs
    299e:	ad                   	lods   %ds:(%esi),%eax
    299f:	01 00                	add    %eax,(%eax)
    29a1:	00 01                	add    %al,(%ecx)
    29a3:	40                   	inc    %eax
    29a4:	41                   	inc    %ecx
    29a5:	00 00                	add    %al,(%eax)
    29a7:	00 02                	add    %al,(%edx)
    29a9:	91                   	xchg   %eax,%ecx
    29aa:	00 0e                	add    %cl,(%esi)
    29ac:	e1 01                	loope  29af <__executable_start-0x8045725>
    29ae:	00 00                	add    %al,(%eax)
    29b0:	01 40 0f             	add    %eax,0xf(%eax)
    29b3:	01 00                	add    %eax,(%eax)
    29b5:	00 02                	add    %al,(%edx)
    29b7:	91                   	xchg   %eax,%ecx
    29b8:	04 0e                	add    $0xe,%al
    29ba:	3a 02                	cmp    (%edx),%al
    29bc:	00 00                	add    %al,(%eax)
    29be:	01 40 25             	add    %eax,0x25(%eax)
    29c1:	00 00                	add    %al,(%eax)
    29c3:	00 02                	add    %al,(%edx)
    29c5:	91                   	xchg   %eax,%ecx
    29c6:	08 13                	or     %dl,(%ebx)
    29c8:	61                   	popa   
    29c9:	75 78                	jne    2a43 <__executable_start-0x8045691>
    29cb:	00 01                	add    %al,(%ecx)
    29cd:	42                   	inc    %edx
    29ce:	79 00                	jns    29d0 <__executable_start-0x8045704>
    29d0:	00 00                	add    %al,(%eax)
    29d2:	03 91 a4 7f 00 14    	add    0x14007fa4(%ecx),%edx
    29d8:	4f                   	dec    %edi
    29d9:	08 00                	or     %al,(%eax)
    29db:	00 01                	add    %al,(%ecx)
    29dd:	4e                   	dec    %esi
    29de:	01 e0                	add    %esp,%eax
    29e0:	ad                   	lods   %ds:(%esi),%eax
    29e1:	04 08                	add    $0x8,%al
    29e3:	33 ae 04 08 f4 0e    	xor    0xef40804(%esi),%ebp
    29e9:	00 00                	add    %al,(%eax)
    29eb:	6a 02                	push   $0x2
    29ed:	00 00                	add    %al,(%eax)
    29ef:	12 63 00             	adc    0x0(%ebx),%ah
    29f2:	01 4e 3a             	add    %ecx,0x3a(%esi)
    29f5:	00 00                	add    %al,(%eax)
    29f7:	00 02                	add    %al,(%edx)
    29f9:	91                   	xchg   %eax,%ecx
    29fa:	5c                   	pop    %esp
    29fb:	0e                   	push   %cs
    29fc:	e2 03                	loop   2a01 <__executable_start-0x80456d3>
    29fe:	00 00                	add    %al,(%eax)
    2a00:	01 4e 6a             	add    %ecx,0x6a(%esi)
    2a03:	02 00                	add    (%eax),%al
    2a05:	00 02                	add    %al,(%edx)
    2a07:	91                   	xchg   %eax,%ecx
    2a08:	04 13                	add    $0x13,%al
    2a0a:	61                   	popa   
    2a0b:	75 78                	jne    2a85 <__executable_start-0x804564f>
    2a0d:	00 01                	add    %al,(%ecx)
    2a0f:	50                   	push   %eax
    2a10:	6c                   	insb   (%dx),%es:(%edi)
    2a11:	02 00                	add    (%eax),%al
    2a13:	00 02                	add    %al,(%edx)
    2a15:	91                   	xchg   %eax,%ecx
    2a16:	6c                   	insb   (%dx),%es:(%edi)
    2a17:	00 15 04 0c 04 79    	add    %dl,0x79040c04
    2a1d:	00 00                	add    %al,(%eax)
    2a1f:	00 16                	add    %dl,(%esi)
    2a21:	65 08 00             	or     %al,%gs:(%eax)
    2a24:	00 01                	add    %al,(%ecx)
    2a26:	59                   	pop    %ecx
    2a27:	01 33                	add    %esi,(%ebx)
    2a29:	ae                   	scas   %es:(%edi),%al
    2a2a:	04 08                	add    $0x8,%al
    2a2c:	7d ae                	jge    29dc <__executable_start-0x80456f8>
    2a2e:	04 08                	add    $0x8,%al
    2a30:	20 0f                	and    %cl,(%edi)
    2a32:	00 00                	add    %al,(%eax)
    2a34:	12 61 75             	adc    0x75(%ecx),%ah
    2a37:	78 00                	js     2a39 <__executable_start-0x804569b>
    2a39:	01 59 6c             	add    %ebx,0x6c(%ecx)
    2a3c:	02 00                	add    (%eax),%al
    2a3e:	00 02                	add    %al,(%edx)
    2a40:	91                   	xchg   %eax,%ecx
    2a41:	00 00                	add    %al,(%eax)
    2a43:	00 a9 00 00 00 02    	add    %ch,0x2000000(%ecx)
    2a49:	00 15 0c 00 00 04    	add    %dl,0x400000c
    2a4f:	01 45 00             	add    %eax,0x0(%ebp)
    2a52:	00 00                	add    %al,(%eax)
    2a54:	01 a1 08 00 00 73    	add    %esp,0x73000008(%ecx)
    2a5a:	00 00                	add    %al,(%eax)
    2a5c:	00 80 ae 04 08 f7    	add    %al,-0x8f7fb52(%eax)
    2a62:	ae                   	scas   %es:(%edi),%al
    2a63:	04 08                	add    $0x8,%al
    2a65:	90                   	nop
    2a66:	09 00                	or     %eax,(%eax)
    2a68:	00 02                	add    %al,(%edx)
    2a6a:	01 06                	add    %eax,(%esi)
    2a6c:	17                   	pop    %ss
    2a6d:	00 00                	add    %al,(%eax)
    2a6f:	00 03                	add    %al,(%ebx)
    2a71:	04 05                	add    $0x5,%al
    2a73:	69 6e 74 00 02 04 07 	imul   $0x7040200,0x74(%esi),%ebp
    2a7a:	26 00 00             	add    %al,%es:(%eax)
    2a7d:	00 02                	add    %al,(%edx)
    2a7f:	01 06                	add    %eax,(%esi)
    2a81:	10 00                	adc    %al,(%eax)
    2a83:	00 00                	add    %al,(%eax)
    2a85:	02 02                	add    (%edx),%al
    2a87:	05 56 00 00 00       	add    $0x56,%eax
    2a8c:	02 08                	add    (%eax),%cl
    2a8e:	05 00 00 00 00       	add    $0x0,%eax
    2a93:	02 01                	add    (%ecx),%al
    2a95:	08 0e                	or     %cl,(%esi)
    2a97:	00 00                	add    %al,(%eax)
    2a99:	00 02                	add    %al,(%edx)
    2a9b:	02 07                	add    (%edi),%al
    2a9d:	60                   	pusha  
    2a9e:	00 00                	add    %al,(%eax)
    2aa0:	00 02                	add    %al,(%edx)
    2aa2:	08 07                	or     %al,(%edi)
    2aa4:	1c 00                	sbb    $0x0,%al
    2aa6:	00 00                	add    %al,(%eax)
    2aa8:	04 01                	add    $0x1,%al
    2aaa:	81 08 00 00 01 0d    	orl    $0xd010000,(%eax)
    2ab0:	01 80 ae 04 08 f7    	add    %eax,-0x8f7fb52(%eax)
    2ab6:	ae                   	scas   %es:(%edi),%al
    2ab7:	04 08                	add    $0x8,%al
    2ab9:	4c                   	dec    %esp
    2aba:	0f 00 00             	sldt   (%eax)
    2abd:	9d                   	popf   
    2abe:	00 00                	add    %al,(%eax)
    2ac0:	00 05 91 08 00 00    	add    %al,0x891
    2ac6:	01 0f                	add    %ecx,(%edi)
    2ac8:	9d                   	popf   
    2ac9:	00 00                	add    %al,(%eax)
    2acb:	00 05 03 64 cf 04    	add    %al,0x4cf6403
    2ad1:	08 05 9b 08 00 00    	or     %al,0x89b
    2ad7:	01 10                	add    %edx,(%eax)
    2ad9:	a4                   	movsb  %ds:(%esi),%es:(%edi)
    2ada:	00 00                	add    %al,(%eax)
    2adc:	00 02                	add    %al,(%edx)
    2ade:	91                   	xchg   %eax,%ecx
    2adf:	6c                   	insb   (%dx),%es:(%edi)
    2ae0:	00 02                	add    %al,(%edx)
    2ae2:	01 02                	add    %eax,(%edx)
    2ae4:	5a                   	pop    %edx
    2ae5:	01 00                	add    %eax,(%eax)
    2ae7:	00 06                	add    %al,(%esi)
    2ae9:	04 aa                	add    $0xaa,%al
    2aeb:	00 00                	add    %al,(%eax)
    2aed:	00 07                	add    %al,(%edi)
    2aef:	04 00                	add    $0x0,%al

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	1b 0e                	sbb    (%esi),%ecx
   b:	11 01                	adc    %eax,(%ecx)
   d:	12 01                	adc    (%ecx),%al
   f:	10 06                	adc    %al,(%esi)
  11:	00 00                	add    %al,(%eax)
  13:	02 24 00             	add    (%eax,%eax,1),%ah
  16:	0b 0b                	or     (%ebx),%ecx
  18:	3e 0b 03             	or     %ds:(%ebx),%eax
  1b:	08 00                	or     %al,(%eax)
  1d:	00 03                	add    %al,(%ebx)
  1f:	24 00                	and    $0x0,%al
  21:	0b 0b                	or     (%ebx),%ecx
  23:	3e 0b 03             	or     %ds:(%ebx),%eax
  26:	0e                   	push   %cs
  27:	00 00                	add    %al,(%eax)
  29:	04 16                	add    $0x16,%al
  2b:	00 03                	add    %al,(%ebx)
  2d:	0e                   	push   %cs
  2e:	3a 0b                	cmp    (%ebx),%cl
  30:	3b 0b                	cmp    (%ebx),%ecx
  32:	49                   	dec    %ecx
  33:	13 00                	adc    (%eax),%eax
  35:	00 05 13 01 03 0e    	add    %al,0xe030113
  3b:	0b 05 3a 0b 3b 0b    	or     0xb3b0b3a,%eax
  41:	01 13                	add    %edx,(%ebx)
  43:	00 00                	add    %al,(%eax)
  45:	06                   	push   %es
  46:	0d 00 03 08 3a       	or     $0x3a080300,%eax
  4b:	0b 3b                	or     (%ebx),%edi
  4d:	0b 49 13             	or     0x13(%ecx),%ecx
  50:	38 0a                	cmp    %cl,(%edx)
  52:	00 00                	add    %al,(%eax)
  54:	07                   	pop    %es
  55:	01 01                	add    %eax,(%ecx)
  57:	49                   	dec    %ecx
  58:	13 01                	adc    (%ecx),%eax
  5a:	13 00                	adc    (%eax),%eax
  5c:	00 08                	add    %cl,(%eax)
  5e:	21 00                	and    %eax,(%eax)
  60:	49                   	dec    %ecx
  61:	13 2f                	adc    (%edi),%ebp
  63:	0b 00                	or     (%eax),%eax
  65:	00 09                	add    %cl,(%ecx)
  67:	24 00                	and    $0x0,%al
  69:	0b 0b                	or     (%ebx),%ecx
  6b:	3e 0b 00             	or     %ds:(%eax),%eax
  6e:	00 0a                	add    %cl,(%edx)
  70:	2e 01 3f             	add    %edi,%cs:(%edi)
  73:	0c 03                	or     $0x3,%al
  75:	0e                   	push   %cs
  76:	3a 0b                	cmp    (%ebx),%cl
  78:	3b 0b                	cmp    (%ebx),%ecx
  7a:	27                   	daa    
  7b:	0c 11                	or     $0x11,%al
  7d:	01 12                	add    %edx,(%edx)
  7f:	01 40 06             	add    %eax,0x6(%eax)
  82:	01 13                	add    %edx,(%ebx)
  84:	00 00                	add    %al,(%eax)
  86:	0b 34 00             	or     (%eax,%eax,1),%esi
  89:	03 0e                	add    (%esi),%ecx
  8b:	3a 0b                	cmp    (%ebx),%cl
  8d:	3b 0b                	cmp    (%ebx),%ecx
  8f:	49                   	dec    %ecx
  90:	13 02                	adc    (%edx),%eax
  92:	0a 00                	or     (%eax),%al
  94:	00 0c 21             	add    %cl,(%ecx,%eiz,1)
  97:	00 49 13             	add    %cl,0x13(%ecx)
  9a:	2f                   	das    
  9b:	05 00 00 00 01       	add    $0x1000000,%eax
  a0:	11 01                	adc    %eax,(%ecx)
  a2:	25 0e 13 0b 03       	and    $0x30b130e,%eax
  a7:	0e                   	push   %cs
  a8:	1b 0e                	sbb    (%esi),%ecx
  aa:	11 01                	adc    %eax,(%ecx)
  ac:	12 01                	adc    (%ecx),%al
  ae:	10 06                	adc    %al,(%esi)
  b0:	00 00                	add    %al,(%eax)
  b2:	02 24 00             	add    (%eax,%eax,1),%ah
  b5:	0b 0b                	or     (%ebx),%ecx
  b7:	3e 0b 03             	or     %ds:(%ebx),%eax
  ba:	0e                   	push   %cs
  bb:	00 00                	add    %al,(%eax)
  bd:	03 24 00             	add    (%eax,%eax,1),%esp
  c0:	0b 0b                	or     (%ebx),%ecx
  c2:	3e 0b 03             	or     %ds:(%ebx),%eax
  c5:	08 00                	or     %al,(%eax)
  c7:	00 04 16             	add    %al,(%esi,%edx,1)
  ca:	00 03                	add    %al,(%ebx)
  cc:	0e                   	push   %cs
  cd:	3a 0b                	cmp    (%ebx),%cl
  cf:	3b 0b                	cmp    (%ebx),%ecx
  d1:	49                   	dec    %ecx
  d2:	13 00                	adc    (%eax),%eax
  d4:	00 05 13 01 03 0e    	add    %al,0xe030113
  da:	0b 05 3a 0b 3b 0b    	or     0xb3b0b3a,%eax
  e0:	01 13                	add    %edx,(%ebx)
  e2:	00 00                	add    %al,(%eax)
  e4:	06                   	push   %es
  e5:	0d 00 03 08 3a       	or     $0x3a080300,%eax
  ea:	0b 3b                	or     (%ebx),%edi
  ec:	0b 49 13             	or     0x13(%ecx),%ecx
  ef:	38 0a                	cmp    %cl,(%edx)
  f1:	00 00                	add    %al,(%eax)
  f3:	07                   	pop    %es
  f4:	01 01                	add    %eax,(%ecx)
  f6:	49                   	dec    %ecx
  f7:	13 01                	adc    (%ecx),%eax
  f9:	13 00                	adc    (%eax),%eax
  fb:	00 08                	add    %cl,(%eax)
  fd:	21 00                	and    %eax,(%eax)
  ff:	49                   	dec    %ecx
 100:	13 2f                	adc    (%edi),%ebp
 102:	0b 00                	or     (%eax),%eax
 104:	00 09                	add    %cl,(%ecx)
 106:	24 00                	and    $0x0,%al
 108:	0b 0b                	or     (%ebx),%ecx
 10a:	3e 0b 00             	or     %ds:(%eax),%eax
 10d:	00 0a                	add    %cl,(%edx)
 10f:	2e 01 03             	add    %eax,%cs:(%ebx)
 112:	0e                   	push   %cs
 113:	3a 0b                	cmp    (%ebx),%cl
 115:	3b 0b                	cmp    (%ebx),%ecx
 117:	27                   	daa    
 118:	0c 11                	or     $0x11,%al
 11a:	01 12                	add    %edx,(%edx)
 11c:	01 40 06             	add    %eax,0x6(%eax)
 11f:	01 13                	add    %edx,(%ebx)
 121:	00 00                	add    %al,(%eax)
 123:	0b 05 00 03 08 3a    	or     0x3a080300,%eax
 129:	0b 3b                	or     (%ebx),%edi
 12b:	0b 49 13             	or     0x13(%ecx),%ecx
 12e:	02 0a                	add    (%edx),%cl
 130:	00 00                	add    %al,(%eax)
 132:	0c 34                	or     $0x34,%al
 134:	00 03                	add    %al,(%ebx)
 136:	08 3a                	or     %bh,(%edx)
 138:	0b 3b                	or     (%ebx),%edi
 13a:	0b 49 13             	or     0x13(%ecx),%ecx
 13d:	02 0a                	add    (%edx),%cl
 13f:	00 00                	add    %al,(%eax)
 141:	0d 0f 00 0b 0b       	or     $0xb0b000f,%eax
 146:	49                   	dec    %ecx
 147:	13 00                	adc    (%eax),%eax
 149:	00 0e                	add    %cl,(%esi)
 14b:	2e 01 3f             	add    %edi,%cs:(%edi)
 14e:	0c 03                	or     $0x3,%al
 150:	0e                   	push   %cs
 151:	3a 0b                	cmp    (%ebx),%cl
 153:	3b 0b                	cmp    (%ebx),%ecx
 155:	27                   	daa    
 156:	0c 11                	or     $0x11,%al
 158:	01 12                	add    %edx,(%edx)
 15a:	01 40 06             	add    %eax,0x6(%eax)
 15d:	01 13                	add    %edx,(%ebx)
 15f:	00 00                	add    %al,(%eax)
 161:	0f 05                	syscall 
 163:	00 03                	add    %al,(%ebx)
 165:	0e                   	push   %cs
 166:	3a 0b                	cmp    (%ebx),%cl
 168:	3b 0b                	cmp    (%ebx),%ecx
 16a:	49                   	dec    %ecx
 16b:	13 02                	adc    (%edx),%eax
 16d:	0a 00                	or     (%eax),%al
 16f:	00 10                	add    %dl,(%eax)
 171:	34 00                	xor    $0x0,%al
 173:	03 0e                	add    (%esi),%ecx
 175:	3a 0b                	cmp    (%ebx),%cl
 177:	3b 0b                	cmp    (%ebx),%ecx
 179:	49                   	dec    %ecx
 17a:	13 02                	adc    (%edx),%eax
 17c:	0a 00                	or     (%eax),%al
 17e:	00 11                	add    %dl,(%ecx)
 180:	26 00 00             	add    %al,%es:(%eax)
 183:	00 12                	add    %dl,(%edx)
 185:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
 189:	00 00                	add    %al,(%eax)
 18b:	13 0f                	adc    (%edi),%ecx
 18d:	00 0b                	add    %cl,(%ebx)
 18f:	0b 00                	or     (%eax),%eax
 191:	00 00                	add    %al,(%eax)
 193:	01 11                	add    %edx,(%ecx)
 195:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
 19b:	0e                   	push   %cs
 19c:	1b 0e                	sbb    (%esi),%ecx
 19e:	11 01                	adc    %eax,(%ecx)
 1a0:	12 01                	adc    (%ecx),%al
 1a2:	10 06                	adc    %al,(%esi)
 1a4:	00 00                	add    %al,(%eax)
 1a6:	02 24 00             	add    (%eax,%eax,1),%ah
 1a9:	0b 0b                	or     (%ebx),%ecx
 1ab:	3e 0b 03             	or     %ds:(%ebx),%eax
 1ae:	0e                   	push   %cs
 1af:	00 00                	add    %al,(%eax)
 1b1:	03 24 00             	add    (%eax,%eax,1),%esp
 1b4:	0b 0b                	or     (%ebx),%ecx
 1b6:	3e 0b 03             	or     %ds:(%ebx),%eax
 1b9:	08 00                	or     %al,(%eax)
 1bb:	00 04 16             	add    %al,(%esi,%edx,1)
 1be:	00 03                	add    %al,(%ebx)
 1c0:	0e                   	push   %cs
 1c1:	3a 0b                	cmp    (%ebx),%cl
 1c3:	3b 0b                	cmp    (%ebx),%ecx
 1c5:	49                   	dec    %ecx
 1c6:	13 00                	adc    (%eax),%eax
 1c8:	00 05 2e 01 3f 0c    	add    %al,0xc3f012e
 1ce:	03 0e                	add    (%esi),%ecx
 1d0:	3a 0b                	cmp    (%ebx),%cl
 1d2:	3b 0b                	cmp    (%ebx),%ecx
 1d4:	27                   	daa    
 1d5:	0c 49                	or     $0x49,%al
 1d7:	13 11                	adc    (%ecx),%edx
 1d9:	01 12                	add    %edx,(%edx)
 1db:	01 40 06             	add    %eax,0x6(%eax)
 1de:	01 13                	add    %edx,(%ebx)
 1e0:	00 00                	add    %al,(%eax)
 1e2:	06                   	push   %es
 1e3:	05 00 03 08 3a       	add    $0x3a080300,%eax
 1e8:	0b 3b                	or     (%ebx),%edi
 1ea:	0b 49 13             	or     0x13(%ecx),%ecx
 1ed:	02 0a                	add    (%edx),%cl
 1ef:	00 00                	add    %al,(%eax)
 1f1:	07                   	pop    %es
 1f2:	34 00                	xor    $0x0,%al
 1f4:	03 08                	add    (%eax),%ecx
 1f6:	3a 0b                	cmp    (%ebx),%cl
 1f8:	3b 0b                	cmp    (%ebx),%ecx
 1fa:	49                   	dec    %ecx
 1fb:	13 02                	adc    (%edx),%eax
 1fd:	0a 00                	or     (%eax),%al
 1ff:	00 08                	add    %cl,(%eax)
 201:	0b 01                	or     (%ecx),%eax
 203:	11 01                	adc    %eax,(%ecx)
 205:	12 01                	adc    (%ecx),%al
 207:	01 13                	add    %edx,(%ebx)
 209:	00 00                	add    %al,(%eax)
 20b:	09 0b                	or     %ecx,(%ebx)
 20d:	01 11                	add    %edx,(%ecx)
 20f:	01 12                	add    %edx,(%edx)
 211:	01 00                	add    %eax,(%eax)
 213:	00 0a                	add    %cl,(%edx)
 215:	0f 00 0b             	str    (%ebx)
 218:	0b 49 13             	or     0x13(%ecx),%ecx
 21b:	00 00                	add    %al,(%eax)
 21d:	0b 26                	or     (%esi),%esp
 21f:	00 00                	add    %al,(%eax)
 221:	00 0c 26             	add    %cl,(%esi,%eiz,1)
 224:	00 49 13             	add    %cl,0x13(%ecx)
 227:	00 00                	add    %al,(%eax)
 229:	0d 01 01 49 13       	or     $0x13490101,%eax
 22e:	01 13                	add    %edx,(%ebx)
 230:	00 00                	add    %al,(%eax)
 232:	0e                   	push   %cs
 233:	21 00                	and    %eax,(%eax)
 235:	49                   	dec    %ecx
 236:	13 2f                	adc    (%edi),%ebp
 238:	0b 00                	or     (%eax),%eax
 23a:	00 0f                	add    %cl,(%edi)
 23c:	24 00                	and    $0x0,%al
 23e:	0b 0b                	or     (%ebx),%ecx
 240:	3e 0b 00             	or     %ds:(%eax),%eax
 243:	00 10                	add    %dl,(%eax)
 245:	34 00                	xor    $0x0,%al
 247:	03 0e                	add    (%esi),%ecx
 249:	3a 0b                	cmp    (%ebx),%cl
 24b:	3b 0b                	cmp    (%ebx),%ecx
 24d:	49                   	dec    %ecx
 24e:	13 02                	adc    (%edx),%eax
 250:	0a 00                	or     (%eax),%al
 252:	00 00                	add    %al,(%eax)
 254:	01 11                	add    %edx,(%ecx)
 256:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
 25c:	0e                   	push   %cs
 25d:	1b 0e                	sbb    (%esi),%ecx
 25f:	11 01                	adc    %eax,(%ecx)
 261:	12 01                	adc    (%ecx),%al
 263:	10 06                	adc    %al,(%esi)
 265:	00 00                	add    %al,(%eax)
 267:	02 24 00             	add    (%eax,%eax,1),%ah
 26a:	0b 0b                	or     (%ebx),%ecx
 26c:	3e 0b 03             	or     %ds:(%ebx),%eax
 26f:	08 00                	or     %al,(%eax)
 271:	00 03                	add    %al,(%ebx)
 273:	16                   	push   %ss
 274:	00 03                	add    %al,(%ebx)
 276:	0e                   	push   %cs
 277:	3a 0b                	cmp    (%ebx),%cl
 279:	3b 0b                	cmp    (%ebx),%ecx
 27b:	49                   	dec    %ecx
 27c:	13 00                	adc    (%eax),%eax
 27e:	00 04 24             	add    %al,(%esp)
 281:	00 0b                	add    %cl,(%ebx)
 283:	0b 3e                	or     (%esi),%edi
 285:	0b 03                	or     (%ebx),%eax
 287:	0e                   	push   %cs
 288:	00 00                	add    %al,(%eax)
 28a:	05 0f 00 0b 0b       	add    $0xb0b000f,%eax
 28f:	03 0e                	add    (%esi),%ecx
 291:	49                   	dec    %ecx
 292:	13 00                	adc    (%eax),%eax
 294:	00 06                	add    %al,(%esi)
 296:	2e 01 03             	add    %eax,%cs:(%ebx)
 299:	0e                   	push   %cs
 29a:	3a 0b                	cmp    (%ebx),%cl
 29c:	3b 0b                	cmp    (%ebx),%ecx
 29e:	27                   	daa    
 29f:	0c 11                	or     $0x11,%al
 2a1:	01 12                	add    %edx,(%edx)
 2a3:	01 40 06             	add    %eax,0x6(%eax)
 2a6:	01 13                	add    %edx,(%ebx)
 2a8:	00 00                	add    %al,(%eax)
 2aa:	07                   	pop    %es
 2ab:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 2b0:	0b 3b                	or     (%ebx),%edi
 2b2:	0b 49 13             	or     0x13(%ecx),%ecx
 2b5:	02 0a                	add    (%edx),%cl
 2b7:	00 00                	add    %al,(%eax)
 2b9:	08 34 00             	or     %dh,(%eax,%eax,1)
 2bc:	03 08                	add    (%eax),%ecx
 2be:	3a 0b                	cmp    (%ebx),%cl
 2c0:	3b 0b                	cmp    (%ebx),%ecx
 2c2:	49                   	dec    %ecx
 2c3:	13 02                	adc    (%edx),%eax
 2c5:	0a 00                	or     (%eax),%al
 2c7:	00 09                	add    %cl,(%ecx)
 2c9:	0f 00 0b             	str    (%ebx)
 2cc:	0b 49 13             	or     0x13(%ecx),%ecx
 2cf:	00 00                	add    %al,(%eax)
 2d1:	0a 26                	or     (%esi),%ah
 2d3:	00 49 13             	add    %cl,0x13(%ecx)
 2d6:	00 00                	add    %al,(%eax)
 2d8:	0b 01                	or     (%ecx),%eax
 2da:	01 49 13             	add    %ecx,0x13(%ecx)
 2dd:	01 13                	add    %edx,(%ebx)
 2df:	00 00                	add    %al,(%eax)
 2e1:	0c 21                	or     $0x21,%al
 2e3:	00 49 13             	add    %cl,0x13(%ecx)
 2e6:	2f                   	das    
 2e7:	05 00 00 0d 24       	add    $0x240d0000,%eax
 2ec:	00 0b                	add    %cl,(%ebx)
 2ee:	0b 3e                	or     (%esi),%edi
 2f0:	0b 00                	or     (%eax),%eax
 2f2:	00 0e                	add    %cl,(%esi)
 2f4:	2e 01 3f             	add    %edi,%cs:(%edi)
 2f7:	0c 03                	or     $0x3,%al
 2f9:	08 3a                	or     %bh,(%edx)
 2fb:	0b 3b                	or     (%ebx),%edi
 2fd:	0b 27                	or     (%edi),%esp
 2ff:	0c 11                	or     $0x11,%al
 301:	01 12                	add    %edx,(%edx)
 303:	01 40 06             	add    %eax,0x6(%eax)
 306:	01 13                	add    %edx,(%ebx)
 308:	00 00                	add    %al,(%eax)
 30a:	0f 18 00             	prefetchnta (%eax)
 30d:	00 00                	add    %al,(%eax)
 30f:	10 34 00             	adc    %dh,(%eax,%eax,1)
 312:	03 0e                	add    (%esi),%ecx
 314:	3a 0b                	cmp    (%ebx),%cl
 316:	3b 0b                	cmp    (%ebx),%ecx
 318:	49                   	dec    %ecx
 319:	13 02                	adc    (%edx),%eax
 31b:	0a 00                	or     (%eax),%al
 31d:	00 11                	add    %dl,(%ecx)
 31f:	2e 01 3f             	add    %edi,%cs:(%edi)
 322:	0c 03                	or     $0x3,%al
 324:	0e                   	push   %cs
 325:	3a 0b                	cmp    (%ebx),%cl
 327:	3b 0b                	cmp    (%ebx),%ecx
 329:	27                   	daa    
 32a:	0c 11                	or     $0x11,%al
 32c:	01 12                	add    %edx,(%edx)
 32e:	01 40 06             	add    %eax,0x6(%eax)
 331:	01 13                	add    %edx,(%ebx)
 333:	00 00                	add    %al,(%eax)
 335:	12 05 00 03 08 3a    	adc    0x3a080300,%al
 33b:	0b 3b                	or     (%ebx),%edi
 33d:	0b 49 13             	or     0x13(%ecx),%ecx
 340:	02 0a                	add    (%edx),%cl
 342:	00 00                	add    %al,(%eax)
 344:	13 0b                	adc    (%ebx),%ecx
 346:	01 11                	add    %edx,(%ecx)
 348:	01 12                	add    %edx,(%edx)
 34a:	01 00                	add    %eax,(%eax)
 34c:	00 14 0f             	add    %dl,(%edi,%ecx,1)
 34f:	00 0b                	add    %cl,(%ebx)
 351:	0b 00                	or     (%eax),%eax
 353:	00 15 21 00 49 13    	add    %dl,0x13490021
 359:	2f                   	das    
 35a:	0b 00                	or     (%eax),%eax
 35c:	00 16                	add    %dl,(%esi)
 35e:	26 00 00             	add    %al,%es:(%eax)
 361:	00 17                	add    %dl,(%edi)
 363:	34 00                	xor    $0x0,%al
 365:	03 0e                	add    (%esi),%ecx
 367:	3a 0b                	cmp    (%ebx),%cl
 369:	3b 0b                	cmp    (%ebx),%ecx
 36b:	49                   	dec    %ecx
 36c:	13 3f                	adc    (%edi),%edi
 36e:	0c 02                	or     $0x2,%al
 370:	0a 00                	or     (%eax),%al
 372:	00 00                	add    %al,(%eax)
 374:	01 11                	add    %edx,(%ecx)
 376:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
 37c:	0e                   	push   %cs
 37d:	1b 0e                	sbb    (%esi),%ecx
 37f:	11 01                	adc    %eax,(%ecx)
 381:	12 01                	adc    (%ecx),%al
 383:	10 06                	adc    %al,(%esi)
 385:	00 00                	add    %al,(%eax)
 387:	02 24 00             	add    (%eax,%eax,1),%ah
 38a:	0b 0b                	or     (%ebx),%ecx
 38c:	3e 0b 03             	or     %ds:(%ebx),%eax
 38f:	08 00                	or     %al,(%eax)
 391:	00 03                	add    %al,(%ebx)
 393:	24 00                	and    $0x0,%al
 395:	0b 0b                	or     (%ebx),%ecx
 397:	3e 0b 03             	or     %ds:(%ebx),%eax
 39a:	0e                   	push   %cs
 39b:	00 00                	add    %al,(%eax)
 39d:	04 2e                	add    $0x2e,%al
 39f:	01 3f                	add    %edi,(%edi)
 3a1:	0c 03                	or     $0x3,%al
 3a3:	0e                   	push   %cs
 3a4:	3a 0b                	cmp    (%ebx),%cl
 3a6:	3b 0b                	cmp    (%ebx),%ecx
 3a8:	27                   	daa    
 3a9:	0c 49                	or     $0x49,%al
 3ab:	13 11                	adc    (%ecx),%edx
 3ad:	01 12                	add    %edx,(%edx)
 3af:	01 40 06             	add    %eax,0x6(%eax)
 3b2:	01 13                	add    %edx,(%ebx)
 3b4:	00 00                	add    %al,(%eax)
 3b6:	05 05 00 03 0e       	add    $0xe030005,%eax
 3bb:	3a 0b                	cmp    (%ebx),%cl
 3bd:	3b 0b                	cmp    (%ebx),%ecx
 3bf:	49                   	dec    %ecx
 3c0:	13 02                	adc    (%edx),%eax
 3c2:	0a 00                	or     (%eax),%al
 3c4:	00 06                	add    %al,(%esi)
 3c6:	0f 00 0b             	str    (%ebx)
 3c9:	0b 49 13             	or     0x13(%ecx),%ecx
 3cc:	00 00                	add    %al,(%eax)
 3ce:	07                   	pop    %es
 3cf:	34 00                	xor    $0x0,%al
 3d1:	03 0e                	add    (%esi),%ecx
 3d3:	3a 0b                	cmp    (%ebx),%cl
 3d5:	3b 0b                	cmp    (%ebx),%ecx
 3d7:	49                   	dec    %ecx
 3d8:	13 3f                	adc    (%edi),%edi
 3da:	0c 3c                	or     $0x3c,%al
 3dc:	0c 00                	or     $0x0,%al
 3de:	00 08                	add    %cl,(%eax)
 3e0:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
 3e4:	00 00                	add    %al,(%eax)
 3e6:	00 01                	add    %al,(%ecx)
 3e8:	11 01                	adc    %eax,(%ecx)
 3ea:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 3ef:	0e                   	push   %cs
 3f0:	1b 0e                	sbb    (%esi),%ecx
 3f2:	11 01                	adc    %eax,(%ecx)
 3f4:	12 01                	adc    (%ecx),%al
 3f6:	10 06                	adc    %al,(%esi)
 3f8:	00 00                	add    %al,(%eax)
 3fa:	02 24 00             	add    (%eax,%eax,1),%ah
 3fd:	0b 0b                	or     (%ebx),%ecx
 3ff:	3e 0b 03             	or     %ds:(%ebx),%eax
 402:	08 00                	or     %al,(%eax)
 404:	00 03                	add    %al,(%ebx)
 406:	2e 01 3f             	add    %edi,%cs:(%edi)
 409:	0c 03                	or     $0x3,%al
 40b:	0e                   	push   %cs
 40c:	3a 0b                	cmp    (%ebx),%cl
 40e:	3b 0b                	cmp    (%ebx),%ecx
 410:	27                   	daa    
 411:	0c 11                	or     $0x11,%al
 413:	01 12                	add    %edx,(%edx)
 415:	01 40 06             	add    %eax,0x6(%eax)
 418:	01 13                	add    %edx,(%ebx)
 41a:	00 00                	add    %al,(%eax)
 41c:	04 05                	add    $0x5,%al
 41e:	00 03                	add    %al,(%ebx)
 420:	0e                   	push   %cs
 421:	3a 0b                	cmp    (%ebx),%cl
 423:	3b 0b                	cmp    (%ebx),%ecx
 425:	49                   	dec    %ecx
 426:	13 02                	adc    (%edx),%eax
 428:	0a 00                	or     (%eax),%al
 42a:	00 05 0f 00 0b 0b    	add    %al,0xb0b000f
 430:	49                   	dec    %ecx
 431:	13 00                	adc    (%eax),%eax
 433:	00 06                	add    %al,(%esi)
 435:	24 00                	and    $0x0,%al
 437:	0b 0b                	or     (%ebx),%ecx
 439:	3e 0b 03             	or     %ds:(%ebx),%eax
 43c:	0e                   	push   %cs
 43d:	00 00                	add    %al,(%eax)
 43f:	00 01                	add    %al,(%ecx)
 441:	11 01                	adc    %eax,(%ecx)
 443:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 448:	0e                   	push   %cs
 449:	1b 0e                	sbb    (%esi),%ecx
 44b:	11 01                	adc    %eax,(%ecx)
 44d:	12 01                	adc    (%ecx),%al
 44f:	10 06                	adc    %al,(%esi)
 451:	00 00                	add    %al,(%eax)
 453:	02 24 00             	add    (%eax,%eax,1),%ah
 456:	0b 0b                	or     (%ebx),%ecx
 458:	3e 0b 03             	or     %ds:(%ebx),%eax
 45b:	08 00                	or     %al,(%eax)
 45d:	00 03                	add    %al,(%ebx)
 45f:	16                   	push   %ss
 460:	00 03                	add    %al,(%ebx)
 462:	0e                   	push   %cs
 463:	3a 0b                	cmp    (%ebx),%cl
 465:	3b 0b                	cmp    (%ebx),%ecx
 467:	49                   	dec    %ecx
 468:	13 00                	adc    (%eax),%eax
 46a:	00 04 24             	add    %al,(%esp)
 46d:	00 0b                	add    %cl,(%ebx)
 46f:	0b 3e                	or     (%esi),%edi
 471:	0b 03                	or     (%ebx),%eax
 473:	0e                   	push   %cs
 474:	00 00                	add    %al,(%eax)
 476:	05 2e 01 03 0e       	add    $0xe03012e,%eax
 47b:	3a 0b                	cmp    (%ebx),%cl
 47d:	3b 0b                	cmp    (%ebx),%ecx
 47f:	27                   	daa    
 480:	0c 11                	or     $0x11,%al
 482:	01 12                	add    %edx,(%edx)
 484:	01 40 06             	add    %eax,0x6(%eax)
 487:	01 13                	add    %edx,(%ebx)
 489:	00 00                	add    %al,(%eax)
 48b:	06                   	push   %es
 48c:	05 00 03 08 3a       	add    $0x3a080300,%eax
 491:	0b 3b                	or     (%ebx),%edi
 493:	0b 49 13             	or     0x13(%ecx),%ecx
 496:	02 0a                	add    (%edx),%cl
 498:	00 00                	add    %al,(%eax)
 49a:	07                   	pop    %es
 49b:	34 00                	xor    $0x0,%al
 49d:	03 08                	add    (%eax),%ecx
 49f:	3a 0b                	cmp    (%ebx),%cl
 4a1:	3b 0b                	cmp    (%ebx),%ecx
 4a3:	49                   	dec    %ecx
 4a4:	13 02                	adc    (%edx),%eax
 4a6:	0a 00                	or     (%eax),%al
 4a8:	00 08                	add    %cl,(%eax)
 4aa:	0f 00 0b             	str    (%ebx)
 4ad:	0b 49 13             	or     0x13(%ecx),%ecx
 4b0:	00 00                	add    %al,(%eax)
 4b2:	09 2e                	or     %ebp,(%esi)
 4b4:	01 3f                	add    %edi,(%edi)
 4b6:	0c 03                	or     $0x3,%al
 4b8:	0e                   	push   %cs
 4b9:	3a 0b                	cmp    (%ebx),%cl
 4bb:	3b 0b                	cmp    (%ebx),%ecx
 4bd:	27                   	daa    
 4be:	0c 11                	or     $0x11,%al
 4c0:	01 12                	add    %edx,(%edx)
 4c2:	01 40 06             	add    %eax,0x6(%eax)
 4c5:	01 13                	add    %edx,(%ebx)
 4c7:	00 00                	add    %al,(%eax)
 4c9:	0a 05 00 03 0e 3a    	or     0x3a0e0300,%al
 4cf:	0b 3b                	or     (%ebx),%edi
 4d1:	0b 49 13             	or     0x13(%ecx),%ecx
 4d4:	02 0a                	add    (%edx),%cl
 4d6:	00 00                	add    %al,(%eax)
 4d8:	0b 34 00             	or     (%eax,%eax,1),%esi
 4db:	03 0e                	add    (%esi),%ecx
 4dd:	3a 0b                	cmp    (%ebx),%cl
 4df:	3b 0b                	cmp    (%ebx),%ecx
 4e1:	49                   	dec    %ecx
 4e2:	13 02                	adc    (%edx),%eax
 4e4:	0a 00                	or     (%eax),%al
 4e6:	00 0c 0b             	add    %cl,(%ebx,%ecx,1)
 4e9:	01 11                	add    %edx,(%ecx)
 4eb:	01 12                	add    %edx,(%edx)
 4ed:	01 00                	add    %eax,(%eax)
 4ef:	00 0d 0f 00 0b 0b    	add    %cl,0xb0b000f
 4f5:	00 00                	add    %al,(%eax)
 4f7:	0e                   	push   %cs
 4f8:	2e 01 3f             	add    %edi,%cs:(%edi)
 4fb:	0c 03                	or     $0x3,%al
 4fd:	0e                   	push   %cs
 4fe:	3a 0b                	cmp    (%ebx),%cl
 500:	3b 0b                	cmp    (%ebx),%ecx
 502:	27                   	daa    
 503:	0c 49                	or     $0x49,%al
 505:	13 11                	adc    (%ecx),%edx
 507:	01 12                	add    %edx,(%edx)
 509:	01 40 06             	add    %eax,0x6(%eax)
 50c:	01 13                	add    %edx,(%ebx)
 50e:	00 00                	add    %al,(%eax)
 510:	0f 01 01             	sgdtl  (%ecx)
 513:	49                   	dec    %ecx
 514:	13 01                	adc    (%ecx),%eax
 516:	13 00                	adc    (%eax),%eax
 518:	00 10                	add    %dl,(%eax)
 51a:	21 00                	and    %eax,(%eax)
 51c:	49                   	dec    %ecx
 51d:	13 2f                	adc    (%edi),%ebp
 51f:	0b 00                	or     (%eax),%eax
 521:	00 11                	add    %dl,(%ecx)
 523:	24 00                	and    $0x0,%al
 525:	0b 0b                	or     (%ebx),%ecx
 527:	3e 0b 00             	or     %ds:(%eax),%eax
 52a:	00 00                	add    %al,(%eax)
 52c:	01 11                	add    %edx,(%ecx)
 52e:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
 534:	0e                   	push   %cs
 535:	1b 0e                	sbb    (%esi),%ecx
 537:	11 01                	adc    %eax,(%ecx)
 539:	12 01                	adc    (%ecx),%al
 53b:	10 06                	adc    %al,(%esi)
 53d:	00 00                	add    %al,(%eax)
 53f:	02 16                	add    (%esi),%dl
 541:	00 03                	add    %al,(%ebx)
 543:	0e                   	push   %cs
 544:	3a 0b                	cmp    (%ebx),%cl
 546:	3b 0b                	cmp    (%ebx),%ecx
 548:	49                   	dec    %ecx
 549:	13 00                	adc    (%eax),%eax
 54b:	00 03                	add    %al,(%ebx)
 54d:	0f 00 0b             	str    (%ebx)
 550:	0b 03                	or     (%ebx),%eax
 552:	0e                   	push   %cs
 553:	49                   	dec    %ecx
 554:	13 00                	adc    (%eax),%eax
 556:	00 04 24             	add    %al,(%esp)
 559:	00 0b                	add    %cl,(%ebx)
 55b:	0b 3e                	or     (%esi),%edi
 55d:	0b 03                	or     (%ebx),%eax
 55f:	0e                   	push   %cs
 560:	00 00                	add    %al,(%eax)
 562:	05 24 00 0b 0b       	add    $0xb0b0024,%eax
 567:	3e 0b 03             	or     %ds:(%ebx),%eax
 56a:	08 00                	or     %al,(%eax)
 56c:	00 06                	add    %al,(%esi)
 56e:	13 01                	adc    (%ecx),%eax
 570:	03 0e                	add    (%esi),%ecx
 572:	0b 0b                	or     (%ebx),%ecx
 574:	3a 0b                	cmp    (%ebx),%cl
 576:	3b 0b                	cmp    (%ebx),%ecx
 578:	01 13                	add    %edx,(%ebx)
 57a:	00 00                	add    %al,(%eax)
 57c:	07                   	pop    %es
 57d:	0d 00 03 08 3a       	or     $0x3a080300,%eax
 582:	0b 3b                	or     (%ebx),%edi
 584:	0b 49 13             	or     0x13(%ecx),%ecx
 587:	38 0a                	cmp    %cl,(%edx)
 589:	00 00                	add    %al,(%eax)
 58b:	08 0d 00 03 0e 3a    	or     %cl,0x3a0e0300
 591:	0b 3b                	or     (%ebx),%edi
 593:	0b 49 13             	or     0x13(%ecx),%ecx
 596:	38 0a                	cmp    %cl,(%edx)
 598:	00 00                	add    %al,(%eax)
 59a:	09 0f                	or     %ecx,(%edi)
 59c:	00 0b                	add    %cl,(%ebx)
 59e:	0b 49 13             	or     0x13(%ecx),%ecx
 5a1:	00 00                	add    %al,(%eax)
 5a3:	0a 04 01             	or     (%ecx,%eax,1),%al
 5a6:	0b 0b                	or     (%ebx),%ecx
 5a8:	3a 0b                	cmp    (%ebx),%cl
 5aa:	3b 0b                	cmp    (%ebx),%ecx
 5ac:	01 13                	add    %edx,(%ebx)
 5ae:	00 00                	add    %al,(%eax)
 5b0:	0b 28                	or     (%eax),%ebp
 5b2:	00 03                	add    %al,(%ebx)
 5b4:	0e                   	push   %cs
 5b5:	1c 0d                	sbb    $0xd,%al
 5b7:	00 00                	add    %al,(%eax)
 5b9:	0c 28                	or     $0x28,%al
 5bb:	00 03                	add    %al,(%ebx)
 5bd:	08 1c 0d 00 00 0d 26 	or     %bl,0x260d0000(,%ecx,1)
 5c4:	00 49 13             	add    %cl,0x13(%ecx)
 5c7:	00 00                	add    %al,(%eax)
 5c9:	0e                   	push   %cs
 5ca:	2e 01 03             	add    %eax,%cs:(%ebx)
 5cd:	0e                   	push   %cs
 5ce:	3a 0b                	cmp    (%ebx),%cl
 5d0:	3b 0b                	cmp    (%ebx),%ecx
 5d2:	27                   	daa    
 5d3:	0c 49                	or     $0x49,%al
 5d5:	13 11                	adc    (%ecx),%edx
 5d7:	01 12                	add    %edx,(%edx)
 5d9:	01 40 06             	add    %eax,0x6(%eax)
 5dc:	01 13                	add    %edx,(%ebx)
 5de:	00 00                	add    %al,(%eax)
 5e0:	0f 05                	syscall 
 5e2:	00 03                	add    %al,(%ebx)
 5e4:	08 3a                	or     %bh,(%edx)
 5e6:	0b 3b                	or     (%ebx),%edi
 5e8:	0b 49 13             	or     0x13(%ecx),%ecx
 5eb:	02 0a                	add    (%edx),%cl
 5ed:	00 00                	add    %al,(%eax)
 5ef:	10 2e                	adc    %ch,(%esi)
 5f1:	01 3f                	add    %edi,(%edi)
 5f3:	0c 03                	or     $0x3,%al
 5f5:	0e                   	push   %cs
 5f6:	3a 0b                	cmp    (%ebx),%cl
 5f8:	3b 0b                	cmp    (%ebx),%ecx
 5fa:	27                   	daa    
 5fb:	0c 49                	or     $0x49,%al
 5fd:	13 11                	adc    (%ecx),%edx
 5ff:	01 12                	add    %edx,(%edx)
 601:	01 40 06             	add    %eax,0x6(%eax)
 604:	01 13                	add    %edx,(%ebx)
 606:	00 00                	add    %al,(%eax)
 608:	11 05 00 03 0e 3a    	adc    %eax,0x3a0e0300
 60e:	0b 3b                	or     (%ebx),%edi
 610:	0b 49 13             	or     0x13(%ecx),%ecx
 613:	02 0a                	add    (%edx),%cl
 615:	00 00                	add    %al,(%eax)
 617:	12 34 00             	adc    (%eax,%eax,1),%dh
 61a:	03 08                	add    (%eax),%ecx
 61c:	3a 0b                	cmp    (%ebx),%cl
 61e:	3b 0b                	cmp    (%ebx),%ecx
 620:	49                   	dec    %ecx
 621:	13 02                	adc    (%edx),%eax
 623:	0a 00                	or     (%eax),%al
 625:	00 13                	add    %dl,(%ebx)
 627:	2e 01 03             	add    %eax,%cs:(%ebx)
 62a:	0e                   	push   %cs
 62b:	3a 0b                	cmp    (%ebx),%cl
 62d:	3b 0b                	cmp    (%ebx),%ecx
 62f:	27                   	daa    
 630:	0c 11                	or     $0x11,%al
 632:	01 12                	add    %edx,(%edx)
 634:	01 40 06             	add    %eax,0x6(%eax)
 637:	01 13                	add    %edx,(%ebx)
 639:	00 00                	add    %al,(%eax)
 63b:	14 0f                	adc    $0xf,%al
 63d:	00 0b                	add    %cl,(%ebx)
 63f:	0b 00                	or     (%eax),%eax
 641:	00 15 18 00 00 00    	add    %dl,0x18
 647:	16                   	push   %ss
 648:	34 00                	xor    $0x0,%al
 64a:	03 0e                	add    (%esi),%ecx
 64c:	3a 0b                	cmp    (%ebx),%cl
 64e:	3b 0b                	cmp    (%ebx),%ecx
 650:	49                   	dec    %ecx
 651:	13 02                	adc    (%edx),%eax
 653:	0a 00                	or     (%eax),%al
 655:	00 17                	add    %dl,(%edi)
 657:	2e 01 3f             	add    %edi,%cs:(%edi)
 65a:	0c 03                	or     $0x3,%al
 65c:	0e                   	push   %cs
 65d:	3a 0b                	cmp    (%ebx),%cl
 65f:	3b 0b                	cmp    (%ebx),%ecx
 661:	27                   	daa    
 662:	0c 11                	or     $0x11,%al
 664:	01 12                	add    %edx,(%edx)
 666:	01 40 06             	add    %eax,0x6(%eax)
 669:	01 13                	add    %edx,(%ebx)
 66b:	00 00                	add    %al,(%eax)
 66d:	18 34 00             	sbb    %dh,(%eax,%eax,1)
 670:	03 0e                	add    (%esi),%ecx
 672:	49                   	dec    %ecx
 673:	13 34 0c             	adc    (%esp,%ecx,1),%esi
 676:	02 0a                	add    (%edx),%cl
 678:	00 00                	add    %al,(%eax)
 67a:	19 0b                	sbb    %ecx,(%ebx)
 67c:	01 11                	add    %edx,(%ecx)
 67e:	01 12                	add    %edx,(%edx)
 680:	01 00                	add    %eax,(%eax)
 682:	00 1a                	add    %bl,(%edx)
 684:	0b 01                	or     (%ecx),%eax
 686:	11 01                	adc    %eax,(%ecx)
 688:	12 01                	adc    (%ecx),%al
 68a:	01 13                	add    %edx,(%ebx)
 68c:	00 00                	add    %al,(%eax)
 68e:	1b 34 00             	sbb    (%eax,%eax,1),%esi
 691:	03 08                	add    (%eax),%ecx
 693:	3a 0b                	cmp    (%ebx),%cl
 695:	3b 05 49 13 02 0a    	cmp    0xa021349,%eax
 69b:	00 00                	add    %al,(%eax)
 69d:	1c 15                	sbb    $0x15,%al
 69f:	01 27                	add    %esp,(%edi)
 6a1:	0c 01                	or     $0x1,%al
 6a3:	13 00                	adc    (%eax),%eax
 6a5:	00 1d 05 00 49 13    	add    %bl,0x13490005
 6ab:	00 00                	add    %al,(%eax)
 6ad:	1e                   	push   %ds
 6ae:	01 01                	add    %eax,(%ecx)
 6b0:	49                   	dec    %ecx
 6b1:	13 01                	adc    (%ecx),%eax
 6b3:	13 00                	adc    (%eax),%eax
 6b5:	00 1f                	add    %bl,(%edi)
 6b7:	21 00                	and    %eax,(%eax)
 6b9:	49                   	dec    %ecx
 6ba:	13 2f                	adc    (%edi),%ebp
 6bc:	0b 00                	or     (%eax),%eax
 6be:	00 20                	add    %ah,(%eax)
 6c0:	24 00                	and    $0x0,%al
 6c2:	0b 0b                	or     (%ebx),%ecx
 6c4:	3e 0b 00             	or     %ds:(%eax),%eax
 6c7:	00 21                	add    %ah,(%ecx)
 6c9:	26 00 03             	add    %al,%es:(%ebx)
 6cc:	0e                   	push   %cs
 6cd:	49                   	dec    %ecx
 6ce:	13 00                	adc    (%eax),%eax
 6d0:	00 22                	add    %ah,(%edx)
 6d2:	2e 01 03             	add    %eax,%cs:(%ebx)
 6d5:	0e                   	push   %cs
 6d6:	3a 0b                	cmp    (%ebx),%cl
 6d8:	3b 05 27 0c 49 13    	cmp    0x13490c27,%eax
 6de:	11 01                	adc    %eax,(%ecx)
 6e0:	12 01                	adc    (%ecx),%al
 6e2:	40                   	inc    %eax
 6e3:	06                   	push   %es
 6e4:	01 13                	add    %edx,(%ebx)
 6e6:	00 00                	add    %al,(%eax)
 6e8:	23 05 00 03 0e 3a    	and    0x3a0e0300,%eax
 6ee:	0b 3b                	or     (%ebx),%edi
 6f0:	05 49 13 02 0a       	add    $0xa021349,%eax
 6f5:	00 00                	add    %al,(%eax)
 6f7:	24 05                	and    $0x5,%al
 6f9:	00 03                	add    %al,(%ebx)
 6fb:	08 3a                	or     %bh,(%edx)
 6fd:	0b 3b                	or     (%ebx),%edi
 6ff:	05 49 13 02 0a       	add    $0xa021349,%eax
 704:	00 00                	add    %al,(%eax)
 706:	25 0a 00 03 0e       	and    $0xe03000a,%eax
 70b:	3a 0b                	cmp    (%ebx),%cl
 70d:	3b 05 11 01 00 00    	cmp    0x111,%eax
 713:	26 2e 01 03          	add    %eax,%cs:%es:(%ebx)
 717:	0e                   	push   %cs
 718:	3a 0b                	cmp    (%ebx),%cl
 71a:	3b 05 27 0c 11 01    	cmp    0x1110c27,%eax
 720:	12 01                	adc    (%ecx),%al
 722:	40                   	inc    %eax
 723:	06                   	push   %es
 724:	01 13                	add    %edx,(%ebx)
 726:	00 00                	add    %al,(%eax)
 728:	27                   	daa    
 729:	34 00                	xor    $0x0,%al
 72b:	03 0e                	add    (%esi),%ecx
 72d:	3a 0b                	cmp    (%ebx),%cl
 72f:	3b 05 49 13 02 0a    	cmp    0xa021349,%eax
 735:	00 00                	add    %al,(%eax)
 737:	28 2e                	sub    %ch,(%esi)
 739:	01 3f                	add    %edi,(%edi)
 73b:	0c 03                	or     $0x3,%al
 73d:	0e                   	push   %cs
 73e:	3a 0b                	cmp    (%ebx),%cl
 740:	3b 05 27 0c 11 01    	cmp    0x1110c27,%eax
 746:	12 01                	adc    (%ecx),%al
 748:	40                   	inc    %eax
 749:	06                   	push   %es
 74a:	01 13                	add    %edx,(%ebx)
 74c:	00 00                	add    %al,(%eax)
 74e:	29 26                	sub    %esp,(%esi)
 750:	00 00                	add    %al,(%eax)
 752:	00 00                	add    %al,(%eax)
 754:	01 11                	add    %edx,(%ecx)
 756:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
 75c:	0e                   	push   %cs
 75d:	1b 0e                	sbb    (%esi),%ecx
 75f:	11 01                	adc    %eax,(%ecx)
 761:	12 01                	adc    (%ecx),%al
 763:	10 06                	adc    %al,(%esi)
 765:	00 00                	add    %al,(%eax)
 767:	02 24 00             	add    (%eax,%eax,1),%ah
 76a:	0b 0b                	or     (%ebx),%ecx
 76c:	3e 0b 03             	or     %ds:(%ebx),%eax
 76f:	08 00                	or     %al,(%eax)
 771:	00 03                	add    %al,(%ebx)
 773:	16                   	push   %ss
 774:	00 03                	add    %al,(%ebx)
 776:	0e                   	push   %cs
 777:	3a 0b                	cmp    (%ebx),%cl
 779:	3b 0b                	cmp    (%ebx),%ecx
 77b:	49                   	dec    %ecx
 77c:	13 00                	adc    (%eax),%eax
 77e:	00 04 24             	add    %al,(%esp)
 781:	00 0b                	add    %cl,(%ebx)
 783:	0b 3e                	or     (%esi),%edi
 785:	0b 03                	or     (%ebx),%eax
 787:	0e                   	push   %cs
 788:	00 00                	add    %al,(%eax)
 78a:	05 2e 01 3f 0c       	add    $0xc3f012e,%eax
 78f:	03 0e                	add    (%esi),%ecx
 791:	3a 0b                	cmp    (%ebx),%cl
 793:	3b 0b                	cmp    (%ebx),%ecx
 795:	27                   	daa    
 796:	0c 49                	or     $0x49,%al
 798:	13 11                	adc    (%ecx),%edx
 79a:	01 12                	add    %edx,(%edx)
 79c:	01 40 06             	add    %eax,0x6(%eax)
 79f:	01 13                	add    %edx,(%ebx)
 7a1:	00 00                	add    %al,(%eax)
 7a3:	06                   	push   %es
 7a4:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 7a9:	0b 3b                	or     (%ebx),%edi
 7ab:	0b 49 13             	or     0x13(%ecx),%ecx
 7ae:	02 0a                	add    (%edx),%cl
 7b0:	00 00                	add    %al,(%eax)
 7b2:	07                   	pop    %es
 7b3:	34 00                	xor    $0x0,%al
 7b5:	03 08                	add    (%eax),%ecx
 7b7:	3a 0b                	cmp    (%ebx),%cl
 7b9:	3b 0b                	cmp    (%ebx),%ecx
 7bb:	49                   	dec    %ecx
 7bc:	13 02                	adc    (%edx),%eax
 7be:	0a 00                	or     (%eax),%al
 7c0:	00 08                	add    %cl,(%eax)
 7c2:	34 00                	xor    $0x0,%al
 7c4:	03 0e                	add    (%esi),%ecx
 7c6:	49                   	dec    %ecx
 7c7:	13 34 0c             	adc    (%esp,%ecx,1),%esi
 7ca:	02 0a                	add    (%edx),%cl
 7cc:	00 00                	add    %al,(%eax)
 7ce:	09 0f                	or     %ecx,(%edi)
 7d0:	00 0b                	add    %cl,(%ebx)
 7d2:	0b 00                	or     (%eax),%eax
 7d4:	00 0a                	add    %cl,(%edx)
 7d6:	0f 00 0b             	str    (%ebx)
 7d9:	0b 49 13             	or     0x13(%ecx),%ecx
 7dc:	00 00                	add    %al,(%eax)
 7de:	0b 26                	or     (%esi),%esp
 7e0:	00 00                	add    %al,(%eax)
 7e2:	00 0c 26             	add    %cl,(%esi,%eiz,1)
 7e5:	00 49 13             	add    %cl,0x13(%ecx)
 7e8:	00 00                	add    %al,(%eax)
 7ea:	0d 01 01 49 13       	or     $0x13490101,%eax
 7ef:	01 13                	add    %edx,(%ebx)
 7f1:	00 00                	add    %al,(%eax)
 7f3:	0e                   	push   %cs
 7f4:	21 00                	and    %eax,(%eax)
 7f6:	49                   	dec    %ecx
 7f7:	13 2f                	adc    (%edi),%ebp
 7f9:	0b 00                	or     (%eax),%eax
 7fb:	00 0f                	add    %cl,(%edi)
 7fd:	24 00                	and    $0x0,%al
 7ff:	0b 0b                	or     (%ebx),%ecx
 801:	3e 0b 00             	or     %ds:(%eax),%eax
 804:	00 10                	add    %dl,(%eax)
 806:	05 00 03 08 3a       	add    $0x3a080300,%eax
 80b:	0b 3b                	or     (%ebx),%edi
 80d:	0b 49 13             	or     0x13(%ecx),%ecx
 810:	02 0a                	add    (%edx),%cl
 812:	00 00                	add    %al,(%eax)
 814:	11 34 00             	adc    %esi,(%eax,%eax,1)
 817:	03 0e                	add    (%esi),%ecx
 819:	3a 0b                	cmp    (%ebx),%cl
 81b:	3b 0b                	cmp    (%ebx),%ecx
 81d:	49                   	dec    %ecx
 81e:	13 02                	adc    (%edx),%eax
 820:	0a 00                	or     (%eax),%al
 822:	00 12                	add    %dl,(%edx)
 824:	0b 01                	or     (%ecx),%eax
 826:	11 01                	adc    %eax,(%ecx)
 828:	12 01                	adc    (%ecx),%al
 82a:	00 00                	add    %al,(%eax)
 82c:	13 2e                	adc    (%esi),%ebp
 82e:	01 3f                	add    %edi,(%edi)
 830:	0c 03                	or     $0x3,%al
 832:	0e                   	push   %cs
 833:	3a 0b                	cmp    (%ebx),%cl
 835:	3b 05 27 0c 49 13    	cmp    0x13490c27,%eax
 83b:	11 01                	adc    %eax,(%ecx)
 83d:	12 01                	adc    (%ecx),%al
 83f:	40                   	inc    %eax
 840:	06                   	push   %es
 841:	01 13                	add    %edx,(%ebx)
 843:	00 00                	add    %al,(%eax)
 845:	14 05                	adc    $0x5,%al
 847:	00 03                	add    %al,(%ebx)
 849:	0e                   	push   %cs
 84a:	3a 0b                	cmp    (%ebx),%cl
 84c:	3b 05 49 13 02 0a    	cmp    0xa021349,%eax
 852:	00 00                	add    %al,(%eax)
 854:	15 34 00 03 08       	adc    $0x8030034,%eax
 859:	3a 0b                	cmp    (%ebx),%cl
 85b:	3b 05 49 13 02 0a    	cmp    0xa021349,%eax
 861:	00 00                	add    %al,(%eax)
 863:	16                   	push   %ss
 864:	34 00                	xor    $0x0,%al
 866:	03 0e                	add    (%esi),%ecx
 868:	3a 0b                	cmp    (%ebx),%cl
 86a:	3b 05 49 13 02 0a    	cmp    0xa021349,%eax
 870:	00 00                	add    %al,(%eax)
 872:	17                   	pop    %ss
 873:	05 00 03 08 3a       	add    $0x3a080300,%eax
 878:	0b 3b                	or     (%ebx),%edi
 87a:	05 49 13 02 0a       	add    $0xa021349,%eax
 87f:	00 00                	add    %al,(%eax)
 881:	00 01                	add    %al,(%ecx)
 883:	11 01                	adc    %eax,(%ecx)
 885:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 88a:	0e                   	push   %cs
 88b:	1b 0e                	sbb    (%esi),%ecx
 88d:	11 01                	adc    %eax,(%ecx)
 88f:	12 01                	adc    (%ecx),%al
 891:	10 06                	adc    %al,(%esi)
 893:	00 00                	add    %al,(%eax)
 895:	02 24 00             	add    (%eax,%eax,1),%ah
 898:	0b 0b                	or     (%ebx),%ecx
 89a:	3e 0b 03             	or     %ds:(%ebx),%eax
 89d:	0e                   	push   %cs
 89e:	00 00                	add    %al,(%eax)
 8a0:	03 16                	add    (%esi),%edx
 8a2:	00 03                	add    %al,(%ebx)
 8a4:	0e                   	push   %cs
 8a5:	3a 0b                	cmp    (%ebx),%cl
 8a7:	3b 0b                	cmp    (%ebx),%ecx
 8a9:	49                   	dec    %ecx
 8aa:	13 00                	adc    (%eax),%eax
 8ac:	00 04 24             	add    %al,(%esp)
 8af:	00 0b                	add    %cl,(%ebx)
 8b1:	0b 3e                	or     (%esi),%edi
 8b3:	0b 03                	or     (%ebx),%eax
 8b5:	08 00                	or     %al,(%eax)
 8b7:	00 05 2e 01 03 0e    	add    %al,0xe03012e
 8bd:	3a 0b                	cmp    (%ebx),%cl
 8bf:	3b 0b                	cmp    (%ebx),%ecx
 8c1:	27                   	daa    
 8c2:	0c 49                	or     $0x49,%al
 8c4:	13 11                	adc    (%ecx),%edx
 8c6:	01 12                	add    %edx,(%edx)
 8c8:	01 40 06             	add    %eax,0x6(%eax)
 8cb:	01 13                	add    %edx,(%ebx)
 8cd:	00 00                	add    %al,(%eax)
 8cf:	06                   	push   %es
 8d0:	05 00 03 08 3a       	add    $0x3a080300,%eax
 8d5:	0b 3b                	or     (%ebx),%edi
 8d7:	0b 49 13             	or     0x13(%ecx),%ecx
 8da:	02 0a                	add    (%edx),%cl
 8dc:	00 00                	add    %al,(%eax)
 8de:	07                   	pop    %es
 8df:	34 00                	xor    $0x0,%al
 8e1:	03 08                	add    (%eax),%ecx
 8e3:	3a 0b                	cmp    (%ebx),%cl
 8e5:	3b 0b                	cmp    (%ebx),%ecx
 8e7:	49                   	dec    %ecx
 8e8:	13 02                	adc    (%edx),%eax
 8ea:	0a 00                	or     (%eax),%al
 8ec:	00 08                	add    %cl,(%eax)
 8ee:	2e 01 03             	add    %eax,%cs:(%ebx)
 8f1:	08 3a                	or     %bh,(%edx)
 8f3:	0b 3b                	or     (%ebx),%edi
 8f5:	0b 27                	or     (%edi),%esp
 8f7:	0c 49                	or     $0x49,%al
 8f9:	13 11                	adc    (%ecx),%edx
 8fb:	01 12                	add    %edx,(%edx)
 8fd:	01 40 06             	add    %eax,0x6(%eax)
 900:	01 13                	add    %edx,(%ebx)
 902:	00 00                	add    %al,(%eax)
 904:	09 0b                	or     %ecx,(%ebx)
 906:	01 11                	add    %edx,(%ecx)
 908:	01 12                	add    %edx,(%edx)
 90a:	01 01                	add    %eax,(%ecx)
 90c:	13 00                	adc    (%eax),%eax
 90e:	00 0a                	add    %cl,(%edx)
 910:	0b 01                	or     (%ecx),%eax
 912:	11 01                	adc    %eax,(%ecx)
 914:	12 01                	adc    (%ecx),%al
 916:	00 00                	add    %al,(%eax)
 918:	0b 34 00             	or     (%eax,%eax,1),%esi
 91b:	03 0e                	add    (%esi),%ecx
 91d:	3a 0b                	cmp    (%ebx),%cl
 91f:	3b 0b                	cmp    (%ebx),%ecx
 921:	49                   	dec    %ecx
 922:	13 02                	adc    (%edx),%eax
 924:	0a 00                	or     (%eax),%al
 926:	00 0c 2e             	add    %cl,(%esi,%ebp,1)
 929:	01 3f                	add    %edi,(%edi)
 92b:	0c 03                	or     $0x3,%al
 92d:	0e                   	push   %cs
 92e:	3a 0b                	cmp    (%ebx),%cl
 930:	3b 0b                	cmp    (%ebx),%ecx
 932:	27                   	daa    
 933:	0c 49                	or     $0x49,%al
 935:	13 11                	adc    (%ecx),%edx
 937:	01 12                	add    %edx,(%edx)
 939:	01 40 06             	add    %eax,0x6(%eax)
 93c:	01 13                	add    %edx,(%ebx)
 93e:	00 00                	add    %al,(%eax)
 940:	0d 2e 01 3f 0c       	or     $0xc3f012e,%eax
 945:	03 0e                	add    (%esi),%ecx
 947:	3a 0b                	cmp    (%ebx),%cl
 949:	3b 0b                	cmp    (%ebx),%ecx
 94b:	27                   	daa    
 94c:	0c 49                	or     $0x49,%al
 94e:	13 11                	adc    (%ecx),%edx
 950:	01 12                	add    %edx,(%edx)
 952:	01 40 06             	add    %eax,0x6(%eax)
 955:	00 00                	add    %al,(%eax)
 957:	00 01                	add    %al,(%ecx)
 959:	11 01                	adc    %eax,(%ecx)
 95b:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 960:	0e                   	push   %cs
 961:	1b 0e                	sbb    (%esi),%ecx
 963:	11 01                	adc    %eax,(%ecx)
 965:	12 01                	adc    (%ecx),%al
 967:	10 06                	adc    %al,(%esi)
 969:	00 00                	add    %al,(%eax)
 96b:	02 16                	add    (%esi),%dl
 96d:	00 03                	add    %al,(%ebx)
 96f:	0e                   	push   %cs
 970:	3a 0b                	cmp    (%ebx),%cl
 972:	3b 0b                	cmp    (%ebx),%ecx
 974:	49                   	dec    %ecx
 975:	13 00                	adc    (%eax),%eax
 977:	00 03                	add    %al,(%ebx)
 979:	0f 00 0b             	str    (%ebx)
 97c:	0b 03                	or     (%ebx),%eax
 97e:	0e                   	push   %cs
 97f:	49                   	dec    %ecx
 980:	13 00                	adc    (%eax),%eax
 982:	00 04 24             	add    %al,(%esp)
 985:	00 0b                	add    %cl,(%ebx)
 987:	0b 3e                	or     (%esi),%edi
 989:	0b 03                	or     (%ebx),%eax
 98b:	0e                   	push   %cs
 98c:	00 00                	add    %al,(%eax)
 98e:	05 24 00 0b 0b       	add    $0xb0b0024,%eax
 993:	3e 0b 03             	or     %ds:(%ebx),%eax
 996:	08 00                	or     %al,(%eax)
 998:	00 06                	add    %al,(%esi)
 99a:	2e 01 3f             	add    %edi,%cs:(%edi)
 99d:	0c 03                	or     $0x3,%al
 99f:	0e                   	push   %cs
 9a0:	3a 0b                	cmp    (%ebx),%cl
 9a2:	3b 0b                	cmp    (%ebx),%ecx
 9a4:	27                   	daa    
 9a5:	0c 11                	or     $0x11,%al
 9a7:	01 12                	add    %edx,(%edx)
 9a9:	01 40 06             	add    %eax,0x6(%eax)
 9ac:	01 13                	add    %edx,(%ebx)
 9ae:	00 00                	add    %al,(%eax)
 9b0:	07                   	pop    %es
 9b1:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 9b6:	0b 3b                	or     (%ebx),%edi
 9b8:	0b 49 13             	or     0x13(%ecx),%ecx
 9bb:	02 0a                	add    (%edx),%cl
 9bd:	00 00                	add    %al,(%eax)
 9bf:	08 18                	or     %bl,(%eax)
 9c1:	00 00                	add    %al,(%eax)
 9c3:	00 09                	add    %cl,(%ecx)
 9c5:	34 00                	xor    $0x0,%al
 9c7:	03 0e                	add    (%esi),%ecx
 9c9:	3a 0b                	cmp    (%ebx),%cl
 9cb:	3b 0b                	cmp    (%ebx),%ecx
 9cd:	49                   	dec    %ecx
 9ce:	13 02                	adc    (%edx),%eax
 9d0:	0a 00                	or     (%eax),%al
 9d2:	00 0a                	add    %cl,(%edx)
 9d4:	0f 00 0b             	str    (%ebx)
 9d7:	0b 49 13             	or     0x13(%ecx),%ecx
 9da:	00 00                	add    %al,(%eax)
 9dc:	0b 26                	or     (%esi),%esp
 9de:	00 49 13             	add    %cl,0x13(%ecx)
 9e1:	00 00                	add    %al,(%eax)
 9e3:	00 01                	add    %al,(%ecx)
 9e5:	11 01                	adc    %eax,(%ecx)
 9e7:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 9ec:	0e                   	push   %cs
 9ed:	1b 0e                	sbb    (%esi),%ecx
 9ef:	11 01                	adc    %eax,(%ecx)
 9f1:	12 01                	adc    (%ecx),%al
 9f3:	10 06                	adc    %al,(%esi)
 9f5:	00 00                	add    %al,(%eax)
 9f7:	02 16                	add    (%esi),%dl
 9f9:	00 03                	add    %al,(%ebx)
 9fb:	0e                   	push   %cs
 9fc:	3a 0b                	cmp    (%ebx),%cl
 9fe:	3b 0b                	cmp    (%ebx),%ecx
 a00:	49                   	dec    %ecx
 a01:	13 00                	adc    (%eax),%eax
 a03:	00 03                	add    %al,(%ebx)
 a05:	24 00                	and    $0x0,%al
 a07:	0b 0b                	or     (%ebx),%ecx
 a09:	3e 0b 03             	or     %ds:(%ebx),%eax
 a0c:	08 00                	or     %al,(%eax)
 a0e:	00 04 04             	add    %al,(%esp,%eax,1)
 a11:	01 0b                	add    %ecx,(%ebx)
 a13:	0b 3a                	or     (%edx),%edi
 a15:	0b 3b                	or     (%ebx),%edi
 a17:	0b 01                	or     (%ecx),%eax
 a19:	13 00                	adc    (%eax),%eax
 a1b:	00 05 28 00 03 0e    	add    %al,0xe030028
 a21:	1c 0d                	sbb    $0xd,%al
 a23:	00 00                	add    %al,(%eax)
 a25:	06                   	push   %es
 a26:	2e 01 3f             	add    %edi,%cs:(%edi)
 a29:	0c 03                	or     $0x3,%al
 a2b:	0e                   	push   %cs
 a2c:	3a 0b                	cmp    (%ebx),%cl
 a2e:	3b 0b                	cmp    (%ebx),%ecx
 a30:	27                   	daa    
 a31:	0c 11                	or     $0x11,%al
 a33:	01 12                	add    %edx,(%edx)
 a35:	01 40 06             	add    %eax,0x6(%eax)
 a38:	01 13                	add    %edx,(%ebx)
 a3a:	00 00                	add    %al,(%eax)
 a3c:	07                   	pop    %es
 a3d:	34 00                	xor    $0x0,%al
 a3f:	03 0e                	add    (%esi),%ecx
 a41:	49                   	dec    %ecx
 a42:	13 34 0c             	adc    (%esp,%ecx,1),%esi
 a45:	02 0a                	add    (%edx),%cl
 a47:	00 00                	add    %al,(%eax)
 a49:	08 0b                	or     %cl,(%ebx)
 a4b:	01 11                	add    %edx,(%ecx)
 a4d:	01 12                	add    %edx,(%edx)
 a4f:	01 00                	add    %eax,(%eax)
 a51:	00 09                	add    %cl,(%ecx)
 a53:	34 00                	xor    $0x0,%al
 a55:	03 0e                	add    (%esi),%ecx
 a57:	3a 0b                	cmp    (%ebx),%cl
 a59:	3b 0b                	cmp    (%ebx),%ecx
 a5b:	49                   	dec    %ecx
 a5c:	13 02                	adc    (%edx),%eax
 a5e:	0a 00                	or     (%eax),%al
 a60:	00 0a                	add    %cl,(%edx)
 a62:	01 01                	add    %eax,(%ecx)
 a64:	49                   	dec    %ecx
 a65:	13 01                	adc    (%ecx),%eax
 a67:	13 00                	adc    (%eax),%eax
 a69:	00 0b                	add    %cl,(%ebx)
 a6b:	21 00                	and    %eax,(%eax)
 a6d:	49                   	dec    %ecx
 a6e:	13 2f                	adc    (%edi),%ebp
 a70:	0b 00                	or     (%eax),%eax
 a72:	00 0c 24             	add    %cl,(%esp)
 a75:	00 0b                	add    %cl,(%ebx)
 a77:	0b 3e                	or     (%esi),%edi
 a79:	0b 00                	or     (%eax),%eax
 a7b:	00 0d 24 00 0b 0b    	add    %cl,0xb0b0024
 a81:	3e 0b 03             	or     %ds:(%ebx),%eax
 a84:	0e                   	push   %cs
 a85:	00 00                	add    %al,(%eax)
 a87:	0e                   	push   %cs
 a88:	26 00 49 13          	add    %cl,%es:0x13(%ecx)
 a8c:	00 00                	add    %al,(%eax)
 a8e:	0f 05                	syscall 
 a90:	00 03                	add    %al,(%ebx)
 a92:	0e                   	push   %cs
 a93:	3a 0b                	cmp    (%ebx),%cl
 a95:	3b 0b                	cmp    (%ebx),%ecx
 a97:	49                   	dec    %ecx
 a98:	13 02                	adc    (%edx),%eax
 a9a:	0a 00                	or     (%eax),%al
 a9c:	00 10                	add    %dl,(%eax)
 a9e:	2e 01 3f             	add    %edi,%cs:(%edi)
 aa1:	0c 03                	or     $0x3,%al
 aa3:	0e                   	push   %cs
 aa4:	3a 0b                	cmp    (%ebx),%cl
 aa6:	3b 0b                	cmp    (%ebx),%ecx
 aa8:	27                   	daa    
 aa9:	0c 49                	or     $0x49,%al
 aab:	13 11                	adc    (%ecx),%edx
 aad:	01 12                	add    %edx,(%edx)
 aaf:	01 40 06             	add    %eax,0x6(%eax)
 ab2:	01 13                	add    %edx,(%ebx)
 ab4:	00 00                	add    %al,(%eax)
 ab6:	11 0f                	adc    %ecx,(%edi)
 ab8:	00 0b                	add    %cl,(%ebx)
 aba:	0b 49 13             	or     0x13(%ecx),%ecx
 abd:	00 00                	add    %al,(%eax)
 abf:	12 05 00 03 08 3a    	adc    0x3a080300,%al
 ac5:	0b 3b                	or     (%ebx),%edi
 ac7:	0b 49 13             	or     0x13(%ecx),%ecx
 aca:	02 0a                	add    (%edx),%cl
 acc:	00 00                	add    %al,(%eax)
 ace:	13 0f                	adc    (%edi),%ecx
 ad0:	00 0b                	add    %cl,(%ebx)
 ad2:	0b 00                	or     (%eax),%eax
 ad4:	00 14 26             	add    %dl,(%esi,%eiz,1)
 ad7:	00 00                	add    %al,(%eax)
 ad9:	00 15 2e 01 3f 0c    	add    %dl,0xc3f012e
 adf:	03 0e                	add    (%esi),%ecx
 ae1:	3a 0b                	cmp    (%ebx),%cl
 ae3:	3b 0b                	cmp    (%ebx),%ecx
 ae5:	27                   	daa    
 ae6:	0c 49                	or     $0x49,%al
 ae8:	13 11                	adc    (%ecx),%edx
 aea:	01 12                	add    %edx,(%edx)
 aec:	01 40 06             	add    %eax,0x6(%eax)
 aef:	00 00                	add    %al,(%eax)
 af1:	00 01                	add    %al,(%ecx)
 af3:	11 01                	adc    %eax,(%ecx)
 af5:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 afa:	0e                   	push   %cs
 afb:	1b 0e                	sbb    (%esi),%ecx
 afd:	11 01                	adc    %eax,(%ecx)
 aff:	12 01                	adc    (%ecx),%al
 b01:	10 06                	adc    %al,(%esi)
 b03:	00 00                	add    %al,(%eax)
 b05:	02 16                	add    (%esi),%dl
 b07:	00 03                	add    %al,(%ebx)
 b09:	0e                   	push   %cs
 b0a:	3a 0b                	cmp    (%ebx),%cl
 b0c:	3b 0b                	cmp    (%ebx),%ecx
 b0e:	49                   	dec    %ecx
 b0f:	13 00                	adc    (%eax),%eax
 b11:	00 03                	add    %al,(%ebx)
 b13:	0f 00 0b             	str    (%ebx)
 b16:	0b 03                	or     (%ebx),%eax
 b18:	0e                   	push   %cs
 b19:	49                   	dec    %ecx
 b1a:	13 00                	adc    (%eax),%eax
 b1c:	00 04 24             	add    %al,(%esp)
 b1f:	00 0b                	add    %cl,(%ebx)
 b21:	0b 3e                	or     (%esi),%edi
 b23:	0b 03                	or     (%ebx),%eax
 b25:	0e                   	push   %cs
 b26:	00 00                	add    %al,(%eax)
 b28:	05 24 00 0b 0b       	add    $0xb0b0024,%eax
 b2d:	3e 0b 03             	or     %ds:(%ebx),%eax
 b30:	08 00                	or     %al,(%eax)
 b32:	00 06                	add    %al,(%esi)
 b34:	13 01                	adc    (%ecx),%eax
 b36:	03 0e                	add    (%esi),%ecx
 b38:	0b 0b                	or     (%ebx),%ecx
 b3a:	3a 0b                	cmp    (%ebx),%cl
 b3c:	3b 0b                	cmp    (%ebx),%ecx
 b3e:	01 13                	add    %edx,(%ebx)
 b40:	00 00                	add    %al,(%eax)
 b42:	07                   	pop    %es
 b43:	0d 00 03 08 3a       	or     $0x3a080300,%eax
 b48:	0b 3b                	or     (%ebx),%edi
 b4a:	0b 49 13             	or     0x13(%ecx),%ecx
 b4d:	38 0a                	cmp    %cl,(%edx)
 b4f:	00 00                	add    %al,(%eax)
 b51:	08 0d 00 03 0e 3a    	or     %cl,0x3a0e0300
 b57:	0b 3b                	or     (%ebx),%edi
 b59:	0b 49 13             	or     0x13(%ecx),%ecx
 b5c:	38 0a                	cmp    %cl,(%edx)
 b5e:	00 00                	add    %al,(%eax)
 b60:	09 01                	or     %eax,(%ecx)
 b62:	01 49 13             	add    %ecx,0x13(%ecx)
 b65:	01 13                	add    %edx,(%ebx)
 b67:	00 00                	add    %al,(%eax)
 b69:	0a 21                	or     (%ecx),%ah
 b6b:	00 49 13             	add    %cl,0x13(%ecx)
 b6e:	2f                   	das    
 b6f:	0b 00                	or     (%eax),%eax
 b71:	00 0b                	add    %cl,(%ebx)
 b73:	24 00                	and    $0x0,%al
 b75:	0b 0b                	or     (%ebx),%ecx
 b77:	3e 0b 00             	or     %ds:(%eax),%eax
 b7a:	00 0c 0f             	add    %cl,(%edi,%ecx,1)
 b7d:	00 0b                	add    %cl,(%ebx)
 b7f:	0b 49 13             	or     0x13(%ecx),%ecx
 b82:	00 00                	add    %al,(%eax)
 b84:	0d 2e 01 3f 0c       	or     $0xc3f012e,%eax
 b89:	03 0e                	add    (%esi),%ecx
 b8b:	3a 0b                	cmp    (%ebx),%cl
 b8d:	3b 0b                	cmp    (%ebx),%ecx
 b8f:	27                   	daa    
 b90:	0c 49                	or     $0x49,%al
 b92:	13 11                	adc    (%ecx),%edx
 b94:	01 12                	add    %edx,(%edx)
 b96:	01 40 06             	add    %eax,0x6(%eax)
 b99:	01 13                	add    %edx,(%ebx)
 b9b:	00 00                	add    %al,(%eax)
 b9d:	0e                   	push   %cs
 b9e:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 ba3:	0b 3b                	or     (%ebx),%edi
 ba5:	0b 49 13             	or     0x13(%ecx),%ecx
 ba8:	02 0a                	add    (%edx),%cl
 baa:	00 00                	add    %al,(%eax)
 bac:	0f 26                	(bad)  
 bae:	00 49 13             	add    %cl,0x13(%ecx)
 bb1:	00 00                	add    %al,(%eax)
 bb3:	10 18                	adc    %bl,(%eax)
 bb5:	00 00                	add    %al,(%eax)
 bb7:	00 11                	add    %dl,(%ecx)
 bb9:	34 00                	xor    $0x0,%al
 bbb:	03 0e                	add    (%esi),%ecx
 bbd:	3a 0b                	cmp    (%ebx),%cl
 bbf:	3b 0b                	cmp    (%ebx),%ecx
 bc1:	49                   	dec    %ecx
 bc2:	13 02                	adc    (%edx),%eax
 bc4:	0a 00                	or     (%eax),%al
 bc6:	00 12                	add    %dl,(%edx)
 bc8:	05 00 03 08 3a       	add    $0x3a080300,%eax
 bcd:	0b 3b                	or     (%ebx),%edi
 bcf:	0b 49 13             	or     0x13(%ecx),%ecx
 bd2:	02 0a                	add    (%edx),%cl
 bd4:	00 00                	add    %al,(%eax)
 bd6:	13 34 00             	adc    (%eax,%eax,1),%esi
 bd9:	03 08                	add    (%eax),%ecx
 bdb:	3a 0b                	cmp    (%ebx),%cl
 bdd:	3b 0b                	cmp    (%ebx),%ecx
 bdf:	49                   	dec    %ecx
 be0:	13 02                	adc    (%edx),%eax
 be2:	0a 00                	or     (%eax),%al
 be4:	00 14 2e             	add    %dl,(%esi,%ebp,1)
 be7:	01 03                	add    %eax,(%ebx)
 be9:	0e                   	push   %cs
 bea:	3a 0b                	cmp    (%ebx),%cl
 bec:	3b 0b                	cmp    (%ebx),%ecx
 bee:	27                   	daa    
 bef:	0c 11                	or     $0x11,%al
 bf1:	01 12                	add    %edx,(%edx)
 bf3:	01 40 06             	add    %eax,0x6(%eax)
 bf6:	01 13                	add    %edx,(%ebx)
 bf8:	00 00                	add    %al,(%eax)
 bfa:	15 0f 00 0b 0b       	adc    $0xb0b000f,%eax
 bff:	00 00                	add    %al,(%eax)
 c01:	16                   	push   %ss
 c02:	2e 01 03             	add    %eax,%cs:(%ebx)
 c05:	0e                   	push   %cs
 c06:	3a 0b                	cmp    (%ebx),%cl
 c08:	3b 0b                	cmp    (%ebx),%ecx
 c0a:	27                   	daa    
 c0b:	0c 11                	or     $0x11,%al
 c0d:	01 12                	add    %edx,(%edx)
 c0f:	01 40 06             	add    %eax,0x6(%eax)
 c12:	00 00                	add    %al,(%eax)
 c14:	00 01                	add    %al,(%ecx)
 c16:	11 01                	adc    %eax,(%ecx)
 c18:	25 0e 13 0b 03       	and    $0x30b130e,%eax
 c1d:	0e                   	push   %cs
 c1e:	1b 0e                	sbb    (%esi),%ecx
 c20:	11 01                	adc    %eax,(%ecx)
 c22:	12 01                	adc    (%ecx),%al
 c24:	10 06                	adc    %al,(%esi)
 c26:	00 00                	add    %al,(%eax)
 c28:	02 24 00             	add    (%eax,%eax,1),%ah
 c2b:	0b 0b                	or     (%ebx),%ecx
 c2d:	3e 0b 03             	or     %ds:(%ebx),%eax
 c30:	0e                   	push   %cs
 c31:	00 00                	add    %al,(%eax)
 c33:	03 24 00             	add    (%eax,%eax,1),%esp
 c36:	0b 0b                	or     (%ebx),%ecx
 c38:	3e 0b 03             	or     %ds:(%ebx),%eax
 c3b:	08 00                	or     %al,(%eax)
 c3d:	00 04 2e             	add    %al,(%esi,%ebp,1)
 c40:	01 3f                	add    %edi,(%edi)
 c42:	0c 03                	or     $0x3,%al
 c44:	0e                   	push   %cs
 c45:	3a 0b                	cmp    (%ebx),%cl
 c47:	3b 0b                	cmp    (%ebx),%ecx
 c49:	27                   	daa    
 c4a:	0c 11                	or     $0x11,%al
 c4c:	01 12                	add    %edx,(%edx)
 c4e:	01 40 06             	add    %eax,0x6(%eax)
 c51:	01 13                	add    %edx,(%ebx)
 c53:	00 00                	add    %al,(%eax)
 c55:	05 34 00 03 0e       	add    $0xe030034,%eax
 c5a:	3a 0b                	cmp    (%ebx),%cl
 c5c:	3b 0b                	cmp    (%ebx),%ecx
 c5e:	49                   	dec    %ecx
 c5f:	13 02                	adc    (%edx),%eax
 c61:	0a 00                	or     (%eax),%al
 c63:	00 06                	add    %al,(%esi)
 c65:	0f 00 0b             	str    (%ebx)
 c68:	0b 49 13             	or     0x13(%ecx),%ecx
 c6b:	00 00                	add    %al,(%eax)
 c6d:	07                   	pop    %es
 c6e:	0f 00 0b             	str    (%ebx)
 c71:	0b 00                	or     (%eax),%eax
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	80 00 00             	addb   $0x0,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 61 00             	add    %ah,0x0(%ecx)
   8:	00 00                	add    %al,(%eax)
   a:	01 01                	add    %eax,(%ecx)
   c:	fb                   	sti    
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	2e                   	cs
  1c:	2e                   	cs
  1d:	2f                   	das    
  1e:	2e                   	cs
  1f:	2e                   	cs
  20:	2f                   	das    
  21:	74 65                	je     88 <__executable_start-0x804804c>
  23:	73 74                	jae    99 <__executable_start-0x804803b>
  25:	73 2f                	jae    56 <__executable_start-0x804807e>
  27:	76 6d                	jbe    96 <__executable_start-0x804803e>
  29:	00 2e                	add    %ch,(%esi)
  2b:	2e                   	cs
  2c:	2f                   	das    
  2d:	2e                   	cs
  2e:	2e                   	cs
  2f:	2f                   	das    
  30:	74 65                	je     97 <__executable_start-0x804803d>
  32:	73 74                	jae    a8 <__executable_start-0x804802c>
  34:	73 00                	jae    36 <__executable_start-0x804809e>
  36:	2e                   	cs
  37:	2e                   	cs
  38:	2f                   	das    
  39:	2e                   	cs
  3a:	2e                   	cs
  3b:	2f                   	das    
  3c:	6c                   	insb   (%dx),%es:(%edi)
  3d:	69 62 00 00 70 74 2d 	imul   $0x2d747000,0x0(%edx),%esp
  44:	67 72 6f             	addr16 jb b6 <__executable_start-0x804801e>
  47:	77 2d                	ja     76 <__executable_start-0x804805e>
  49:	73 74                	jae    bf <__executable_start-0x8048015>
  4b:	61                   	popa   
  4c:	63 6b 2e             	arpl   %bp,0x2e(%ebx)
  4f:	63 00                	arpl   %ax,(%eax)
  51:	01 00                	add    %eax,(%eax)
  53:	00 61 72             	add    %ah,0x72(%ecx)
  56:	63 34 2e             	arpl   %si,(%esi,%ebp,1)
  59:	68 00 02 00 00       	push   $0x200
  5e:	73 74                	jae    d4 <__executable_start-0x8048000>
  60:	64 69 6e 74 2e 68 00 	imul   $0x300682e,%fs:0x74(%esi),%ebp
  67:	03 
  68:	00 00                	add    %al,(%eax)
  6a:	00 00                	add    %al,(%eax)
  6c:	05 02 d4 80 04       	add    $0x480d402,%eax
  71:	08 03                	or     %al,(%ebx)
  73:	0b 01                	or     (%ecx),%eax
  75:	94                   	xchg   %eax,%esp
  76:	08 c9                	or     %cl,%cl
  78:	08 c9                	or     %cl,%cl
  7a:	08 e5                	or     %ah,%ch
  7c:	02 26                	add    (%esi),%ah
  7e:	13 02                	adc    (%edx),%eax
  80:	02 00                	add    (%eax),%al
  82:	01 01                	add    %eax,(%ecx)
  84:	90                   	nop
  85:	00 00                	add    %al,(%eax)
  87:	00 02                	add    %al,(%edx)
  89:	00 55 00             	add    %dl,0x0(%ebp)
  8c:	00 00                	add    %al,(%eax)
  8e:	01 01                	add    %eax,(%ecx)
  90:	fb                   	sti    
  91:	0e                   	push   %cs
  92:	0d 00 01 01 01       	or     $0x1010100,%eax
  97:	01 00                	add    %eax,(%eax)
  99:	00 00                	add    %al,(%eax)
  9b:	01 00                	add    %eax,(%eax)
  9d:	00 01                	add    %al,(%ecx)
  9f:	2e                   	cs
  a0:	2e                   	cs
  a1:	2f                   	das    
  a2:	2e                   	cs
  a3:	2e                   	cs
  a4:	2f                   	das    
  a5:	74 65                	je     10c <__executable_start-0x8047fc8>
  a7:	73 74                	jae    11d <__executable_start-0x8047fb7>
  a9:	73 00                	jae    ab <__executable_start-0x8048029>
  ab:	2e                   	cs
  ac:	2e                   	cs
  ad:	2f                   	das    
  ae:	2e                   	cs
  af:	2e                   	cs
  b0:	2f                   	das    
  b1:	6c                   	insb   (%dx),%es:(%edi)
  b2:	69 62 00 00 61 72 63 	imul   $0x63726100,0x0(%edx),%esp
  b9:	34 2e                	xor    $0x2e,%al
  bb:	63 00                	arpl   %ax,(%eax)
  bd:	01 00                	add    %eax,(%eax)
  bf:	00 73 74             	add    %dh,0x74(%ebx)
  c2:	64 69 6e 74 2e 68 00 	imul   $0x200682e,%fs:0x74(%esi),%ebp
  c9:	02 
  ca:	00 00                	add    %al,(%eax)
  cc:	73 74                	jae    142 <__executable_start-0x8047f92>
  ce:	64                   	fs
  cf:	64                   	fs
  d0:	65                   	gs
  d1:	66                   	data16
  d2:	2e                   	cs
  d3:	68 00 02 00 00       	push   $0x200
  d8:	61                   	popa   
  d9:	72 63                	jb     13e <__executable_start-0x8047f96>
  db:	34 2e                	xor    $0x2e,%al
  dd:	68 00 01 00 00       	push   $0x100
  e2:	00 00                	add    %al,(%eax)
  e4:	05 02 64 81 04       	add    $0x4816402,%eax
  e9:	08 18                	or     %bl,(%eax)
  eb:	67 91                	addr16 xchg %eax,%ecx
  ed:	ad                   	lods   %ds:(%esi),%eax
  ee:	91                   	xchg   %eax,%ecx
  ef:	32 67 6b             	xor    0x6b(%edi),%ah
  f2:	67 08 bb 91 ab       	addr16 or %bh,-0x546f(%bp,%di)
  f7:	ca 08 5a             	lret   $0x5a08
  fa:	02 2b                	add    (%ebx),%ch
  fc:	13 08                	adc    (%eax),%ecx
  fe:	91                   	xchg   %eax,%ecx
  ff:	bb 6f cf 32 75       	mov    $0x7532cf6f,%ebx
 104:	6a 67                	push   $0x67
 106:	c9                   	leave  
 107:	c9                   	leave  
 108:	30 4b c9             	xor    %cl,-0x37(%ebx)
 10b:	08 ad 02 37 0d eb    	or     %ch,-0x14f2c8fe(%ebp)
 111:	c9                   	leave  
 112:	c9                   	leave  
 113:	02 06                	add    (%esi),%al
 115:	00 01                	add    %al,(%ecx)
 117:	01 70 00             	add    %esi,0x0(%eax)
 11a:	00 00                	add    %al,(%eax)
 11c:	02 00                	add    (%eax),%al
 11e:	4c                   	dec    %esp
 11f:	00 00                	add    %al,(%eax)
 121:	00 01                	add    %al,(%ecx)
 123:	01 fb                	add    %edi,%ebx
 125:	0e                   	push   %cs
 126:	0d 00 01 01 01       	or     $0x1010100,%eax
 12b:	01 00                	add    %eax,(%eax)
 12d:	00 00                	add    %al,(%eax)
 12f:	01 00                	add    %eax,(%eax)
 131:	00 01                	add    %al,(%ecx)
 133:	2e                   	cs
 134:	2e                   	cs
 135:	2f                   	das    
 136:	2e                   	cs
 137:	2e                   	cs
 138:	2f                   	das    
 139:	74 65                	je     1a0 <__executable_start-0x8047f34>
 13b:	73 74                	jae    1b1 <__executable_start-0x8047f23>
 13d:	73 00                	jae    13f <__executable_start-0x8047f95>
 13f:	2e                   	cs
 140:	2e                   	cs
 141:	2f                   	das    
 142:	2e                   	cs
 143:	2e                   	cs
 144:	2f                   	das    
 145:	6c                   	insb   (%dx),%es:(%edi)
 146:	69 62 00 00 63 6b 73 	imul   $0x736b6300,0x0(%edx),%esp
 14d:	75 6d                	jne    1bc <__executable_start-0x8047f18>
 14f:	2e 63 00             	arpl   %ax,%cs:(%eax)
 152:	01 00                	add    %eax,(%eax)
 154:	00 73 74             	add    %dh,0x74(%ebx)
 157:	64 69 6e 74 2e 68 00 	imul   $0x200682e,%fs:0x74(%esi),%ebp
 15e:	02 
 15f:	00 00                	add    %al,(%eax)
 161:	73 74                	jae    1d7 <__executable_start-0x8047efd>
 163:	64                   	fs
 164:	64                   	fs
 165:	65                   	gs
 166:	66                   	data16
 167:	2e                   	cs
 168:	68 00 02 00 00       	push   $0x200
 16d:	00 00                	add    %al,(%eax)
 16f:	05 02 18 83 04       	add    $0x4831802,%eax
 174:	08 03                	or     %al,(%ebx)
 176:	3f                   	aas    
 177:	01 67 67             	add    %esp,0x67(%edi)
 17a:	76 84                	jbe    100 <__executable_start-0x8047fd4>
 17c:	c9                   	leave  
 17d:	08 fd                	or     %bh,%ch
 17f:	a3 30 67 4b 08       	mov    %eax,0x84b6730
 184:	fc                   	cld    
 185:	6c                   	insb   (%dx),%es:(%edi)
 186:	59                   	pop    %ecx
 187:	02 02                	add    (%edx),%al
 189:	00 01                	add    %al,(%ecx)
 18b:	01 16                	add    %edx,(%esi)
 18d:	01 00                	add    %eax,(%eax)
 18f:	00 02                	add    %al,(%edx)
 191:	00 72 00             	add    %dh,0x0(%edx)
 194:	00 00                	add    %al,(%eax)
 196:	01 01                	add    %eax,(%ecx)
 198:	fb                   	sti    
 199:	0e                   	push   %cs
 19a:	0d 00 01 01 01       	or     $0x1010100,%eax
 19f:	01 00                	add    %eax,(%eax)
 1a1:	00 00                	add    %al,(%eax)
 1a3:	01 00                	add    %eax,(%eax)
 1a5:	00 01                	add    %al,(%ecx)
 1a7:	2e                   	cs
 1a8:	2e                   	cs
 1a9:	2f                   	das    
 1aa:	2e                   	cs
 1ab:	2e                   	cs
 1ac:	2f                   	das    
 1ad:	74 65                	je     214 <__executable_start-0x8047ec0>
 1af:	73 74                	jae    225 <__executable_start-0x8047eaf>
 1b1:	73 00                	jae    1b3 <__executable_start-0x8047f21>
 1b3:	2e                   	cs
 1b4:	2e                   	cs
 1b5:	2f                   	das    
 1b6:	2e                   	cs
 1b7:	2e                   	cs
 1b8:	2f                   	das    
 1b9:	6c                   	insb   (%dx),%es:(%edi)
 1ba:	69 62 00 2e 2e 2f 2e 	imul   $0x2e2f2e2e,0x0(%edx),%esp
 1c1:	2e                   	cs
 1c2:	2f                   	das    
 1c3:	6c                   	insb   (%dx),%es:(%edi)
 1c4:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 1cb:	00 00                	add    %al,(%eax)
 1cd:	6c                   	insb   (%dx),%es:(%edi)
 1ce:	69 62 2e 63 00 01 00 	imul   $0x10063,0x2e(%edx),%esp
 1d5:	00 73 74             	add    %dh,0x74(%ebx)
 1d8:	64                   	fs
 1d9:	64                   	fs
 1da:	65                   	gs
 1db:	66                   	data16
 1dc:	2e                   	cs
 1dd:	68 00 02 00 00       	push   $0x200
 1e2:	73 79                	jae    25d <__executable_start-0x8047e77>
 1e4:	73 63                	jae    249 <__executable_start-0x8047e8b>
 1e6:	61                   	popa   
 1e7:	6c                   	insb   (%dx),%es:(%edi)
 1e8:	6c                   	insb   (%dx),%es:(%edi)
 1e9:	2e                   	cs
 1ea:	68 00 03 00 00       	push   $0x300
 1ef:	73 74                	jae    265 <__executable_start-0x8047e6f>
 1f1:	64                   	fs
 1f2:	61                   	popa   
 1f3:	72 67                	jb     25c <__executable_start-0x8047e78>
 1f5:	2e                   	cs
 1f6:	68 00 02 00 00       	push   $0x200
 1fb:	73 74                	jae    271 <__executable_start-0x8047e63>
 1fd:	64 69 6e 74 2e 68 00 	imul   $0x200682e,%fs:0x74(%esi),%ebp
 204:	02 
 205:	00 00                	add    %al,(%eax)
 207:	00 00                	add    %al,(%eax)
 209:	05 02 a8 83 04       	add    $0x483a802,%eax
 20e:	08 03                	or     %al,(%ebx)
 210:	0c 01                	or     $0x1,%al
 212:	7c 02                	jl     216 <__executable_start-0x8047ebe>
 214:	25 13 02 41 13       	and    $0x13410213,%eax
 219:	02 3a                	add    (%edx),%bh
 21b:	13 02                	adc    (%edx),%eax
 21d:	24 13                	and    $0x13,%al
 21f:	6a 69                	push   $0x69
 221:	ae                   	scas   %es:(%edi),%al
 222:	67 08 aa 24 32       	addr16 or %ch,0x3224(%bp,%si)
 227:	69 67 08 93 bf 67 67 	imul   $0x6767bf93,0x8(%edi),%esp
 22e:	69 92 e5 08 59 d2 c0 	imul   $0x696732c0,-0x2da6f71b(%edx),%edx
 235:	32 67 69 
 238:	92                   	xchg   %eax,%edx
 239:	08 ad 02 29 0f bf    	or     %ch,-0x40f0d6fe(%ebp)
 23f:	32 a1 bd 02 2c 13    	xor    0x132c02bd(%ecx),%ah
 245:	02 70 0e             	add    0xe(%eax),%dh
 248:	f9                   	stc    
 249:	94                   	xchg   %eax,%esp
 24a:	69 92 08 59 02 5e 0f 	imul   $0x9133c10f,0x5e025908(%edx),%edx
 251:	c1 33 91 
 254:	67 7a d7             	addr16 jp 22e <__executable_start-0x8047ea6>
 257:	bb 08 f6 5d e5       	mov    $0xe55df608,%ebx
 25c:	91                   	xchg   %eax,%ecx
 25d:	76 08                	jbe    267 <__executable_start-0x8047e6d>
 25f:	d7                   	xlat   %ds:(%ebx)
 260:	83 02 28             	addl   $0x28,(%edx)
 263:	15 02 2f 13 03       	adc    $0x3132f02,%eax
 268:	71 66                	jno    2d0 <__executable_start-0x8047e04>
 26a:	03 13                	add    (%ebx),%edx
 26c:	ba 83 08 f5 08       	mov    $0x8f50883,%edx
 271:	2f                   	das    
 272:	32 69 02             	xor    0x2(%ecx),%ch
 275:	3a 14 08             	cmp    (%eax,%ecx,1),%dl
 278:	e5 08                	in     $0x8,%eax
 27a:	2f                   	das    
 27b:	ad                   	lods   %ds:(%esi),%eax
 27c:	33 67 67             	xor    0x67(%edi),%esp
 27f:	6a 08                	push   $0x8
 281:	f5                   	cmc    
 282:	91                   	xchg   %eax,%ecx
 283:	08 ab d8 21 ad 08    	or     %ch,0x8ad21d8(%ebx)
 289:	ab                   	stos   %eax,%es:(%edi)
 28a:	d8 22                	fsubs  (%edx)
 28c:	75 02                	jne    290 <__executable_start-0x8047e44>
 28e:	2c 14                	sub    $0x14,%al
 290:	e5 08                	in     $0x8,%eax
 292:	14 75                	adc    $0x75,%al
 294:	08 30                	or     %dh,(%eax)
 296:	bb 02 2c 13 bb       	mov    $0xbb132c02,%ebx
 29b:	02 2c 13             	add    (%ebx,%edx,1),%ch
 29e:	02 2c 14             	add    (%esp,%edx,1),%ch
 2a1:	02 02                	add    (%edx),%al
 2a3:	00 01                	add    %al,(%ecx)
 2a5:	01 4c 00 00          	add    %ecx,0x0(%eax,%eax,1)
 2a9:	00 02                	add    %al,(%edx)
 2ab:	00 32                	add    %dh,(%edx)
 2ad:	00 00                	add    %al,(%eax)
 2af:	00 01                	add    %al,(%ecx)
 2b1:	01 fb                	add    %edi,%ebx
 2b3:	0e                   	push   %cs
 2b4:	0d 00 01 01 01       	or     $0x1010100,%eax
 2b9:	01 00                	add    %eax,(%eax)
 2bb:	00 00                	add    %al,(%eax)
 2bd:	01 00                	add    %eax,(%eax)
 2bf:	00 01                	add    %al,(%ecx)
 2c1:	2e                   	cs
 2c2:	2e                   	cs
 2c3:	2f                   	das    
 2c4:	2e                   	cs
 2c5:	2e                   	cs
 2c6:	2f                   	das    
 2c7:	74 65                	je     32e <__executable_start-0x8047da6>
 2c9:	73 74                	jae    33f <__executable_start-0x8047d95>
 2cb:	73 00                	jae    2cd <__executable_start-0x8047e07>
 2cd:	00 6d 61             	add    %ch,0x61(%ebp)
 2d0:	69 6e 2e 63 00 01 00 	imul   $0x10063,0x2e(%esi),%ebp
 2d7:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 2db:	2e                   	cs
 2dc:	68 00 01 00 00       	push   $0x100
 2e1:	00 00                	add    %al,(%eax)
 2e3:	05 02 6c 8a 04       	add    $0x48a6c02,%eax
 2e8:	08 19                	or     %bl,(%ecx)
 2ea:	91                   	xchg   %eax,%ecx
 2eb:	a0 bb bb 59 bb       	mov    0xbb59bbbb,%al
 2f0:	59                   	pop    %ecx
 2f1:	02 02                	add    (%edx),%al
 2f3:	00 01                	add    %al,(%ecx)
 2f5:	01 41 00             	add    %eax,0x0(%ecx)
 2f8:	00 00                	add    %al,(%eax)
 2fa:	02 00                	add    (%eax),%al
 2fc:	2d 00 00 00 01       	sub    $0x1000000,%eax
 301:	01 fb                	add    %edi,%ebx
 303:	0e                   	push   %cs
 304:	0d 00 01 01 01       	or     $0x1010100,%eax
 309:	01 00                	add    %eax,(%eax)
 30b:	00 00                	add    %al,(%eax)
 30d:	01 00                	add    %eax,(%eax)
 30f:	00 01                	add    %al,(%ecx)
 311:	2e                   	cs
 312:	2e                   	cs
 313:	2f                   	das    
 314:	2e                   	cs
 315:	2e                   	cs
 316:	2f                   	das    
 317:	6c                   	insb   (%dx),%es:(%edi)
 318:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 31f:	00 00                	add    %al,(%eax)
 321:	65 6e                	outsb  %gs:(%esi),(%dx)
 323:	74 72                	je     397 <__executable_start-0x8047d3d>
 325:	79 2e                	jns    355 <__executable_start-0x8047d7f>
 327:	63 00                	arpl   %ax,(%eax)
 329:	01 00                	add    %eax,(%eax)
 32b:	00 00                	add    %al,(%eax)
 32d:	00 05 02 b0 8a 04    	add    %al,0x48ab002
 333:	08 19                	or     %bl,(%ecx)
 335:	67 02 1a             	addr16 add (%bp,%si),%bl
 338:	00 01                	add    %al,(%ecx)
 33a:	01 83 00 00 00 02    	add    %eax,0x2000000(%ebx)
 340:	00 41 00             	add    %al,0x0(%ecx)
 343:	00 00                	add    %al,(%eax)
 345:	01 01                	add    %eax,(%ecx)
 347:	fb                   	sti    
 348:	0e                   	push   %cs
 349:	0d 00 01 01 01       	or     $0x1010100,%eax
 34e:	01 00                	add    %eax,(%eax)
 350:	00 00                	add    %al,(%eax)
 352:	01 00                	add    %eax,(%eax)
 354:	00 01                	add    %al,(%ecx)
 356:	2e                   	cs
 357:	2e                   	cs
 358:	2f                   	das    
 359:	2e                   	cs
 35a:	2e                   	cs
 35b:	2f                   	das    
 35c:	6c                   	insb   (%dx),%es:(%edi)
 35d:	69 62 00 00 72 61 6e 	imul   $0x6e617200,0x0(%edx),%esp
 364:	64 6f                	outsl  %fs:(%esi),(%dx)
 366:	6d                   	insl   (%dx),%es:(%edi)
 367:	2e 63 00             	arpl   %ax,%cs:(%eax)
 36a:	01 00                	add    %eax,(%eax)
 36c:	00 73 74             	add    %dh,0x74(%ebx)
 36f:	64                   	fs
 370:	64                   	fs
 371:	65                   	gs
 372:	66                   	data16
 373:	2e                   	cs
 374:	68 00 01 00 00       	push   $0x100
 379:	73 74                	jae    3ef <__executable_start-0x8047ce5>
 37b:	64 69 6e 74 2e 68 00 	imul   $0x100682e,%fs:0x74(%esi),%ebp
 382:	01 
 383:	00 00                	add    %al,(%eax)
 385:	00 00                	add    %al,(%eax)
 387:	05 02 d0 8a 04       	add    $0x48ad002,%eax
 38c:	08 03                	or     %al,(%ebx)
 38e:	19 01                	sbb    %eax,(%ecx)
 390:	67 91                	addr16 xchg %eax,%ecx
 392:	ad                   	lods   %ds:(%esi),%eax
 393:	91                   	xchg   %eax,%ecx
 394:	33 67 6a             	xor    0x6a(%edi),%esp
 397:	91                   	xchg   %eax,%ecx
 398:	b9 ca ca 08 ad       	mov    $0xad08caca,%ecx
 39d:	08 c5                	or     %al,%ch
 39f:	ce                   	into   
 3a0:	08 2f                	or     %ch,(%edi)
 3a2:	75 33                	jne    3d7 <__executable_start-0x8047cfd>
 3a4:	69 d7 bc b0 e5 08    	imul   $0x8e5b0bc,%edi,%edx
 3aa:	e5 02                	in     $0x2,%eax
 3ac:	2b 14 02             	sub    (%edx,%eax,1),%edx
 3af:	28 13                	sub    %dl,(%ebx)
 3b1:	03 77 f2             	add    -0xe(%edi),%esi
 3b4:	03 0b                	add    (%ebx),%ecx
 3b6:	08 66 35             	or     %ah,0x35(%esi)
 3b9:	68 08 2f 3d 02       	push   $0x23d2f08
 3be:	02 00                	add    (%eax),%al
 3c0:	01 01                	add    %eax,(%ecx)
 3c2:	13 02                	adc    (%edx),%eax
 3c4:	00 00                	add    %al,(%eax)
 3c6:	02 00                	add    (%eax),%al
 3c8:	57                   	push   %edi
 3c9:	00 00                	add    %al,(%eax)
 3cb:	00 01                	add    %al,(%ecx)
 3cd:	01 fb                	add    %edi,%ebx
 3cf:	0e                   	push   %cs
 3d0:	0d 00 01 01 01       	or     $0x1010100,%eax
 3d5:	01 00                	add    %eax,(%eax)
 3d7:	00 00                	add    %al,(%eax)
 3d9:	01 00                	add    %eax,(%eax)
 3db:	00 01                	add    %al,(%ecx)
 3dd:	2e                   	cs
 3de:	2e                   	cs
 3df:	2f                   	das    
 3e0:	2e                   	cs
 3e1:	2e                   	cs
 3e2:	2f                   	das    
 3e3:	6c                   	insb   (%dx),%es:(%edi)
 3e4:	69 62 00 00 63 74 79 	imul   $0x79746300,0x0(%edx),%esp
 3eb:	70 65                	jo     452 <__executable_start-0x8047c82>
 3ed:	2e                   	cs
 3ee:	68 00 01 00 00       	push   $0x100
 3f3:	73 74                	jae    469 <__executable_start-0x8047c6b>
 3f5:	64 69 6f 2e 63 00 01 	imul   $0x10063,%fs:0x2e(%edi),%ebp
 3fc:	00 
 3fd:	00 73 74             	add    %dh,0x74(%ebx)
 400:	64                   	fs
 401:	61                   	popa   
 402:	72 67                	jb     46b <__executable_start-0x8047c69>
 404:	2e                   	cs
 405:	68 00 01 00 00       	push   $0x100
 40a:	73 74                	jae    480 <__executable_start-0x8047c54>
 40c:	64                   	fs
 40d:	64                   	fs
 40e:	65                   	gs
 40f:	66                   	data16
 410:	2e                   	cs
 411:	68 00 01 00 00       	push   $0x100
 416:	73 74                	jae    48c <__executable_start-0x8047c48>
 418:	64 69 6e 74 2e 68 00 	imul   $0x100682e,%fs:0x74(%esi),%ebp
 41f:	01 
 420:	00 00                	add    %al,(%eax)
 422:	00 00                	add    %al,(%eax)
 424:	05 02 88 8c 04       	add    $0x48c8802,%eax
 429:	08 18                	or     %bl,(%eax)
 42b:	3c 03                	cmp    $0x3,%al
 42d:	0b 08                	or     (%eax),%ecx
 42f:	90                   	nop
 430:	3c 04                	cmp    $0x4,%al
 432:	02 03                	add    (%ebx),%al
 434:	0c 08                	or     $0x8,%al
 436:	90                   	nop
 437:	66                   	data16
 438:	67 75 08             	addr16 jne 443 <__executable_start-0x8047c91>
 43b:	5b                   	pop    %ebx
 43c:	08 f5                	or     %dh,%ch
 43e:	67 68 3d 33 bb 68    	addr16 push $0x68bb333d
 444:	08 c9                	or     %cl,%cl
 446:	08 2f                	or     %ch,(%edi)
 448:	03 0f                	add    (%edi),%ecx
 44a:	2e                   	cs
 44b:	66                   	data16
 44c:	67 02 23             	addr16 add (%bp,%di),%ah
 44f:	15 3d 03 0c 2e       	adc    $0x2e0c033d,%eax
 454:	66                   	data16
 455:	67 08 4d 3d          	addr16 or %cl,0x3d(%di)
 459:	03 c6                	add    %esi,%eax
 45b:	00 2e                	add    %ch,(%esi)
 45d:	91                   	xchg   %eax,%ecx
 45e:	5d                   	pop    %ebp
 45f:	a0 08 75 5a 4d       	mov    0x4d5a7508,%al
 464:	a0 08 2f 5c 08       	mov    0x85c2f08,%al
 469:	af                   	scas   %es:(%edi),%eax
 46a:	08 d0                	or     %dl,%al
 46c:	08 4d 08             	or     %cl,0x8(%ebp)
 46f:	83 5a 08 67          	sbbl   $0x67,0x8(%edx)
 473:	5a                   	pop    %edx
 474:	08 59 5a             	or     %bl,0x5a(%ecx)
 477:	08 3d 5a 08 59 5a    	or     %bh,0x5a59085a
 47d:	08 3d 30 08 59 30    	or     %bh,0x30590830
 483:	08 59 08             	or     %bl,0x8(%ecx)
 486:	4b                   	dec    %ebx
 487:	83 30 02             	xorl   $0x2,(%eax)
 48a:	24 10                	and    $0x10,%al
 48c:	4f                   	dec    %edi
 48d:	02 5c 15 03          	add    0x3(%ebp,%edx,1),%bl
 491:	0b 58 08             	or     0x8(%eax),%ebx
 494:	4d                   	dec    %ebp
 495:	08 83 5a 08 83 5a    	or     %al,0x5a83085a(%ebx)
 49b:	08 59 5a             	or     %bl,0x5a(%ecx)
 49e:	08 3d 5a 08 59 30    	or     %bh,0x3059085a
 4a4:	08 3d 30 08 5a 84    	or     %bh,0x845a0830
 4aa:	30 08                	xor    %cl,(%eax)
 4ac:	59                   	pop    %ecx
 4ad:	30 02                	xor    %al,(%edx)
 4af:	24 15                	and    $0x15,%al
 4b1:	02 26                	add    (%esi),%ah
 4b3:	14 91                	adc    $0x91,%al
 4b5:	91                   	xchg   %eax,%ecx
 4b6:	91                   	xchg   %eax,%ecx
 4b7:	91                   	xchg   %eax,%ecx
 4b8:	02 24 15 02 3e 14 5d 	add    0x5d143e02(,%edx,1),%ah
 4bf:	d7                   	xlat   %ds:(%ebx)
 4c0:	02 28                	add    (%eax),%ch
 4c2:	14 5d                	adc    $0x5d,%al
 4c4:	d7                   	xlat   %ds:(%ebx)
 4c5:	67 79 02             	addr16 jns 4ca <__executable_start-0x8047c0a>
 4c8:	36                   	ss
 4c9:	14 5e                	adc    $0x5e,%al
 4cb:	d8 75 02             	fdivs  0x2(%ebp)
 4ce:	41                   	inc    %ecx
 4cf:	15 03 0a 2e 02       	adc    $0x22e0a03,%eax
 4d4:	27                   	daa    
 4d5:	13 31                	adc    (%ecx),%esi
 4d7:	03 d7                	add    %edi,%edx
 4d9:	7e 02                	jle    4dd <__executable_start-0x8047bf7>
 4db:	27                   	daa    
 4dc:	01 03                	add    %eax,(%ebx)
 4de:	ad                   	lods   %ds:(%esi),%eax
 4df:	01 08                	add    %ecx,(%eax)
 4e1:	20 03                	and    %al,(%ebx)
 4e3:	09 82 68 93 08 cb    	or     %eax,-0x34f76c98(%edx)
 4e9:	e5 30                	in     $0x30,%eax
 4eb:	e5 30                	in     $0x30,%eax
 4ed:	e5 30                	in     $0x30,%eax
 4ef:	e5 30                	in     $0x30,%eax
 4f1:	e5 30                	in     $0x30,%eax
 4f3:	e5 30                	in     $0x30,%eax
 4f5:	4b                   	dec    %ebx
 4f6:	24 d4                	and    $0xd4,%al
 4f8:	5b                   	pop    %ebx
 4f9:	e5 bb                	in     $0xbb,%eax
 4fb:	e7 9f                	out    %eax,$0x9f
 4fd:	a0 4b 08 6b 02       	mov    0x26b084b,%al
 502:	26 11 08             	adc    %ecx,%es:(%eax)
 505:	af                   	scas   %es:(%edi),%eax
 506:	a0 f3 e8 9f d8       	mov    0xd89fe8f3,%al
 50b:	4b                   	dec    %ebx
 50c:	a0 4b 08 6a 9f       	mov    0x9f6a084b,%al
 511:	2f                   	das    
 512:	02 26                	add    (%esi),%ah
 514:	11 08                	adc    %ecx,(%eax)
 516:	85 9f a0 9f e7 9f    	test   %ebx,-0x60186060(%edi)
 51c:	08 cb                	or     %cl,%bl
 51e:	a0 4b a2 2d 9f       	mov    0x9f2da24b,%al
 523:	31 9f 31 a0 4b a2    	xor    %ebx,-0x5db45fcf(%edi)
 529:	2d 9f 31 9f 31       	sub    $0x319f319f,%eax
 52e:	9f                   	lahf   
 52f:	31 4e 3d             	xor    %ecx,0x3d(%esi)
 532:	03 0e                	add    (%esi),%ecx
 534:	2e 03 0b             	add    %cs:(%ebx),%ecx
 537:	08 e4                	or     %ah,%ah
 539:	75 68                	jne    5a3 <__executable_start-0x8047b31>
 53b:	bb 08 67 bb 08       	mov    $0x8bb6708,%ebx
 540:	67 67 7a 02          	addr16 jp 546 <__executable_start-0x8047b8e>
 544:	28 17                	sub    %dl,(%edi)
 546:	67 75 5a             	addr16 jne 5a3 <__executable_start-0x8047b31>
 549:	02 28                	add    (%eax),%ch
 54b:	13 9f 02 3b 13 02    	adc    0x2133b02(%edi),%ebx
 551:	2a 13                	sub    (%ebx),%dl
 553:	03 7a 4a             	add    0x4a(%edx),%edi
 556:	03 0e                	add    (%esi),%ecx
 558:	f2 08 91 2f 9d 08 ae 	repnz or %dl,-0x51f762d1(%ecx)
 55f:	02 2b                	add    (%ebx),%ch
 561:	13 a1 02 3c 13 67    	adc    0x67133c02(%ecx),%esp
 567:	77 bb                	ja     524 <__executable_start-0x8047bb0>
 569:	08 f3                	or     %dh,%bl
 56b:	67 08 4b 68          	addr16 or %cl,0x68(%bp,%di)
 56f:	08 2f                	or     %ch,(%edi)
 571:	08 4c bb 08          	or     %cl,0x8(%ebx,%edi,4)
 575:	f3 2f                	repz das 
 577:	08 ab 84 bb 08 f3    	or     %ch,-0xcf7447c(%ebx)
 57d:	79 bb                	jns    53a <__executable_start-0x8047b9a>
 57f:	2f                   	das    
 580:	08 2d e6 03 09 2e    	or     %ch,0x2e0903e6
 586:	68 08 67 02 27       	push   $0x27026708
 58b:	13 91 08 9d bc 08    	adc    0x8bc9d08(%ecx),%edx
 591:	67 02 27             	addr16 add (%bx),%ah
 594:	13 35 69 67 08 e6    	adc    0xe6086769,%esi
 59a:	03 09                	add    (%ecx),%ecx
 59c:	2e                   	cs
 59d:	c9                   	leave  
 59e:	67 76 5e             	addr16 jbe 5ff <__executable_start-0x8047ad5>
 5a1:	d7                   	xlat   %ds:(%ebx)
 5a2:	67 08 13             	addr16 or %dl,(%bp,%di)
 5a5:	bb e7 02 28 13       	mov    $0x132802e7,%ebx
 5aa:	91                   	xchg   %eax,%ecx
 5ab:	b9 bc 30 81 08       	mov    $0x88130bc,%ecx
 5b0:	13 08                	adc    (%eax),%ecx
 5b2:	1f                   	pop    %ds
 5b3:	08 65 bd             	or     %ah,-0x43(%ebp)
 5b6:	a0 2f b9 bc bb       	mov    0xbbbcb92f,%al
 5bb:	91                   	xchg   %eax,%ecx
 5bc:	b9 bc 30 08 b9       	mov    $0xb90830bc,%ecx
 5c1:	4b                   	dec    %ebx
 5c2:	08 1f                	or     %bl,(%edi)
 5c4:	08 1f                	or     %bl,(%edi)
 5c6:	bd 2f b9 bc bc       	mov    $0xbcbcb92f,%ebp
 5cb:	bc 67 67 03 5b       	mov    $0x5b036767,%esp
 5d0:	66 03 27             	add    (%edi),%sp
 5d3:	9e                   	sahf   
 5d4:	02 06                	add    (%esi),%al
 5d6:	00 01                	add    %al,(%ecx)
 5d8:	01 4d 01             	add    %ecx,0x1(%ebp)
 5db:	00 00                	add    %al,(%eax)
 5dd:	02 00                	add    (%eax),%al
 5df:	35 00 00 00 01       	xor    $0x1000000,%eax
 5e4:	01 fb                	add    %edi,%ebx
 5e6:	0e                   	push   %cs
 5e7:	0d 00 01 01 01       	or     $0x1010100,%eax
 5ec:	01 00                	add    %eax,(%eax)
 5ee:	00 00                	add    %al,(%eax)
 5f0:	01 00                	add    %eax,(%eax)
 5f2:	00 01                	add    %al,(%ecx)
 5f4:	2e                   	cs
 5f5:	2e                   	cs
 5f6:	2f                   	das    
 5f7:	2e                   	cs
 5f8:	2e                   	cs
 5f9:	2f                   	das    
 5fa:	6c                   	insb   (%dx),%es:(%edi)
 5fb:	69 62 00 00 73 74 72 	imul   $0x72747300,0x0(%edx),%esp
 602:	69 6e 67 2e 63 00 01 	imul   $0x100632e,0x67(%esi),%ebp
 609:	00 00                	add    %al,(%eax)
 60b:	73 74                	jae    681 <__executable_start-0x8047a53>
 60d:	64                   	fs
 60e:	64                   	fs
 60f:	65                   	gs
 610:	66                   	data16
 611:	2e                   	cs
 612:	68 00 01 00 00       	push   $0x100
 617:	00 00                	add    %al,(%eax)
 619:	05 02 e0 9b 04       	add    $0x49be002,%eax
 61e:	08 1a                	or     %bl,(%edx)
 620:	66 67 68 02 38       	addr16 pushw $0x3802
 625:	13 02                	adc    (%edx),%eax
 627:	38 15 08 49 08 31    	cmp    %dl,0x31084908
 62d:	3d 35 66 67 68       	cmp    $0x68676635,%eax
 632:	02 38                	add    (%eax),%bh
 634:	13 02                	adc    (%edx),%eax
 636:	38 14 84             	cmp    %dl,(%esp,%eax,4)
 639:	2f                   	das    
 63a:	08 2d 08 17 67 67    	or     %ch,0x67671708
 640:	2f                   	das    
 641:	08 2d e8 3d 03 09    	or     %ch,0x9033de8
 647:	2e                   	cs
 648:	66 67 68 02 38       	addr16 pushw $0x3802
 64d:	13 02                	adc    (%edx),%eax
 64f:	38 15 f3 08 c6 08    	cmp    %dl,0x8c608f3
 655:	bd 59 03 0a 2e       	mov    $0x2e0a0359,%ebp
 65a:	66 67 68 67 81       	addr16 pushw $0x8167
 65f:	02 2c 13             	add    (%ebx,%edx,1),%ch
 662:	02 2c 16             	add    (%esi,%edx,1),%ch
 665:	4b                   	dec    %ebx
 666:	63 08                	arpl   %cx,(%eax)
 668:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 669:	02 2b                	add    (%ebx),%ch
 66b:	13 36                	adc    (%esi),%esi
 66d:	66 67 68 02 38       	addr16 pushw $0x3802
 672:	15 ad 56 08 86       	adc    $0x860856ad,%eax
 677:	59                   	pop    %ecx
 678:	03 09                	add    (%ecx),%ecx
 67a:	2e                   	cs
 67b:	66 68 02 32          	pushw  $0x3202
 67f:	15 ad 59 9f 76       	adc    $0x769f59ad,%eax
 684:	67 03 09             	addr16 add (%bx,%di),%ecx
 687:	2e                   	cs
 688:	66 91                	xchg   %ax,%cx
 68a:	08 ff                	or     %bh,%bh
 68c:	08 5a 21             	or     %bl,0x21(%edx)
 68f:	3d 36 66 2f 08       	cmp    $0x82f6636,%eax
 694:	ad                   	lods   %ds:(%esi),%eax
 695:	56                   	push   %esi
 696:	d9 59 35             	fstps  0x35(%ecx)
 699:	66                   	data16
 69a:	67 76 2f             	addr16 jbe 6cc <__executable_start-0x8047a08>
 69d:	ad                   	lods   %ds:(%esi),%eax
 69e:	64 d9 3d 03 09 2e 66 	fnstcw %fs:0x662e0903
 6a5:	91                   	xchg   %eax,%ecx
 6a6:	08 ff                	or     %bh,%bh
 6a8:	08 5a 21             	or     %bl,0x21(%edx)
 6ab:	3d 36 66 d7 d8       	cmp    $0xd8d76636,%eax
 6b0:	86 91 02 22 13 aa    	xchg   %dl,-0x55ecddfe(%ecx)
 6b6:	08 4f 59             	or     %cl,0x59(%edi)
 6b9:	03 25 2e 69 67 81    	add    0x8167692e,%esp
 6bf:	02 2c 17             	add    (%edi,%edx,1),%ch
 6c2:	7e 02                	jle    6c6 <__executable_start-0x8047a0e>
 6c4:	2c 17                	sub    $0x17,%al
 6c6:	83 02 32             	addl   $0x32,(%edx)
 6c9:	1a a0 83 77 03 75    	sbb    0x75037783(%eax),%ah
 6cf:	66 03 0f             	add    (%edi),%cx
 6d2:	08 ba 67 2f 49 08    	or     %bh,0x8492f67(%edx)
 6d8:	ae                   	scas   %es:(%edi),%al
 6d9:	a0 67 cb 83 3d       	mov    0x3d83cb67,%al
 6de:	34 66                	xor    $0x66,%al
 6e0:	68 02 38 15 f1       	push   $0xf1153802
 6e5:	08 31                	or     %dh,(%ecx)
 6e7:	3d 36 66 68 80       	cmp    $0x80686636,%eax
 6ec:	02 2c 14             	add    (%esp,%edx,1),%ch
 6ef:	d8 bb 34 69 91 49    	fdivrs 0x49916934(%ebx)
 6f5:	08 76 3d             	or     %dh,0x3d(%esi)
 6f8:	03 0d 2e 69 67 81    	add    0x8167692e,%ecx
 6fe:	02 2c 15 d7 7f 02 2c 	add    0x2c027fd7(,%edx,1),%ch
 705:	17                   	pop    %ss
 706:	91                   	xchg   %eax,%ecx
 707:	83 67 08 83          	andl   $0xffffff83,0x8(%edi)
 70b:	bc 3d 03 0e 2e       	mov    $0x2e0e033d,%esp
 710:	69 67 81 02 2c 15 d7 	imul   $0xd7152c02,-0x7f(%edi),%esp
 717:	d7                   	xlat   %ds:(%ebx)
 718:	a8 02                	test   $0x2,%al
 71a:	2c 16                	sub    $0x16,%al
 71c:	84 08                	test   %cl,(%eax)
 71e:	21 83 67 08 c9 e6    	and    %eax,-0x1936f799(%ebx)
 724:	91                   	xchg   %eax,%ecx
 725:	02 02                	add    (%edx),%al
 727:	00 01                	add    %al,(%ecx)
 729:	01 b0 00 00 00 02    	add    %esi,0x2000000(%eax)
 72f:	00 39                	add    %bh,(%ecx)
 731:	00 00                	add    %al,(%eax)
 733:	00 01                	add    %al,(%ecx)
 735:	01 fb                	add    %edi,%ebx
 737:	0e                   	push   %cs
 738:	0d 00 01 01 01       	or     $0x1010100,%eax
 73d:	01 00                	add    %eax,(%eax)
 73f:	00 00                	add    %al,(%eax)
 741:	01 00                	add    %eax,(%eax)
 743:	00 01                	add    %al,(%ecx)
 745:	2e                   	cs
 746:	2e                   	cs
 747:	2f                   	das    
 748:	2e                   	cs
 749:	2e                   	cs
 74a:	2f                   	das    
 74b:	6c                   	insb   (%dx),%es:(%edi)
 74c:	69 62 00 00 61 72 69 	imul   $0x69726100,0x0(%edx),%esp
 753:	74 68                	je     7bd <__executable_start-0x8047917>
 755:	6d                   	insl   (%dx),%es:(%edi)
 756:	65                   	gs
 757:	74 69                	je     7c2 <__executable_start-0x8047912>
 759:	63 2e                	arpl   %bp,(%esi)
 75b:	63 00                	arpl   %ax,(%eax)
 75d:	01 00                	add    %eax,(%eax)
 75f:	00 73 74             	add    %dh,0x74(%ebx)
 762:	64 69 6e 74 2e 68 00 	imul   $0x100682e,%fs:0x74(%esi),%ebp
 769:	01 
 76a:	00 00                	add    %al,(%eax)
 76c:	00 00                	add    %al,(%eax)
 76e:	05 02 6c a5 04       	add    $0x4a56c02,%eax
 773:	08 03                	or     %al,(%ebx)
 775:	1a 01                	sbb    (%ecx),%al
 777:	08 21                	or     %ah,(%ecx)
 779:	c9                   	leave  
 77a:	69 e8 3d 34 6c 75    	imul   $0x756c343d,%eax,%ebp
 780:	92                   	xchg   %eax,%edx
 781:	4b                   	dec    %ebx
 782:	4c                   	dec    %esp
 783:	92                   	xchg   %eax,%edx
 784:	4b                   	dec    %ebx
 785:	4c                   	dec    %esp
 786:	92                   	xchg   %eax,%edx
 787:	4b                   	dec    %ebx
 788:	4c                   	dec    %esp
 789:	92                   	xchg   %eax,%edx
 78a:	4b                   	dec    %ebx
 78b:	4c                   	dec    %esp
 78c:	75 4b                	jne    7d9 <__executable_start-0x80478fb>
 78e:	3d 34 08 f3 03       	cmp    $0x3f30834,%eax
 793:	1a 08                	sbb    (%eax),%cl
 795:	3c d7                	cmp    $0xd7,%al
 797:	c9                   	leave  
 798:	67 68 02 7b 18 08    	addr16 push $0x8187b02
 79e:	4b                   	dec    %ebx
 79f:	e7 c9                	out    %eax,$0xc9
 7a1:	d7                   	xlat   %ds:(%ebx)
 7a2:	02 56 13             	add    0x13(%esi),%dl
 7a5:	02 56 15             	add    0x15(%esi),%dl
 7a8:	88 08                	mov    %cl,(%eax)
 7aa:	d7                   	xlat   %ds:(%ebx)
 7ab:	02 31                	add    (%ecx),%dh
 7ad:	13 6c 08 c9          	adc    -0x37(%eax,%ecx,1),%ebp
 7b1:	08 f3                	or     %dh,%bl
 7b3:	08 f3                	or     %dh,%bl
 7b5:	02 26                	add    (%esi),%ah
 7b7:	13 02                	adc    (%edx),%eax
 7b9:	2b 13                	sub    (%ebx),%edx
 7bb:	34 08                	xor    $0x8,%al
 7bd:	d7                   	xlat   %ds:(%ebx)
 7be:	02 31                	add    (%ecx),%dh
 7c0:	13 03                	adc    (%ebx),%eax
 7c2:	0c 66                	or     $0x66,%al
 7c4:	08 c9                	or     %cl,%cl
 7c6:	08 e5                	or     %ah,%ch
 7c8:	33 08                	xor    (%eax),%ecx
 7ca:	c9                   	leave  
 7cb:	02 25 13 33 08 c9    	add    0xc9083313,%ah
 7d1:	08 e5                	or     %ah,%ch
 7d3:	33 08                	xor    (%eax),%ecx
 7d5:	c9                   	leave  
 7d6:	02 25 13 02 02 00    	add    0x20213,%ah
 7dc:	01 01                	add    %eax,(%ecx)
 7de:	60                   	pusha  
 7df:	00 00                	add    %al,(%eax)
 7e1:	00 02                	add    %al,(%edx)
 7e3:	00 43 00             	add    %al,0x0(%ebx)
 7e6:	00 00                	add    %al,(%eax)
 7e8:	01 01                	add    %eax,(%ecx)
 7ea:	fb                   	sti    
 7eb:	0e                   	push   %cs
 7ec:	0d 00 01 01 01       	or     $0x1010100,%eax
 7f1:	01 00                	add    %eax,(%eax)
 7f3:	00 00                	add    %al,(%eax)
 7f5:	01 00                	add    %eax,(%eax)
 7f7:	00 01                	add    %al,(%ecx)
 7f9:	2e                   	cs
 7fa:	2e                   	cs
 7fb:	2f                   	das    
 7fc:	2e                   	cs
 7fd:	2e                   	cs
 7fe:	2f                   	das    
 7ff:	6c                   	insb   (%dx),%es:(%edi)
 800:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 807:	00 2e                	add    %ch,(%esi)
 809:	2e                   	cs
 80a:	2f                   	das    
 80b:	2e                   	cs
 80c:	2e                   	cs
 80d:	2f                   	das    
 80e:	6c                   	insb   (%dx),%es:(%edi)
 80f:	69 62 00 00 64 65 62 	imul   $0x62656400,0x0(%edx),%esp
 816:	75 67                	jne    87f <__executable_start-0x8047855>
 818:	2e 63 00             	arpl   %ax,%cs:(%eax)
 81b:	01 00                	add    %eax,(%eax)
 81d:	00 73 74             	add    %dh,0x74(%ebx)
 820:	64                   	fs
 821:	61                   	popa   
 822:	72 67                	jb     88b <__executable_start-0x8047849>
 824:	2e                   	cs
 825:	68 00 02 00 00       	push   $0x200
 82a:	00 00                	add    %al,(%eax)
 82c:	05 02 3c aa 04       	add    $0x4aa3c02,%eax
 831:	08 03                	or     %al,(%ebx)
 833:	0b 01                	or     (%ecx),%eax
 835:	69 08 f4 67 08 21    	imul   $0x210867f4,(%eax),%ecx
 83b:	bd 5a 02 0c 00       	mov    $0xc025a,%ebp
 840:	01 01                	add    %eax,(%ecx)
 842:	bc 00 00 00 02       	mov    $0x2000000,%esp
 847:	00 5e 00             	add    %bl,0x0(%esi)
 84a:	00 00                	add    %al,(%eax)
 84c:	01 01                	add    %eax,(%ecx)
 84e:	fb                   	sti    
 84f:	0e                   	push   %cs
 850:	0d 00 01 01 01       	or     $0x1010100,%eax
 855:	01 00                	add    %eax,(%eax)
 857:	00 00                	add    %al,(%eax)
 859:	01 00                	add    %eax,(%eax)
 85b:	00 01                	add    %al,(%ecx)
 85d:	2e                   	cs
 85e:	2e                   	cs
 85f:	2f                   	das    
 860:	2e                   	cs
 861:	2e                   	cs
 862:	2f                   	das    
 863:	6c                   	insb   (%dx),%es:(%edi)
 864:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 86b:	00 2e                	add    %ch,(%esi)
 86d:	2e                   	cs
 86e:	2f                   	das    
 86f:	2e                   	cs
 870:	2e                   	cs
 871:	2f                   	das    
 872:	6c                   	insb   (%dx),%es:(%edi)
 873:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 87a:	2f                   	das    
 87b:	2e 2e 00 00          	add    %al,%cs:(%eax)
 87f:	73 79                	jae    8fa <__executable_start-0x80477da>
 881:	73 63                	jae    8e6 <__executable_start-0x80477ee>
 883:	61                   	popa   
 884:	6c                   	insb   (%dx),%es:(%edi)
 885:	6c                   	insb   (%dx),%es:(%edi)
 886:	2e 63 00             	arpl   %ax,%cs:(%eax)
 889:	01 00                	add    %eax,(%eax)
 88b:	00 73 79             	add    %dh,0x79(%ebx)
 88e:	73 63                	jae    8f3 <__executable_start-0x80477e1>
 890:	61                   	popa   
 891:	6c                   	insb   (%dx),%es:(%edi)
 892:	6c                   	insb   (%dx),%es:(%edi)
 893:	2e                   	cs
 894:	68 00 01 00 00       	push   $0x100
 899:	73 79                	jae    914 <__executable_start-0x80477c0>
 89b:	73 63                	jae    900 <__executable_start-0x80477d4>
 89d:	61                   	popa   
 89e:	6c                   	insb   (%dx),%es:(%edi)
 89f:	6c                   	insb   (%dx),%es:(%edi)
 8a0:	2d 6e 72 2e 68       	sub    $0x682e726e,%eax
 8a5:	00 02                	add    %al,(%edx)
 8a7:	00 00                	add    %al,(%eax)
 8a9:	00 00                	add    %al,(%eax)
 8ab:	05 02 98 aa 04       	add    $0x4aa9802,%eax
 8b0:	08 03                	or     %al,(%ebx)
 8b2:	c1 00 01             	roll   $0x1,(%eax)
 8b5:	67 9f                	addr16 lahf 
 8b7:	02 24 18             	add    (%eax,%ebx,1),%ah
 8ba:	66 c9                	leavew 
 8bc:	02 24 17             	add    (%edi,%edx,1),%ah
 8bf:	67 f3 32 67 f3       	repz addr16 xor -0xd(%bx),%ah
 8c4:	32 67 08             	xor    0x8(%edi),%ah
 8c7:	75 32                	jne    8fb <__executable_start-0x80477d9>
 8c9:	67 08 4b 32          	addr16 or %cl,0x32(%bp,%di)
 8cd:	67 f3 32 67 f3       	repz addr16 xor -0xd(%bx),%ah
 8d2:	32 67 08             	xor    0x8(%edi),%ah
 8d5:	59                   	pop    %ecx
 8d6:	32 67 08             	xor    0x8(%edi),%ah
 8d9:	59                   	pop    %ecx
 8da:	32 67 f3             	xor    -0xd(%edi),%ah
 8dd:	32 67 f3             	xor    -0xd(%edi),%ah
 8e0:	32 67 c9             	xor    -0x37(%edi),%ah
 8e3:	32 67 08             	xor    0x8(%edi),%ah
 8e6:	2f                   	das    
 8e7:	32 67 c9             	xor    -0x37(%edi),%ah
 8ea:	32 67 08             	xor    0x8(%edi),%ah
 8ed:	4b                   	dec    %ebx
 8ee:	32 67 08             	xor    0x8(%edi),%ah
 8f1:	4b                   	dec    %ebx
 8f2:	32 67 08             	xor    0x8(%edi),%ah
 8f5:	75 32                	jne    929 <__executable_start-0x80477ab>
 8f7:	67 08 4b 32          	addr16 or %cl,0x32(%bp,%di)
 8fb:	67 f3 02 02          	repz addr16 add (%bp,%si),%al
 8ff:	00 01                	add    %al,(%ecx)
 901:	01 8a 00 00 00 02    	add    %ecx,0x2000000(%edx)
 907:	00 45 00             	add    %al,0x0(%ebp)
 90a:	00 00                	add    %al,(%eax)
 90c:	01 01                	add    %eax,(%ecx)
 90e:	fb                   	sti    
 90f:	0e                   	push   %cs
 910:	0d 00 01 01 01       	or     $0x1010100,%eax
 915:	01 00                	add    %eax,(%eax)
 917:	00 00                	add    %al,(%eax)
 919:	01 00                	add    %eax,(%eax)
 91b:	00 01                	add    %al,(%ecx)
 91d:	2e                   	cs
 91e:	2e                   	cs
 91f:	2f                   	das    
 920:	2e                   	cs
 921:	2e                   	cs
 922:	2f                   	das    
 923:	6c                   	insb   (%dx),%es:(%edi)
 924:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 92b:	00 2e                	add    %ch,(%esi)
 92d:	2e                   	cs
 92e:	2f                   	das    
 92f:	2e                   	cs
 930:	2e                   	cs
 931:	2f                   	das    
 932:	6c                   	insb   (%dx),%es:(%edi)
 933:	69 62 00 00 63 6f 6e 	imul   $0x6e6f6300,0x0(%edx),%esp
 93a:	73 6f                	jae    9ab <__executable_start-0x8047729>
 93c:	6c                   	insb   (%dx),%es:(%edi)
 93d:	65 2e 63 00          	arpl   %ax,%cs:%gs:(%eax)
 941:	01 00                	add    %eax,(%eax)
 943:	00 73 74             	add    %dh,0x74(%ebx)
 946:	64                   	fs
 947:	61                   	popa   
 948:	72 67                	jb     9b1 <__executable_start-0x8047723>
 94a:	2e                   	cs
 94b:	68 00 02 00 00       	push   $0x200
 950:	00 00                	add    %al,(%eax)
 952:	05 02 e0 ac 04       	add    $0x4ace002,%eax
 957:	08 03                	or     %al,(%ebx)
 959:	0a 01                	or     (%ecx),%al
 95b:	66                   	data16
 95c:	08 91 33 6a 67 08    	or     %dl,0x8676a33(%ecx)
 962:	af                   	scas   %es:(%edi),%eax
 963:	3d 35 66 02 22       	cmp    $0x22026635,%eax
 968:	13 bc 59 34 66 67 08 	adc    0x8676634(%ecx,%ebx,2),%edi
 96f:	9f                   	lahf   
 970:	3d 03 13 2e 68       	cmp    $0x682e1303,%eax
 975:	67 75 67             	addr16 jne 9df <__executable_start-0x80476f5>
 978:	08 f3                	or     %dh,%bl
 97a:	ad                   	lods   %ds:(%esi),%eax
 97b:	3d 34 bb 67 08       	cmp    $0x867bb34,%eax
 980:	4b                   	dec    %ebx
 981:	f3 ad                	rep lods %ds:(%esi),%eax
 983:	e5 33                	in     $0x33,%eax
 985:	67 c9                	addr16 leave 
 987:	02 2c 13             	add    (%ebx,%edx,1),%ch
 98a:	91                   	xchg   %eax,%ecx
 98b:	02 02                	add    (%edx),%al
 98d:	00 01                	add    %al,(%ecx)
 98f:	01 4a 00             	add    %ecx,0x0(%edx)
 992:	00 00                	add    %al,(%eax)
 994:	02 00                	add    (%eax),%al
 996:	28 00                	sub    %al,(%eax)
 998:	00 00                	add    %al,(%eax)
 99a:	01 01                	add    %eax,(%ecx)
 99c:	fb                   	sti    
 99d:	0e                   	push   %cs
 99e:	0d 00 01 01 01       	or     $0x1010100,%eax
 9a3:	01 00                	add    %eax,(%eax)
 9a5:	00 00                	add    %al,(%eax)
 9a7:	01 00                	add    %eax,(%eax)
 9a9:	00 01                	add    %al,(%ecx)
 9ab:	2e                   	cs
 9ac:	2e                   	cs
 9ad:	2f                   	das    
 9ae:	2e                   	cs
 9af:	2e                   	cs
 9b0:	2f                   	das    
 9b1:	6c                   	insb   (%dx),%es:(%edi)
 9b2:	69 62 00 00 64 65 62 	imul   $0x62656400,0x0(%edx),%esp
 9b9:	75 67                	jne    a22 <__executable_start-0x80476b2>
 9bb:	2e 63 00             	arpl   %ax,%cs:(%eax)
 9be:	01 00                	add    %eax,(%eax)
 9c0:	00 00                	add    %al,(%eax)
 9c2:	00 05 02 80 ae 04    	add    %al,0x4ae8002
 9c8:	08 03                	or     %al,(%ebx)
 9ca:	0d 01 6a bb 77       	or     $0x77bb6a01,%eax
 9cf:	08 73 80             	or     %dh,-0x80(%ebx)
 9d2:	67 57                	addr16 push %edi
 9d4:	4e                   	dec    %esi
 9d5:	bc d8 75 be 02       	mov    $0x2be75d8,%esp
 9da:	02 00                	add    (%eax),%al
 9dc:	01 01                	add    %eax,(%ecx)

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	10 00                	adc    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	ff                   	(bad)  
   5:	ff                   	(bad)  
   6:	ff                   	(bad)  
   7:	ff 01                	incl   (%ecx)
   9:	00 01                	add    %al,(%ecx)
   b:	7c 08                	jl     15 <__executable_start-0x80480bf>
   d:	0c 04                	or     $0x4,%al
   f:	04 88                	add    $0x88,%al
  11:	01 00                	add    %eax,(%eax)
  13:	00 14 00             	add    %dl,(%eax,%eax,1)
  16:	00 00                	add    %al,(%eax)
  18:	00 00                	add    %al,(%eax)
  1a:	00 00                	add    %al,(%eax)
  1c:	d4 80                	aam    $0xffffff80
  1e:	04 08                	add    $0x8,%al
  20:	8d 00                	lea    (%eax),%eax
  22:	00 00                	add    %al,(%eax)
  24:	41                   	inc    %ecx
  25:	0e                   	push   %cs
  26:	08 42 85             	or     %al,-0x7b(%edx)
  29:	02 0d 05 10 00 00    	add    0x1005,%cl
  2f:	00 ff                	add    %bh,%bh
  31:	ff                   	(bad)  
  32:	ff                   	(bad)  
  33:	ff 01                	incl   (%ecx)
  35:	00 01                	add    %al,(%ecx)
  37:	7c 08                	jl     41 <__executable_start-0x8048093>
  39:	0c 04                	or     $0x4,%al
  3b:	04 88                	add    $0x88,%al
  3d:	01 00                	add    %eax,(%eax)
  3f:	00 14 00             	add    %dl,(%eax,%eax,1)
  42:	00 00                	add    %al,(%eax)
  44:	2c 00                	sub    $0x0,%al
  46:	00 00                	add    %al,(%eax)
  48:	64 81 04 08 25 00 00 	addl   $0x25,%fs:(%eax,%ecx,1)
  4f:	00 
  50:	41                   	inc    %ecx
  51:	0e                   	push   %cs
  52:	08 42 85             	or     %al,-0x7b(%edx)
  55:	02 0d 05 14 00 00    	add    0x1405,%cl
  5b:	00 2c 00             	add    %ch,(%eax,%eax,1)
  5e:	00 00                	add    %al,(%eax)
  60:	89 81 04 08 cd 00    	mov    %eax,0xcd0804(%ecx)
  66:	00 00                	add    %al,(%eax)
  68:	41                   	inc    %ecx
  69:	0e                   	push   %cs
  6a:	08 42 85             	or     %al,-0x7b(%edx)
  6d:	02 0d 05 18 00 00    	add    0x1805,%cl
  73:	00 2c 00             	add    %ch,(%eax,%eax,1)
  76:	00 00                	add    %al,(%eax)
  78:	56                   	push   %esi
  79:	82                   	(bad)  
  7a:	04 08                	add    $0x8,%al
  7c:	c2 00 00             	ret    $0x0
  7f:	00 41 0e             	add    %al,0xe(%ecx)
  82:	08 42 85             	or     %al,-0x7b(%edx)
  85:	02 0d 05 6c 83 03    	add    0x3836c05,%cl
  8b:	00 10                	add    %dl,(%eax)
  8d:	00 00                	add    %al,(%eax)
  8f:	00 ff                	add    %bh,%bh
  91:	ff                   	(bad)  
  92:	ff                   	(bad)  
  93:	ff 01                	incl   (%ecx)
  95:	00 01                	add    %al,(%ecx)
  97:	7c 08                	jl     a1 <__executable_start-0x8048033>
  99:	0c 04                	or     $0x4,%al
  9b:	04 88                	add    $0x88,%al
  9d:	01 00                	add    %eax,(%eax)
  9f:	00 14 00             	add    %dl,(%eax,%eax,1)
  a2:	00 00                	add    %al,(%eax)
  a4:	8c 00                	mov    %es,(%eax)
  a6:	00 00                	add    %al,(%eax)
  a8:	18 83 04 08 8f 00    	sbb    %al,0x8f0804(%ebx)
  ae:	00 00                	add    %al,(%eax)
  b0:	41                   	inc    %ecx
  b1:	0e                   	push   %cs
  b2:	08 42 85             	or     %al,-0x7b(%edx)
  b5:	02 0d 05 10 00 00    	add    0x1005,%cl
  bb:	00 ff                	add    %bh,%bh
  bd:	ff                   	(bad)  
  be:	ff                   	(bad)  
  bf:	ff 01                	incl   (%ecx)
  c1:	00 01                	add    %al,(%ecx)
  c3:	7c 08                	jl     cd <__executable_start-0x8048007>
  c5:	0c 04                	or     $0x4,%al
  c7:	04 88                	add    $0x88,%al
  c9:	01 00                	add    %eax,(%eax)
  cb:	00 18                	add    %bl,(%eax)
  cd:	00 00                	add    %al,(%eax)
  cf:	00 b8 00 00 00 a8    	add    %bh,-0x58000000(%eax)
  d5:	83 04 08 d1          	addl   $0xffffffd1,(%eax,%ecx,1)
  d9:	00 00                	add    %al,(%eax)
  db:	00 41 0e             	add    %al,0xe(%ecx)
  de:	08 42 85             	or     %al,-0x7b(%edx)
  e1:	02 0d 05 64 83 03    	add    0x3836405,%cl
  e7:	00 14 00             	add    %dl,(%eax,%eax,1)
  ea:	00 00                	add    %al,(%eax)
  ec:	b8 00 00 00 79       	mov    $0x79000000,%eax
  f1:	84 04 08             	test   %al,(%eax,%ecx,1)
  f4:	36 00 00             	add    %al,%ss:(%eax)
  f7:	00 41 0e             	add    %al,0xe(%ecx)
  fa:	08 42 85             	or     %al,-0x7b(%edx)
  fd:	02 0d 05 14 00 00    	add    0x1405,%cl
 103:	00 b8 00 00 00 af    	add    %bh,-0x51000000(%eax)
 109:	84 04 08             	test   %al,(%eax,%ecx,1)
 10c:	32 00                	xor    (%eax),%al
 10e:	00 00                	add    %al,(%eax)
 110:	41                   	inc    %ecx
 111:	0e                   	push   %cs
 112:	08 42 85             	or     %al,-0x7b(%edx)
 115:	02 0d 05 14 00 00    	add    0x1405,%cl
 11b:	00 b8 00 00 00 e1    	add    %bh,-0x1f000000(%eax)
 121:	84 04 08             	test   %al,(%eax,%ecx,1)
 124:	5c                   	pop    %esp
 125:	00 00                	add    %al,(%eax)
 127:	00 41 0e             	add    %al,0xe(%ecx)
 12a:	08 42 85             	or     %al,-0x7b(%edx)
 12d:	02 0d 05 14 00 00    	add    0x1405,%cl
 133:	00 b8 00 00 00 3d    	add    %bh,0x3d000000(%eax)
 139:	85 04 08             	test   %eax,(%eax,%ecx,1)
 13c:	68 00 00 00 41       	push   $0x41000000
 141:	0e                   	push   %cs
 142:	08 42 85             	or     %al,-0x7b(%edx)
 145:	02 0d 05 18 00 00    	add    0x1805,%cl
 14b:	00 b8 00 00 00 a5    	add    %bh,-0x5b000000(%eax)
 151:	85 04 08             	test   %eax,(%eax,%ecx,1)
 154:	cb                   	lret   
 155:	00 00                	add    %al,(%eax)
 157:	00 41 0e             	add    %al,0xe(%ecx)
 15a:	08 42 85             	or     %al,-0x7b(%edx)
 15d:	02 0d 05 53 83 03    	add    0x3835305,%cl
 163:	00 14 00             	add    %dl,(%eax,%eax,1)
 166:	00 00                	add    %al,(%eax)
 168:	b8 00 00 00 70       	mov    $0x70000000,%eax
 16d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 170:	91                   	xchg   %eax,%ecx
 171:	00 00                	add    %al,(%eax)
 173:	00 41 0e             	add    %al,0xe(%ecx)
 176:	08 42 85             	or     %al,-0x7b(%edx)
 179:	02 0d 05 14 00 00    	add    0x1405,%cl
 17f:	00 b8 00 00 00 01    	add    %bh,0x1000000(%eax)
 185:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 188:	43                   	inc    %ebx
 189:	01 00                	add    %eax,(%eax)
 18b:	00 41 0e             	add    %al,0xe(%ecx)
 18e:	08 42 85             	or     %al,-0x7b(%edx)
 191:	02 0d 05 14 00 00    	add    0x1405,%cl
 197:	00 b8 00 00 00 44    	add    %bh,0x44000000(%eax)
 19d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 1a0:	80 00 00             	addb   $0x0,(%eax)
 1a3:	00 41 0e             	add    %al,0xe(%ecx)
 1a6:	08 42 85             	or     %al,-0x7b(%edx)
 1a9:	02 0d 05 14 00 00    	add    0x1405,%cl
 1af:	00 b8 00 00 00 c4    	add    %bh,-0x3c000000(%eax)
 1b5:	88 04 08             	mov    %al,(%eax,%ecx,1)
 1b8:	a8 01                	test   $0x1,%al
 1ba:	00 00                	add    %al,(%eax)
 1bc:	41                   	inc    %ecx
 1bd:	0e                   	push   %cs
 1be:	08 42 85             	or     %al,-0x7b(%edx)
 1c1:	02 0d 05 10 00 00    	add    0x1005,%cl
 1c7:	00 ff                	add    %bh,%bh
 1c9:	ff                   	(bad)  
 1ca:	ff                   	(bad)  
 1cb:	ff 01                	incl   (%ecx)
 1cd:	00 01                	add    %al,(%ecx)
 1cf:	7c 08                	jl     1d9 <__executable_start-0x8047efb>
 1d1:	0c 04                	or     $0x4,%al
 1d3:	04 88                	add    $0x88,%al
 1d5:	01 00                	add    %eax,(%eax)
 1d7:	00 14 00             	add    %dl,(%eax,%eax,1)
 1da:	00 00                	add    %al,(%eax)
 1dc:	c4 01                	les    (%ecx),%eax
 1de:	00 00                	add    %al,(%eax)
 1e0:	6c                   	insb   (%dx),%es:(%edi)
 1e1:	8a 04 08             	mov    (%eax,%ecx,1),%al
 1e4:	43                   	inc    %ebx
 1e5:	00 00                	add    %al,(%eax)
 1e7:	00 41 0e             	add    %al,0xe(%ecx)
 1ea:	08 42 85             	or     %al,-0x7b(%edx)
 1ed:	02 0d 05 10 00 00    	add    0x1005,%cl
 1f3:	00 ff                	add    %bh,%bh
 1f5:	ff                   	(bad)  
 1f6:	ff                   	(bad)  
 1f7:	ff 01                	incl   (%ecx)
 1f9:	00 01                	add    %al,(%ecx)
 1fb:	7c 08                	jl     205 <__executable_start-0x8047ecf>
 1fd:	0c 04                	or     $0x4,%al
 1ff:	04 88                	add    $0x88,%al
 201:	01 00                	add    %eax,(%eax)
 203:	00 14 00             	add    %dl,(%eax,%eax,1)
 206:	00 00                	add    %al,(%eax)
 208:	f0 01 00             	lock add %eax,(%eax)
 20b:	00 b0 8a 04 08 20    	add    %dh,0x2008048a(%eax)
 211:	00 00                	add    %al,(%eax)
 213:	00 41 0e             	add    %al,0xe(%ecx)
 216:	08 42 85             	or     %al,-0x7b(%edx)
 219:	02 0d 05 10 00 00    	add    0x1005,%cl
 21f:	00 ff                	add    %bh,%bh
 221:	ff                   	(bad)  
 222:	ff                   	(bad)  
 223:	ff 01                	incl   (%ecx)
 225:	00 01                	add    %al,(%ecx)
 227:	7c 08                	jl     231 <__executable_start-0x8047ea3>
 229:	0c 04                	or     $0x4,%al
 22b:	04 88                	add    $0x88,%al
 22d:	01 00                	add    %eax,(%eax)
 22f:	00 14 00             	add    %dl,(%eax,%eax,1)
 232:	00 00                	add    %al,(%eax)
 234:	1c 02                	sbb    $0x2,%al
 236:	00 00                	add    %al,(%eax)
 238:	d0 8a 04 08 25 00    	rorb   0x250804(%edx)
 23e:	00 00                	add    %al,(%eax)
 240:	41                   	inc    %ecx
 241:	0e                   	push   %cs
 242:	08 42 85             	or     %al,-0x7b(%edx)
 245:	02 0d 05 14 00 00    	add    0x1405,%cl
 24b:	00 1c 02             	add    %bl,(%edx,%eax,1)
 24e:	00 00                	add    %al,(%eax)
 250:	f5                   	cmc    
 251:	8a 04 08             	mov    (%eax,%ecx,1),%al
 254:	9e                   	sahf   
 255:	00 00                	add    %al,(%eax)
 257:	00 41 0e             	add    %al,0xe(%ecx)
 25a:	08 42 85             	or     %al,-0x7b(%edx)
 25d:	02 0d 05 14 00 00    	add    0x1405,%cl
 263:	00 1c 02             	add    %bl,(%edx,%eax,1)
 266:	00 00                	add    %al,(%eax)
 268:	93                   	xchg   %eax,%ebx
 269:	8b 04 08             	mov    (%eax,%ecx,1),%eax
 26c:	d6                   	(bad)  
 26d:	00 00                	add    %al,(%eax)
 26f:	00 41 0e             	add    %al,0xe(%ecx)
 272:	08 42 85             	or     %al,-0x7b(%edx)
 275:	02 0d 05 14 00 00    	add    0x1405,%cl
 27b:	00 1c 02             	add    %bl,(%edx,%eax,1)
 27e:	00 00                	add    %al,(%eax)
 280:	69 8c 04 08 1e 00 00 	imul   $0x80e4100,0x1e08(%esp,%eax,1),%ecx
 287:	00 41 0e 08 
 28b:	42                   	inc    %edx
 28c:	85 02                	test   %eax,(%edx)
 28e:	0d 05 10 00 00       	or     $0x1005,%eax
 293:	00 ff                	add    %bh,%bh
 295:	ff                   	(bad)  
 296:	ff                   	(bad)  
 297:	ff 01                	incl   (%ecx)
 299:	00 01                	add    %al,(%ecx)
 29b:	7c 08                	jl     2a5 <__executable_start-0x8047e2f>
 29d:	0c 04                	or     $0x4,%al
 29f:	04 88                	add    $0x88,%al
 2a1:	01 00                	add    %eax,(%eax)
 2a3:	00 14 00             	add    %dl,(%eax,%eax,1)
 2a6:	00 00                	add    %al,(%eax)
 2a8:	90                   	nop
 2a9:	02 00                	add    (%eax),%al
 2ab:	00 88 8c 04 08 1d    	add    %cl,0x1d08048c(%eax)
 2b1:	00 00                	add    %al,(%eax)
 2b3:	00 41 0e             	add    %al,0xe(%ecx)
 2b6:	08 42 85             	or     %al,-0x7b(%edx)
 2b9:	02 0d 05 14 00 00    	add    0x1405,%cl
 2bf:	00 90 02 00 00 a5    	add    %dl,-0x5afffffe(%eax)
 2c5:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 2c8:	1d 00 00 00 41       	sbb    $0x41000000,%eax
 2cd:	0e                   	push   %cs
 2ce:	08 42 85             	or     %al,-0x7b(%edx)
 2d1:	02 0d 05 14 00 00    	add    0x1405,%cl
 2d7:	00 90 02 00 00 c2    	add    %dl,-0x3dfffffe(%eax)
 2dd:	8c 04 08             	mov    %es,(%eax,%ecx,1)
 2e0:	5b                   	pop    %ebx
 2e1:	00 00                	add    %al,(%eax)
 2e3:	00 41 0e             	add    %al,0xe(%ecx)
 2e6:	08 42 85             	or     %al,-0x7b(%edx)
 2e9:	02 0d 05 14 00 00    	add    0x1405,%cl
 2ef:	00 90 02 00 00 1d    	add    %dl,0x1d000002(%eax)
 2f5:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 2f8:	45                   	inc    %ebp
 2f9:	00 00                	add    %al,(%eax)
 2fb:	00 41 0e             	add    %al,0xe(%ecx)
 2fe:	08 42 85             	or     %al,-0x7b(%edx)
 301:	02 0d 05 14 00 00    	add    0x1405,%cl
 307:	00 90 02 00 00 62    	add    %dl,0x62000002(%eax)
 30d:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 310:	34 00                	xor    $0x0,%al
 312:	00 00                	add    %al,(%eax)
 314:	41                   	inc    %ecx
 315:	0e                   	push   %cs
 316:	08 42 85             	or     %al,-0x7b(%edx)
 319:	02 0d 05 14 00 00    	add    0x1405,%cl
 31f:	00 90 02 00 00 96    	add    %dl,-0x69fffffe(%eax)
 325:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 328:	26 00 00             	add    %al,%es:(%eax)
 32b:	00 41 0e             	add    %al,0xe(%ecx)
 32e:	08 42 85             	or     %al,-0x7b(%edx)
 331:	02 0d 05 1c 00 00    	add    0x1c05,%cl
 337:	00 90 02 00 00 bc    	add    %dl,-0x43fffffe(%eax)
 33d:	8d 04 08             	lea    (%eax,%ecx,1),%eax
 340:	32 05 00 00 41 0e    	xor    0xe410000,%al
 346:	08 42 85             	or     %al,-0x7b(%edx)
 349:	02 0d 05 4b 83 05    	add    0x5834b05,%cl
 34f:	86 04 87             	xchg   %al,(%edi,%eax,4)
 352:	03 00                	add    (%eax),%eax
 354:	14 00                	adc    $0x0,%al
 356:	00 00                	add    %al,(%eax)
 358:	90                   	nop
 359:	02 00                	add    (%eax),%al
 35b:	00 ee                	add    %ch,%dh
 35d:	92                   	xchg   %eax,%edx
 35e:	04 08                	add    $0x8,%al
 360:	c9                   	leave  
 361:	02 00                	add    (%eax),%al
 363:	00 41 0e             	add    %al,0xe(%ecx)
 366:	08 42 85             	or     %al,-0x7b(%edx)
 369:	02 0d 05 1c 00 00    	add    0x1c05,%cl
 36f:	00 90 02 00 00 b7    	add    %dl,-0x48fffffe(%eax)
 375:	95                   	xchg   %eax,%ebp
 376:	04 08                	add    $0x8,%al
 378:	22 03                	and    (%ebx),%al
 37a:	00 00                	add    %al,(%eax)
 37c:	41                   	inc    %ecx
 37d:	0e                   	push   %cs
 37e:	08 42 85             	or     %al,-0x7b(%edx)
 381:	02 0d 05 6a 83 04    	add    0x4836a05,%cl
 387:	86 03                	xchg   %al,(%ebx)
 389:	00 00                	add    %al,(%eax)
 38b:	00 14 00             	add    %dl,(%eax,%eax,1)
 38e:	00 00                	add    %al,(%eax)
 390:	90                   	nop
 391:	02 00                	add    (%eax),%al
 393:	00 d9                	add    %bl,%cl
 395:	98                   	cwtl   
 396:	04 08                	add    $0x8,%al
 398:	32 00                	xor    (%eax),%al
 39a:	00 00                	add    %al,(%eax)
 39c:	41                   	inc    %ecx
 39d:	0e                   	push   %cs
 39e:	08 42 85             	or     %al,-0x7b(%edx)
 3a1:	02 0d 05 14 00 00    	add    0x1405,%cl
 3a7:	00 90 02 00 00 0b    	add    %dl,0xb000002(%eax)
 3ad:	99                   	cltd   
 3ae:	04 08                	add    $0x8,%al
 3b0:	b4 00                	mov    $0x0,%ah
 3b2:	00 00                	add    %al,(%eax)
 3b4:	41                   	inc    %ecx
 3b5:	0e                   	push   %cs
 3b6:	08 42 85             	or     %al,-0x7b(%edx)
 3b9:	02 0d 05 14 00 00    	add    0x1405,%cl
 3bf:	00 90 02 00 00 bf    	add    %dl,-0x40fffffe(%eax)
 3c5:	99                   	cltd   
 3c6:	04 08                	add    $0x8,%al
 3c8:	2e 00 00             	add    %al,%cs:(%eax)
 3cb:	00 41 0e             	add    %al,0xe(%ecx)
 3ce:	08 42 85             	or     %al,-0x7b(%edx)
 3d1:	02 0d 05 18 00 00    	add    0x1805,%cl
 3d7:	00 90 02 00 00 ed    	add    %dl,-0x12fffffe(%eax)
 3dd:	99                   	cltd   
 3de:	04 08                	add    $0x8,%al
 3e0:	f0 01 00             	lock add %eax,(%eax)
 3e3:	00 41 0e             	add    %al,0xe(%ecx)
 3e6:	08 42 85             	or     %al,-0x7b(%edx)
 3e9:	02 0d 05 5c 83 03    	add    0x3835c05,%cl
 3ef:	00 10                	add    %dl,(%eax)
 3f1:	00 00                	add    %al,(%eax)
 3f3:	00 ff                	add    %bh,%bh
 3f5:	ff                   	(bad)  
 3f6:	ff                   	(bad)  
 3f7:	ff 01                	incl   (%ecx)
 3f9:	00 01                	add    %al,(%ecx)
 3fb:	7c 08                	jl     405 <__executable_start-0x8047ccf>
 3fd:	0c 04                	or     $0x4,%al
 3ff:	04 88                	add    $0x88,%al
 401:	01 00                	add    %eax,(%eax)
 403:	00 14 00             	add    %dl,(%eax,%eax,1)
 406:	00 00                	add    %al,(%eax)
 408:	f0 03 00             	lock add (%eax),%eax
 40b:	00 e0                	add    %ah,%al
 40d:	9b                   	fwait
 40e:	04 08                	add    $0x8,%al
 410:	af                   	scas   %es:(%edi),%eax
 411:	00 00                	add    %al,(%eax)
 413:	00 41 0e             	add    %al,0xe(%ecx)
 416:	08 42 85             	or     %al,-0x7b(%edx)
 419:	02 0d 05 14 00 00    	add    0x1405,%cl
 41f:	00 f0                	add    %dh,%al
 421:	03 00                	add    (%eax),%eax
 423:	00 8f 9c 04 08 e5    	add    %cl,-0x1af7fb64(%edi)
 429:	00 00                	add    %al,(%eax)
 42b:	00 41 0e             	add    %al,0xe(%ecx)
 42e:	08 42 85             	or     %al,-0x7b(%edx)
 431:	02 0d 05 14 00 00    	add    0x1405,%cl
 437:	00 f0                	add    %dh,%al
 439:	03 00                	add    (%eax),%eax
 43b:	00 74 9d 04          	add    %dh,0x4(%ebp,%ebx,4)
 43f:	08 d4                	or     %dl,%ah
 441:	00 00                	add    %al,(%eax)
 443:	00 41 0e             	add    %al,0xe(%ecx)
 446:	08 42 85             	or     %al,-0x7b(%edx)
 449:	02 0d 05 14 00 00    	add    0x1405,%cl
 44f:	00 f0                	add    %dh,%al
 451:	03 00                	add    (%eax),%eax
 453:	00 48 9e             	add    %cl,-0x62(%eax)
 456:	04 08                	add    $0x8,%al
 458:	ca 00 00             	lret   $0x0
 45b:	00 41 0e             	add    %al,0xe(%ecx)
 45e:	08 42 85             	or     %al,-0x7b(%edx)
 461:	02 0d 05 14 00 00    	add    0x1405,%cl
 467:	00 f0                	add    %dh,%al
 469:	03 00                	add    (%eax),%eax
 46b:	00 12                	add    %dl,(%edx)
 46d:	9f                   	lahf   
 46e:	04 08                	add    $0x8,%al
 470:	7a 00                	jp     472 <__executable_start-0x8047c62>
 472:	00 00                	add    %al,(%eax)
 474:	41                   	inc    %ecx
 475:	0e                   	push   %cs
 476:	08 42 85             	or     %al,-0x7b(%edx)
 479:	02 0d 05 14 00 00    	add    0x1405,%cl
 47f:	00 f0                	add    %dh,%al
 481:	03 00                	add    (%eax),%eax
 483:	00 8c 9f 04 08 67 00 	add    %cl,0x670804(%edi,%ebx,4)
 48a:	00 00                	add    %al,(%eax)
 48c:	41                   	inc    %ecx
 48d:	0e                   	push   %cs
 48e:	08 42 85             	or     %al,-0x7b(%edx)
 491:	02 0d 05 14 00 00    	add    0x1405,%cl
 497:	00 f0                	add    %dh,%al
 499:	03 00                	add    (%eax),%eax
 49b:	00 f3                	add    %dh,%bl
 49d:	9f                   	lahf   
 49e:	04 08                	add    $0x8,%al
 4a0:	4d                   	dec    %ebp
 4a1:	00 00                	add    %al,(%eax)
 4a3:	00 41 0e             	add    %al,0xe(%ecx)
 4a6:	08 42 85             	or     %al,-0x7b(%edx)
 4a9:	02 0d 05 14 00 00    	add    0x1405,%cl
 4af:	00 f0                	add    %dh,%al
 4b1:	03 00                	add    (%eax),%eax
 4b3:	00 40 a0             	add    %al,-0x60(%eax)
 4b6:	04 08                	add    $0x8,%al
 4b8:	3e 00 00             	add    %al,%ds:(%eax)
 4bb:	00 41 0e             	add    %al,0xe(%ecx)
 4be:	08 42 85             	or     %al,-0x7b(%edx)
 4c1:	02 0d 05 14 00 00    	add    0x1405,%cl
 4c7:	00 f0                	add    %dh,%al
 4c9:	03 00                	add    (%eax),%eax
 4cb:	00 7e a0             	add    %bh,-0x60(%esi)
 4ce:	04 08                	add    $0x8,%al
 4d0:	39 00                	cmp    %eax,(%eax)
 4d2:	00 00                	add    %al,(%eax)
 4d4:	41                   	inc    %ecx
 4d5:	0e                   	push   %cs
 4d6:	08 42 85             	or     %al,-0x7b(%edx)
 4d9:	02 0d 05 14 00 00    	add    0x1405,%cl
 4df:	00 f0                	add    %dh,%al
 4e1:	03 00                	add    (%eax),%eax
 4e3:	00 b7 a0 04 08 4d    	add    %dh,0x4d0804a0(%edi)
 4e9:	00 00                	add    %al,(%eax)
 4eb:	00 41 0e             	add    %al,0xe(%ecx)
 4ee:	08 42 85             	or     %al,-0x7b(%edx)
 4f1:	02 0d 05 14 00 00    	add    0x1405,%cl
 4f7:	00 f0                	add    %dh,%al
 4f9:	03 00                	add    (%eax),%eax
 4fb:	00 04 a1             	add    %al,(%ecx,%eiz,4)
 4fe:	04 08                	add    $0x8,%al
 500:	7c 00                	jl     502 <__executable_start-0x8047bd2>
 502:	00 00                	add    %al,(%eax)
 504:	41                   	inc    %ecx
 505:	0e                   	push   %cs
 506:	08 42 85             	or     %al,-0x7b(%edx)
 509:	02 0d 05 14 00 00    	add    0x1405,%cl
 50f:	00 f0                	add    %dh,%al
 511:	03 00                	add    (%eax),%eax
 513:	00 80 a1 04 08 3c    	add    %al,0x3c0804a1(%eax)
 519:	01 00                	add    %eax,(%eax)
 51b:	00 41 0e             	add    %al,0xe(%ecx)
 51e:	08 42 85             	or     %al,-0x7b(%edx)
 521:	02 0d 05 14 00 00    	add    0x1405,%cl
 527:	00 f0                	add    %dh,%al
 529:	03 00                	add    (%eax),%eax
 52b:	00 bc a2 04 08 6c 00 	add    %bh,0x6c0804(%edx,%eiz,4)
 532:	00 00                	add    %al,(%eax)
 534:	41                   	inc    %ecx
 535:	0e                   	push   %cs
 536:	08 42 85             	or     %al,-0x7b(%edx)
 539:	02 0d 05 14 00 00    	add    0x1405,%cl
 53f:	00 f0                	add    %dh,%al
 541:	03 00                	add    (%eax),%eax
 543:	00 28                	add    %ch,(%eax)
 545:	a3 04 08 5c 00       	mov    %eax,0x5c0804
 54a:	00 00                	add    %al,(%eax)
 54c:	41                   	inc    %ecx
 54d:	0e                   	push   %cs
 54e:	08 42 85             	or     %al,-0x7b(%edx)
 551:	02 0d 05 14 00 00    	add    0x1405,%cl
 557:	00 f0                	add    %dh,%al
 559:	03 00                	add    (%eax),%eax
 55b:	00 84 a3 04 08 30 00 	add    %al,0x300804(%ebx,%eiz,4)
 562:	00 00                	add    %al,(%eax)
 564:	41                   	inc    %ecx
 565:	0e                   	push   %cs
 566:	08 42 85             	or     %al,-0x7b(%edx)
 569:	02 0d 05 14 00 00    	add    0x1405,%cl
 56f:	00 f0                	add    %dh,%al
 571:	03 00                	add    (%eax),%eax
 573:	00 b4 a3 04 08 c3 00 	add    %dh,0xc30804(%ebx,%eiz,4)
 57a:	00 00                	add    %al,(%eax)
 57c:	41                   	inc    %ecx
 57d:	0e                   	push   %cs
 57e:	08 42 85             	or     %al,-0x7b(%edx)
 581:	02 0d 05 14 00 00    	add    0x1405,%cl
 587:	00 f0                	add    %dh,%al
 589:	03 00                	add    (%eax),%eax
 58b:	00 77 a4             	add    %dh,-0x5c(%edi)
 58e:	04 08                	add    $0x8,%al
 590:	f3 00 00             	repz add %al,(%eax)
 593:	00 41 0e             	add    %al,0xe(%ecx)
 596:	08 42 85             	or     %al,-0x7b(%edx)
 599:	02 0d 05 10 00 00    	add    0x1005,%cl
 59f:	00 ff                	add    %bh,%bh
 5a1:	ff                   	(bad)  
 5a2:	ff                   	(bad)  
 5a3:	ff 01                	incl   (%ecx)
 5a5:	00 01                	add    %al,(%ecx)
 5a7:	7c 08                	jl     5b1 <__executable_start-0x8047b23>
 5a9:	0c 04                	or     $0x4,%al
 5ab:	04 88                	add    $0x88,%al
 5ad:	01 00                	add    %eax,(%eax)
 5af:	00 14 00             	add    %dl,(%eax,%eax,1)
 5b2:	00 00                	add    %al,(%eax)
 5b4:	9c                   	pushf  
 5b5:	05 00 00 6c a5       	add    $0xa56c0000,%eax
 5ba:	04 08                	add    $0x8,%al
 5bc:	39 00                	cmp    %eax,(%eax)
 5be:	00 00                	add    %al,(%eax)
 5c0:	41                   	inc    %ecx
 5c1:	0e                   	push   %cs
 5c2:	08 42 85             	or     %al,-0x7b(%edx)
 5c5:	02 0d 05 14 00 00    	add    0x1405,%cl
 5cb:	00 9c 05 00 00 a5 a5 	add    %bl,-0x5a5b0000(%ebp,%eax,1)
 5d2:	04 08                	add    $0x8,%al
 5d4:	61                   	popa   
 5d5:	00 00                	add    %al,(%eax)
 5d7:	00 41 0e             	add    %al,0xe(%ecx)
 5da:	08 42 85             	or     %al,-0x7b(%edx)
 5dd:	02 0d 05 1c 00 00    	add    0x1c05,%cl
 5e3:	00 9c 05 00 00 06 a6 	add    %bl,-0x59fa0000(%ebp,%eax,1)
 5ea:	04 08                	add    $0x8,%al
 5ec:	ca 01 00             	lret   $0x1
 5ef:	00 41 0e             	add    %al,0xe(%ecx)
 5f2:	08 42 85             	or     %al,-0x7b(%edx)
 5f5:	02 0d 05 72 83 05    	add    0x5837205,%cl
 5fb:	86 04 87             	xchg   %al,(%edi,%eax,4)
 5fe:	03 00                	add    (%eax),%eax
 600:	18 00                	sbb    %al,(%eax)
 602:	00 00                	add    %al,(%eax)
 604:	9c                   	pushf  
 605:	05 00 00 d0 a7       	add    $0xa7d00000,%eax
 60a:	04 08                	add    $0x8,%al
 60c:	56                   	push   %esi
 60d:	00 00                	add    %al,(%eax)
 60f:	00 41 0e             	add    %al,0xe(%ecx)
 612:	08 42 85             	or     %al,-0x7b(%edx)
 615:	02 0d 05 5f 83 03    	add    0x3835f05,%cl
 61b:	00 14 00             	add    %dl,(%eax,%eax,1)
 61e:	00 00                	add    %al,(%eax)
 620:	9c                   	pushf  
 621:	05 00 00 26 a8       	add    $0xa8260000,%eax
 626:	04 08                	add    $0x8,%al
 628:	b3 00                	mov    $0x0,%bl
 62a:	00 00                	add    %al,(%eax)
 62c:	41                   	inc    %ecx
 62d:	0e                   	push   %cs
 62e:	08 42 85             	or     %al,-0x7b(%edx)
 631:	02 0d 05 18 00 00    	add    0x1805,%cl
 637:	00 9c 05 00 00 d9 a8 	add    %bl,-0x57270000(%ebp,%eax,1)
 63e:	04 08                	add    $0x8,%al
 640:	56                   	push   %esi
 641:	00 00                	add    %al,(%eax)
 643:	00 41 0e             	add    %al,0xe(%ecx)
 646:	08 42 85             	or     %al,-0x7b(%edx)
 649:	02 0d 05 5f 83 03    	add    0x3835f05,%cl
 64f:	00 14 00             	add    %dl,(%eax,%eax,1)
 652:	00 00                	add    %al,(%eax)
 654:	9c                   	pushf  
 655:	05 00 00 2f a9       	add    $0xa92f0000,%eax
 65a:	04 08                	add    $0x8,%al
 65c:	40                   	inc    %eax
 65d:	00 00                	add    %al,(%eax)
 65f:	00 41 0e             	add    %al,0xe(%ecx)
 662:	08 42 85             	or     %al,-0x7b(%edx)
 665:	02 0d 05 14 00 00    	add    0x1405,%cl
 66b:	00 9c 05 00 00 6f a9 	add    %bl,-0x56910000(%ebp,%eax,1)
 672:	04 08                	add    $0x8,%al
 674:	45                   	inc    %ebp
 675:	00 00                	add    %al,(%eax)
 677:	00 41 0e             	add    %al,0xe(%ecx)
 67a:	08 42 85             	or     %al,-0x7b(%edx)
 67d:	02 0d 05 14 00 00    	add    0x1405,%cl
 683:	00 9c 05 00 00 b4 a9 	add    %bl,-0x564c0000(%ebp,%eax,1)
 68a:	04 08                	add    $0x8,%al
 68c:	40                   	inc    %eax
 68d:	00 00                	add    %al,(%eax)
 68f:	00 41 0e             	add    %al,0xe(%ecx)
 692:	08 42 85             	or     %al,-0x7b(%edx)
 695:	02 0d 05 14 00 00    	add    0x1405,%cl
 69b:	00 9c 05 00 00 f4 a9 	add    %bl,-0x560c0000(%ebp,%eax,1)
 6a2:	04 08                	add    $0x8,%al
 6a4:	45                   	inc    %ebp
 6a5:	00 00                	add    %al,(%eax)
 6a7:	00 41 0e             	add    %al,0xe(%ecx)
 6aa:	08 42 85             	or     %al,-0x7b(%edx)
 6ad:	02 0d 05 10 00 00    	add    0x1005,%cl
 6b3:	00 ff                	add    %bh,%bh
 6b5:	ff                   	(bad)  
 6b6:	ff                   	(bad)  
 6b7:	ff 01                	incl   (%ecx)
 6b9:	00 01                	add    %al,(%ecx)
 6bb:	7c 08                	jl     6c5 <__executable_start-0x8047a0f>
 6bd:	0c 04                	or     $0x4,%al
 6bf:	04 88                	add    $0x88,%al
 6c1:	01 00                	add    %eax,(%eax)
 6c3:	00 14 00             	add    %dl,(%eax,%eax,1)
 6c6:	00 00                	add    %al,(%eax)
 6c8:	b0 06                	mov    $0x6,%al
 6ca:	00 00                	add    %al,(%eax)
 6cc:	3c aa                	cmp    $0xaa,%al
 6ce:	04 08                	add    $0x8,%al
 6d0:	5c                   	pop    %esp
 6d1:	00 00                	add    %al,(%eax)
 6d3:	00 41 0e             	add    %al,0xe(%ecx)
 6d6:	08 42 85             	or     %al,-0x7b(%edx)
 6d9:	02 0d 05 10 00 00    	add    0x1005,%cl
 6df:	00 ff                	add    %bh,%bh
 6e1:	ff                   	(bad)  
 6e2:	ff                   	(bad)  
 6e3:	ff 01                	incl   (%ecx)
 6e5:	00 01                	add    %al,(%ecx)
 6e7:	7c 08                	jl     6f1 <__executable_start-0x80479e3>
 6e9:	0c 04                	or     $0x4,%al
 6eb:	04 88                	add    $0x88,%al
 6ed:	01 00                	add    %eax,(%eax)
 6ef:	00 14 00             	add    %dl,(%eax,%eax,1)
 6f2:	00 00                	add    %al,(%eax)
 6f4:	dc 06                	faddl  (%esi)
 6f6:	00 00                	add    %al,(%eax)
 6f8:	98                   	cwtl   
 6f9:	aa                   	stos   %al,%es:(%edi)
 6fa:	04 08                	add    $0x8,%al
 6fc:	34 00                	xor    $0x0,%al
 6fe:	00 00                	add    %al,(%eax)
 700:	41                   	inc    %ecx
 701:	0e                   	push   %cs
 702:	08 42 85             	or     %al,-0x7b(%edx)
 705:	02 0d 05 14 00 00    	add    0x1405,%cl
 70b:	00 dc                	add    %bl,%ah
 70d:	06                   	push   %es
 70e:	00 00                	add    %al,(%eax)
 710:	cc                   	int3   
 711:	aa                   	stos   %al,%es:(%edi)
 712:	04 08                	add    $0x8,%al
 714:	37                   	aaa    
 715:	00 00                	add    %al,(%eax)
 717:	00 41 0e             	add    %al,0xe(%ecx)
 71a:	08 42 85             	or     %al,-0x7b(%edx)
 71d:	02 0d 05 14 00 00    	add    0x1405,%cl
 723:	00 dc                	add    %bl,%ah
 725:	06                   	push   %es
 726:	00 00                	add    %al,(%eax)
 728:	03 ab 04 08 18 00    	add    0x180804(%ebx),%ebp
 72e:	00 00                	add    %al,(%eax)
 730:	41                   	inc    %ecx
 731:	0e                   	push   %cs
 732:	08 42 85             	or     %al,-0x7b(%edx)
 735:	02 0d 05 14 00 00    	add    0x1405,%cl
 73b:	00 dc                	add    %bl,%ah
 73d:	06                   	push   %es
 73e:	00 00                	add    %al,(%eax)
 740:	1b ab 04 08 18 00    	sbb    0x180804(%ebx),%ebp
 746:	00 00                	add    %al,(%eax)
 748:	41                   	inc    %ecx
 749:	0e                   	push   %cs
 74a:	08 42 85             	or     %al,-0x7b(%edx)
 74d:	02 0d 05 14 00 00    	add    0x1405,%cl
 753:	00 dc                	add    %bl,%ah
 755:	06                   	push   %es
 756:	00 00                	add    %al,(%eax)
 758:	33 ab 04 08 20 00    	xor    0x200804(%ebx),%ebp
 75e:	00 00                	add    %al,(%eax)
 760:	41                   	inc    %ecx
 761:	0e                   	push   %cs
 762:	08 42 85             	or     %al,-0x7b(%edx)
 765:	02 0d 05 14 00 00    	add    0x1405,%cl
 76b:	00 dc                	add    %bl,%ah
 76d:	06                   	push   %es
 76e:	00 00                	add    %al,(%eax)
 770:	53                   	push   %ebx
 771:	ab                   	stos   %eax,%es:(%edi)
 772:	04 08                	add    $0x8,%al
 774:	1d 00 00 00 41       	sbb    $0x41000000,%eax
 779:	0e                   	push   %cs
 77a:	08 42 85             	or     %al,-0x7b(%edx)
 77d:	02 0d 05 14 00 00    	add    0x1405,%cl
 783:	00 dc                	add    %bl,%ah
 785:	06                   	push   %es
 786:	00 00                	add    %al,(%eax)
 788:	70 ab                	jo     735 <__executable_start-0x804799f>
 78a:	04 08                	add    $0x8,%al
 78c:	18 00                	sbb    %al,(%eax)
 78e:	00 00                	add    %al,(%eax)
 790:	41                   	inc    %ecx
 791:	0e                   	push   %cs
 792:	08 42 85             	or     %al,-0x7b(%edx)
 795:	02 0d 05 14 00 00    	add    0x1405,%cl
 79b:	00 dc                	add    %bl,%ah
 79d:	06                   	push   %es
 79e:	00 00                	add    %al,(%eax)
 7a0:	88 ab 04 08 18 00    	mov    %ch,0x180804(%ebx)
 7a6:	00 00                	add    %al,(%eax)
 7a8:	41                   	inc    %ecx
 7a9:	0e                   	push   %cs
 7aa:	08 42 85             	or     %al,-0x7b(%edx)
 7ad:	02 0d 05 14 00 00    	add    0x1405,%cl
 7b3:	00 dc                	add    %bl,%ah
 7b5:	06                   	push   %es
 7b6:	00 00                	add    %al,(%eax)
 7b8:	a0 ab 04 08 1e       	mov    0x1e0804ab,%al
 7bd:	00 00                	add    %al,(%eax)
 7bf:	00 41 0e             	add    %al,0xe(%ecx)
 7c2:	08 42 85             	or     %al,-0x7b(%edx)
 7c5:	02 0d 05 14 00 00    	add    0x1405,%cl
 7cb:	00 dc                	add    %bl,%ah
 7cd:	06                   	push   %es
 7ce:	00 00                	add    %al,(%eax)
 7d0:	be ab 04 08 1e       	mov    $0x1e0804ab,%esi
 7d5:	00 00                	add    %al,(%eax)
 7d7:	00 41 0e             	add    %al,0xe(%ecx)
 7da:	08 42 85             	or     %al,-0x7b(%edx)
 7dd:	02 0d 05 14 00 00    	add    0x1405,%cl
 7e3:	00 dc                	add    %bl,%ah
 7e5:	06                   	push   %es
 7e6:	00 00                	add    %al,(%eax)
 7e8:	dc ab 04 08 18 00    	fsubrl 0x180804(%ebx)
 7ee:	00 00                	add    %al,(%eax)
 7f0:	41                   	inc    %ecx
 7f1:	0e                   	push   %cs
 7f2:	08 42 85             	or     %al,-0x7b(%edx)
 7f5:	02 0d 05 14 00 00    	add    0x1405,%cl
 7fb:	00 dc                	add    %bl,%ah
 7fd:	06                   	push   %es
 7fe:	00 00                	add    %al,(%eax)
 800:	f4                   	hlt    
 801:	ab                   	stos   %eax,%es:(%edi)
 802:	04 08                	add    $0x8,%al
 804:	18 00                	sbb    %al,(%eax)
 806:	00 00                	add    %al,(%eax)
 808:	41                   	inc    %ecx
 809:	0e                   	push   %cs
 80a:	08 42 85             	or     %al,-0x7b(%edx)
 80d:	02 0d 05 14 00 00    	add    0x1405,%cl
 813:	00 dc                	add    %bl,%ah
 815:	06                   	push   %es
 816:	00 00                	add    %al,(%eax)
 818:	0c ac                	or     $0xac,%al
 81a:	04 08                	add    $0x8,%al
 81c:	15 00 00 00 41       	adc    $0x41000000,%eax
 821:	0e                   	push   %cs
 822:	08 42 85             	or     %al,-0x7b(%edx)
 825:	02 0d 05 14 00 00    	add    0x1405,%cl
 82b:	00 dc                	add    %bl,%ah
 82d:	06                   	push   %es
 82e:	00 00                	add    %al,(%eax)
 830:	21 ac 04 08 1b 00 00 	and    %ebp,0x1b08(%esp,%eax,1)
 837:	00 41 0e             	add    %al,0xe(%ecx)
 83a:	08 42 85             	or     %al,-0x7b(%edx)
 83d:	02 0d 05 14 00 00    	add    0x1405,%cl
 843:	00 dc                	add    %bl,%ah
 845:	06                   	push   %es
 846:	00 00                	add    %al,(%eax)
 848:	3c ac                	cmp    $0xac,%al
 84a:	04 08                	add    $0x8,%al
 84c:	15 00 00 00 41       	adc    $0x41000000,%eax
 851:	0e                   	push   %cs
 852:	08 42 85             	or     %al,-0x7b(%edx)
 855:	02 0d 05 14 00 00    	add    0x1405,%cl
 85b:	00 dc                	add    %bl,%ah
 85d:	06                   	push   %es
 85e:	00 00                	add    %al,(%eax)
 860:	51                   	push   %ecx
 861:	ac                   	lods   %ds:(%esi),%al
 862:	04 08                	add    $0x8,%al
 864:	1d 00 00 00 41       	sbb    $0x41000000,%eax
 869:	0e                   	push   %cs
 86a:	08 42 85             	or     %al,-0x7b(%edx)
 86d:	02 0d 05 14 00 00    	add    0x1405,%cl
 873:	00 dc                	add    %bl,%ah
 875:	06                   	push   %es
 876:	00 00                	add    %al,(%eax)
 878:	6e                   	outsb  %ds:(%esi),(%dx)
 879:	ac                   	lods   %ds:(%esi),%al
 87a:	04 08                	add    $0x8,%al
 87c:	1d 00 00 00 41       	sbb    $0x41000000,%eax
 881:	0e                   	push   %cs
 882:	08 42 85             	or     %al,-0x7b(%edx)
 885:	02 0d 05 14 00 00    	add    0x1405,%cl
 88b:	00 dc                	add    %bl,%ah
 88d:	06                   	push   %es
 88e:	00 00                	add    %al,(%eax)
 890:	8b ac 04 08 20 00 00 	mov    0x2008(%esp,%eax,1),%ebp
 897:	00 41 0e             	add    %al,0xe(%ecx)
 89a:	08 42 85             	or     %al,-0x7b(%edx)
 89d:	02 0d 05 14 00 00    	add    0x1405,%cl
 8a3:	00 dc                	add    %bl,%ah
 8a5:	06                   	push   %es
 8a6:	00 00                	add    %al,(%eax)
 8a8:	ab                   	stos   %eax,%es:(%edi)
 8a9:	ac                   	lods   %ds:(%esi),%al
 8aa:	04 08                	add    $0x8,%al
 8ac:	1d 00 00 00 41       	sbb    $0x41000000,%eax
 8b1:	0e                   	push   %cs
 8b2:	08 42 85             	or     %al,-0x7b(%edx)
 8b5:	02 0d 05 14 00 00    	add    0x1405,%cl
 8bb:	00 dc                	add    %bl,%ah
 8bd:	06                   	push   %es
 8be:	00 00                	add    %al,(%eax)
 8c0:	c8 ac 04 08          	enter  $0x4ac,$0x8
 8c4:	18 00                	sbb    %al,(%eax)
 8c6:	00 00                	add    %al,(%eax)
 8c8:	41                   	inc    %ecx
 8c9:	0e                   	push   %cs
 8ca:	08 42 85             	or     %al,-0x7b(%edx)
 8cd:	02 0d 05 10 00 00    	add    0x1005,%cl
 8d3:	00 ff                	add    %bh,%bh
 8d5:	ff                   	(bad)  
 8d6:	ff                   	(bad)  
 8d7:	ff 01                	incl   (%ecx)
 8d9:	00 01                	add    %al,(%ecx)
 8db:	7c 08                	jl     8e5 <__executable_start-0x80477ef>
 8dd:	0c 04                	or     $0x4,%al
 8df:	04 88                	add    $0x88,%al
 8e1:	01 00                	add    %eax,(%eax)
 8e3:	00 14 00             	add    %dl,(%eax,%eax,1)
 8e6:	00 00                	add    %al,(%eax)
 8e8:	d0 08                	rorb   (%eax)
 8ea:	00 00                	add    %al,(%eax)
 8ec:	e0 ac                	loopne 89a <__executable_start-0x804783a>
 8ee:	04 08                	add    $0x8,%al
 8f0:	22 00                	and    (%eax),%al
 8f2:	00 00                	add    %al,(%eax)
 8f4:	41                   	inc    %ecx
 8f5:	0e                   	push   %cs
 8f6:	08 42 85             	or     %al,-0x7b(%edx)
 8f9:	02 0d 05 14 00 00    	add    0x1405,%cl
 8ff:	00 d0                	add    %dl,%al
 901:	08 00                	or     %al,(%eax)
 903:	00 02                	add    %al,(%edx)
 905:	ad                   	lods   %ds:(%esi),%eax
 906:	04 08                	add    $0x8,%al
 908:	2d 00 00 00 41       	sub    $0x41000000,%eax
 90d:	0e                   	push   %cs
 90e:	08 42 85             	or     %al,-0x7b(%edx)
 911:	02 0d 05 14 00 00    	add    0x1405,%cl
 917:	00 d0                	add    %dl,%al
 919:	08 00                	or     %al,(%eax)
 91b:	00 2f                	add    %ch,(%edi)
 91d:	ad                   	lods   %ds:(%esi),%eax
 91e:	04 08                	add    $0x8,%al
 920:	3b 00                	cmp    (%eax),%eax
 922:	00 00                	add    %al,(%eax)
 924:	41                   	inc    %ecx
 925:	0e                   	push   %cs
 926:	08 42 85             	or     %al,-0x7b(%edx)
 929:	02 0d 05 14 00 00    	add    0x1405,%cl
 92f:	00 d0                	add    %dl,%al
 931:	08 00                	or     %al,(%eax)
 933:	00 6a ad             	add    %ch,-0x53(%edx)
 936:	04 08                	add    $0x8,%al
 938:	2c 00                	sub    $0x0,%al
 93a:	00 00                	add    %al,(%eax)
 93c:	41                   	inc    %ecx
 93d:	0e                   	push   %cs
 93e:	08 42 85             	or     %al,-0x7b(%edx)
 941:	02 0d 05 14 00 00    	add    0x1405,%cl
 947:	00 d0                	add    %dl,%al
 949:	08 00                	or     %al,(%eax)
 94b:	00 96 ad 04 08 4a    	add    %dl,0x4a0804ad(%esi)
 951:	00 00                	add    %al,(%eax)
 953:	00 41 0e             	add    %al,0xe(%ecx)
 956:	08 42 85             	or     %al,-0x7b(%edx)
 959:	02 0d 05 14 00 00    	add    0x1405,%cl
 95f:	00 d0                	add    %dl,%al
 961:	08 00                	or     %al,(%eax)
 963:	00 e0                	add    %ah,%al
 965:	ad                   	lods   %ds:(%esi),%eax
 966:	04 08                	add    $0x8,%al
 968:	53                   	push   %ebx
 969:	00 00                	add    %al,(%eax)
 96b:	00 41 0e             	add    %al,0xe(%ecx)
 96e:	08 42 85             	or     %al,-0x7b(%edx)
 971:	02 0d 05 14 00 00    	add    0x1405,%cl
 977:	00 d0                	add    %dl,%al
 979:	08 00                	or     %al,(%eax)
 97b:	00 33                	add    %dh,(%ebx)
 97d:	ae                   	scas   %es:(%edi),%al
 97e:	04 08                	add    $0x8,%al
 980:	4a                   	dec    %edx
 981:	00 00                	add    %al,(%eax)
 983:	00 41 0e             	add    %al,0xe(%ecx)
 986:	08 42 85             	or     %al,-0x7b(%edx)
 989:	02 0d 05 10 00 00    	add    0x1005,%cl
 98f:	00 ff                	add    %bh,%bh
 991:	ff                   	(bad)  
 992:	ff                   	(bad)  
 993:	ff 01                	incl   (%ecx)
 995:	00 01                	add    %al,(%ecx)
 997:	7c 08                	jl     9a1 <__executable_start-0x8047733>
 999:	0c 04                	or     $0x4,%al
 99b:	04 88                	add    $0x88,%al
 99d:	01 00                	add    %eax,(%eax)
 99f:	00 14 00             	add    %dl,(%eax,%eax,1)
 9a2:	00 00                	add    %al,(%eax)
 9a4:	8c 09                	mov    %cs,(%ecx)
 9a6:	00 00                	add    %al,(%eax)
 9a8:	80 ae 04 08 77 00 00 	subb   $0x0,0x770804(%esi)
 9af:	00 41 0e             	add    %al,0xe(%ecx)
 9b2:	08 42 85             	or     %al,-0x7b(%edx)
 9b5:	02                   	.byte 0x2
 9b6:	0d                   	.byte 0xd
 9b7:	05                   	.byte 0x5

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	6c                   	insb   (%dx),%es:(%edi)
   1:	6f                   	outsl  %ds:(%esi),(%dx)
   2:	6e                   	outsb  %ds:(%esi),(%dx)
   3:	67 20 6c 6f          	addr16 and %ch,0x6f(%si)
   7:	6e                   	outsb  %ds:(%esi),(%dx)
   8:	67 20 69 6e          	addr16 and %ch,0x6e(%bx,%di)
   c:	74 00                	je     e <__executable_start-0x80480c6>
   e:	75 6e                	jne    7e <__executable_start-0x8048056>
  10:	73 69                	jae    7b <__executable_start-0x8048059>
  12:	67 6e                	addr16 outsb %ds:(%si),(%dx)
  14:	65 64 20 63 68       	and    %ah,%fs:%gs:0x68(%ebx)
  19:	61                   	popa   
  1a:	72 00                	jb     1c <__executable_start-0x80480b8>
  1c:	6c                   	insb   (%dx),%es:(%edi)
  1d:	6f                   	outsl  %ds:(%esi),(%dx)
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	67 20 6c 6f          	addr16 and %ch,0x6f(%si)
  23:	6e                   	outsb  %ds:(%esi),(%dx)
  24:	67 20 75 6e          	addr16 and %dh,0x6e(%di)
  28:	73 69                	jae    93 <__executable_start-0x8048041>
  2a:	67 6e                	addr16 outsb %ds:(%si),(%dx)
  2c:	65 64 20 69 6e       	and    %ch,%fs:%gs:0x6e(%ecx)
  31:	74 00                	je     33 <__executable_start-0x80480a1>
  33:	74 65                	je     9a <__executable_start-0x804803a>
  35:	73 74                	jae    ab <__executable_start-0x8048029>
  37:	5f                   	pop    %edi
  38:	6d                   	insl   (%dx),%es:(%edi)
  39:	61                   	popa   
  3a:	69 6e 00 75 69 6e 74 	imul   $0x746e6975,0x0(%esi),%ebp
  41:	38 5f 74             	cmp    %bl,0x74(%edi)
  44:	00 47 4e             	add    %al,0x4e(%edi)
  47:	55                   	push   %ebp
  48:	20 43 20             	and    %al,0x20(%ebx)
  4b:	34 2e                	xor    $0x2e,%al
  4d:	34 2e                	xor    $0x2e,%al
  4f:	33 00                	xor    (%eax),%eax
  51:	61                   	popa   
  52:	72 63                	jb     b7 <__executable_start-0x804801d>
  54:	34 00                	xor    $0x0,%al
  56:	73 68                	jae    c0 <__executable_start-0x8048014>
  58:	6f                   	outsl  %ds:(%esi),(%dx)
  59:	72 74                	jb     cf <__executable_start-0x8048005>
  5b:	20 69 6e             	and    %ch,0x6e(%ecx)
  5e:	74 00                	je     60 <__executable_start-0x8048074>
  60:	73 68                	jae    ca <__executable_start-0x804800a>
  62:	6f                   	outsl  %ds:(%esi),(%dx)
  63:	72 74                	jb     d9 <__executable_start-0x8047ffb>
  65:	20 75 6e             	and    %dh,0x6e(%ebp)
  68:	73 69                	jae    d3 <__executable_start-0x8048001>
  6a:	67 6e                	addr16 outsb %ds:(%si),(%dx)
  6c:	65 64 20 69 6e       	and    %ch,%fs:%gs:0x6e(%ecx)
  71:	74 00                	je     73 <__executable_start-0x8048061>
  73:	2f                   	das    
  74:	68 6f 6d 65 2f       	push   $0x2f656d6f
  79:	6a 6f                	push   $0x6f
  7b:	6e                   	outsb  %ds:(%esi),(%dx)
  7c:	68 74 68 65 61       	push   $0x61656874
  81:	70 73                	jo     f6 <__executable_start-0x8047fde>
  83:	74 6c                	je     f1 <__executable_start-0x8047fe3>
  85:	2f                   	das    
  86:	50                   	push   %eax
  87:	72 6f                	jb     f8 <__executable_start-0x8047fdc>
  89:	6a 65                	push   $0x65
  8b:	63 74 2f 50          	arpl   %si,0x50(%edi,%ebp,1)
  8f:	69 6e 74 6f 73 2f 76 	imul   $0x762f736f,0x74(%esi),%ebp
  96:	6d                   	insl   (%dx),%es:(%edi)
  97:	2f                   	das    
  98:	62 75 69             	bound  %esi,0x69(%ebp)
  9b:	6c                   	insb   (%dx),%es:(%edi)
  9c:	64 00 2e             	add    %ch,%fs:(%esi)
  9f:	2e                   	cs
  a0:	2f                   	das    
  a1:	2e                   	cs
  a2:	2e                   	cs
  a3:	2f                   	das    
  a4:	74 65                	je     10b <__executable_start-0x8047fc9>
  a6:	73 74                	jae    11c <__executable_start-0x8047fb8>
  a8:	73 2f                	jae    d9 <__executable_start-0x8047ffb>
  aa:	76 6d                	jbe    119 <__executable_start-0x8047fbb>
  ac:	2f                   	das    
  ad:	70 74                	jo     123 <__executable_start-0x8047fb1>
  af:	2d 67 72 6f 77       	sub    $0x776f7267,%eax
  b4:	2d 73 74 61 63       	sub    $0x63617473,%eax
  b9:	6b 2e 63             	imul   $0x63,(%esi),%ebp
  bc:	00 73 74             	add    %dh,0x74(%ebx)
  bf:	61                   	popa   
  c0:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
  c3:	6f                   	outsl  %ds:(%esi),(%dx)
  c4:	62 6a 00             	bound  %ebp,0x0(%edx)
  c7:	61                   	popa   
  c8:	72 63                	jb     12d <__executable_start-0x8047fa7>
  ca:	34 5f                	xor    $0x5f,%al
  cc:	69 6e 69 74 00 73 69 	imul   $0x69730074,0x69(%esi),%ebp
  d3:	7a 65                	jp     13a <__executable_start-0x8047f9a>
  d5:	5f                   	pop    %edi
  d6:	74 00                	je     d8 <__executable_start-0x8047ffc>
  d8:	61                   	popa   
  d9:	72 63                	jb     13e <__executable_start-0x8047f96>
  db:	34 5f                	xor    $0x5f,%al
  dd:	63 72 79             	arpl   %si,0x79(%edx)
  e0:	70 74                	jo     156 <__executable_start-0x8047f7e>
  e2:	00 62 75             	add    %ah,0x75(%edx)
  e5:	66 5f                	pop    %di
  e7:	00 73 77             	add    %dh,0x77(%ebx)
  ea:	61                   	popa   
  eb:	70 5f                	jo     14c <__executable_start-0x8047f88>
  ed:	62 79 74             	bound  %edi,0x74(%ecx)
  f0:	65 00 6b 65          	add    %ch,%gs:0x65(%ebx)
  f4:	79 5f                	jns    155 <__executable_start-0x8047f7f>
  f6:	00 6b 65             	add    %ch,0x65(%ebx)
  f9:	79 5f                	jns    15a <__executable_start-0x8047f7a>
  fb:	69 64 78 00 2e 2e 2f 	imul   $0x2e2f2e2e,0x0(%eax,%edi,2),%esp
 102:	2e 
 103:	2e                   	cs
 104:	2f                   	das    
 105:	74 65                	je     16c <__executable_start-0x8047f68>
 107:	73 74                	jae    17d <__executable_start-0x8047f57>
 109:	73 2f                	jae    13a <__executable_start-0x8047f9a>
 10b:	61                   	popa   
 10c:	72 63                	jb     171 <__executable_start-0x8047f63>
 10e:	34 2e                	xor    $0x2e,%al
 110:	63 00                	arpl   %ax,(%eax)
 112:	75 69                	jne    17d <__executable_start-0x8047f57>
 114:	6e                   	outsb  %ds:(%esi),(%dx)
 115:	74 33                	je     14a <__executable_start-0x8047f8a>
 117:	32 5f 74             	xor    0x74(%edi),%bl
 11a:	00 63 72             	add    %ah,0x72(%ebx)
 11d:	63 74 61 62          	arpl   %si,0x62(%ecx,%eiz,2)
 121:	00 63 6b             	add    %ah,0x6b(%ebx)
 124:	73 75                	jae    19b <__executable_start-0x8047f39>
 126:	6d                   	insl   (%dx),%es:(%edi)
 127:	00 2e                	add    %ch,(%esi)
 129:	2e                   	cs
 12a:	2f                   	das    
 12b:	2e                   	cs
 12c:	2e                   	cs
 12d:	2f                   	das    
 12e:	74 65                	je     195 <__executable_start-0x8047f3f>
 130:	73 74                	jae    1a6 <__executable_start-0x8047f2e>
 132:	73 2f                	jae    163 <__executable_start-0x8047f71>
 134:	63 6b 73             	arpl   %bp,0x73(%ebx)
 137:	75 6d                	jne    1a6 <__executable_start-0x8047f2e>
 139:	2e 63 00             	arpl   %ax,%cs:(%eax)
 13c:	73 74                	jae    1b2 <__executable_start-0x8047f22>
 13e:	61                   	popa   
 13f:	74 75                	je     1b6 <__executable_start-0x8047f1e>
 141:	73 00                	jae    143 <__executable_start-0x8047f91>
 143:	73 77                	jae    1bc <__executable_start-0x8047f18>
 145:	61                   	popa   
 146:	70 00                	jo     148 <__executable_start-0x8047f8c>
 148:	5f                   	pop    %edi
 149:	5f                   	pop    %edi
 14a:	62 75 69             	bound  %esi,0x69(%ebp)
 14d:	6c                   	insb   (%dx),%es:(%edi)
 14e:	74 69                	je     1b9 <__executable_start-0x8047f1b>
 150:	6e                   	outsb  %ds:(%esi),(%dx)
 151:	5f                   	pop    %edi
 152:	76 61                	jbe    1b5 <__executable_start-0x8047f1f>
 154:	5f                   	pop    %edi
 155:	6c                   	insb   (%dx),%es:(%edi)
 156:	69 73 74 00 5f 42 6f 	imul   $0x6f425f00,0x74(%ebx),%esi
 15d:	6f                   	outsl  %ds:(%esi),(%dx)
 15e:	6c                   	insb   (%dx),%es:(%edi)
 15f:	00 66 69             	add    %ah,0x69(%esi)
 162:	6c                   	insb   (%dx),%es:(%edi)
 163:	65                   	gs
 164:	5f                   	pop    %edi
 165:	73 69                	jae    1d0 <__executable_start-0x8047f04>
 167:	7a 65                	jp     1ce <__executable_start-0x8047f06>
 169:	00 62 6c             	add    %ah,0x6c(%edx)
 16c:	6f                   	outsl  %ds:(%esi),(%dx)
 16d:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 170:	73 69                	jae    1db <__executable_start-0x8047ef9>
 172:	7a 65                	jp     1d9 <__executable_start-0x8047efb>
 174:	00 77 61             	add    %dh,0x61(%edi)
 177:	69 74 5f 63 68 69 6c 	imul   $0x646c6968,0x63(%edi,%ebx,2),%esi
 17e:	64 
 17f:	72 65                	jb     1e6 <__executable_start-0x8047eee>
 181:	6e                   	outsb  %ds:(%esi),(%dx)
 182:	00 62 6c             	add    %ah,0x6c(%edx)
 185:	6f                   	outsl  %ds:(%esi),(%dx)
 186:	63 6b 00             	arpl   %bp,0x0(%ebx)
 189:	70 69                	jo     1f4 <__executable_start-0x8047ee0>
 18b:	64                   	fs
 18c:	73 00                	jae    18e <__executable_start-0x8047f46>
 18e:	72 65                	jb     1f5 <__executable_start-0x8047edf>
 190:	61                   	popa   
 191:	64                   	fs
 192:	5f                   	pop    %edi
 193:	64                   	fs
 194:	61                   	popa   
 195:	74 61                	je     1f8 <__executable_start-0x8047edc>
 197:	00 66 69             	add    %ah,0x69(%esi)
 19a:	6c                   	insb   (%dx),%es:(%edi)
 19b:	65                   	gs
 19c:	5f                   	pop    %edi
 19d:	6e                   	outsb  %ds:(%esi),(%dx)
 19e:	61                   	popa   
 19f:	6d                   	insl   (%dx),%es:(%edi)
 1a0:	65 00 63 68          	add    %ah,%gs:0x68(%ebx)
 1a4:	65 63 6b 5f          	arpl   %bp,%gs:0x5f(%ebx)
 1a8:	66 69 6c 65 5f 68 61 	imul   $0x6168,0x5f(%ebp,%eiz,2),%bp
 1af:	6e                   	outsb  %ds:(%esi),(%dx)
 1b0:	64                   	fs
 1b1:	6c                   	insb   (%dx),%es:(%edi)
 1b2:	65 00 63 6d          	add    %ah,%gs:0x6d(%ebx)
 1b6:	64                   	fs
 1b7:	5f                   	pop    %edi
 1b8:	6c                   	insb   (%dx),%es:(%edi)
 1b9:	69 6e 65 00 73 68 6f 	imul   $0x6f687300,0x65(%esi),%ebp
 1c0:	77 5f                	ja     221 <__executable_start-0x8047eb3>
 1c2:	63 6e 74             	arpl   %bp,0x74(%esi)
 1c5:	00 73 68             	add    %dh,0x68(%ebx)
 1c8:	75 66                	jne    230 <__executable_start-0x8047ea4>
 1ca:	66                   	data16
 1cb:	6c                   	insb   (%dx),%es:(%edi)
 1cc:	65 00 72 65          	add    %dh,%gs:0x65(%edx)
 1d0:	74 5f                	je     231 <__executable_start-0x8047ea3>
 1d2:	76 61                	jbe    235 <__executable_start-0x8047e9f>
 1d4:	6c                   	insb   (%dx),%es:(%edi)
 1d5:	00 63 68             	add    %ah,0x68(%ebx)
 1d8:	65 63 6b 5f          	arpl   %bp,%gs:0x5f(%ebx)
 1dc:	66 69 6c 65 00 66 6f 	imul   $0x6f66,0x0(%ebp,%eiz,2),%bp
 1e3:	72 6d                	jb     252 <__executable_start-0x8047e82>
 1e5:	61                   	popa   
 1e6:	74 00                	je     1e8 <__executable_start-0x8047eec>
 1e8:	73 75                	jae    25f <__executable_start-0x8047e75>
 1ea:	66 66 69 78 00 65 78 	imul   $0x7865,0x0(%eax),%di
 1f1:	70 65                	jo     258 <__executable_start-0x8047e7c>
 1f3:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 1f7:	5f                   	pop    %edi
 1f8:	64                   	fs
 1f9:	61                   	popa   
 1fa:	74 61                	je     25d <__executable_start-0x8047e77>
 1fc:	00 76 6d             	add    %dh,0x6d(%esi)
 1ff:	73 67                	jae    268 <__executable_start-0x8047e6c>
 201:	00 65 78             	add    %ah,0x78(%ebp)
 204:	70 65                	jo     26b <__executable_start-0x8047e69>
 206:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
 20a:	5f                   	pop    %edi
 20b:	64                   	fs
 20c:	61                   	popa   
 20d:	74 61                	je     270 <__executable_start-0x8047e64>
 20f:	5f                   	pop    %edi
 210:	00 63 68             	add    %ah,0x68(%ebx)
 213:	69 6c 64 5f 63 6e 74 	imul   $0x746e63,0x5f(%esp,%eiz,2),%ebp
 21a:	00 
 21b:	71 75                	jno    292 <__executable_start-0x8047e42>
 21d:	69 65 74 00 63 68 69 	imul   $0x69686300,0x74(%ebp),%esp
 224:	6c                   	insb   (%dx),%es:(%edi)
 225:	64                   	fs
 226:	5f                   	pop    %edi
 227:	6e                   	outsb  %ds:(%esi),(%dx)
 228:	61                   	popa   
 229:	6d                   	insl   (%dx),%es:(%edi)
 22a:	65 00 63 6f          	add    %ah,%gs:0x6f(%ebx)
 22e:	6d                   	insl   (%dx),%es:(%edi)
 22f:	70 61                	jo     292 <__executable_start-0x8047e42>
 231:	72 65                	jb     298 <__executable_start-0x8047e3c>
 233:	5f                   	pop    %edi
 234:	62 79 74             	bound  %edi,0x74(%ecx)
 237:	65                   	gs
 238:	73 00                	jae    23a <__executable_start-0x8047e9a>
 23a:	61                   	popa   
 23b:	72 67                	jb     2a4 <__executable_start-0x8047e30>
 23d:	73 00                	jae    23f <__executable_start-0x8047e95>
 23f:	72 65                	jb     2a6 <__executable_start-0x8047e2e>
 241:	61                   	popa   
 242:	64                   	fs
 243:	5f                   	pop    %edi
 244:	64                   	fs
 245:	61                   	popa   
 246:	74 61                	je     2a9 <__executable_start-0x8047e2b>
 248:	5f                   	pop    %edi
 249:	00 74 65 73          	add    %dh,0x73(%ebp,%eiz,2)
 24d:	74 5f                	je     2ae <__executable_start-0x8047e26>
 24f:	6e                   	outsb  %ds:(%esi),(%dx)
 250:	61                   	popa   
 251:	6d                   	insl   (%dx),%es:(%edi)
 252:	65 00 2e             	add    %ch,%gs:(%esi)
 255:	2e                   	cs
 256:	2f                   	das    
 257:	2e                   	cs
 258:	2e                   	cs
 259:	2f                   	das    
 25a:	74 65                	je     2c1 <__executable_start-0x8047e13>
 25c:	73 74                	jae    2d2 <__executable_start-0x8047e02>
 25e:	73 2f                	jae    28f <__executable_start-0x8047e45>
 260:	6c                   	insb   (%dx),%es:(%edi)
 261:	69 62 2e 63 00 65 78 	imul   $0x78650063,0x2e(%edx),%esp
 268:	65 63 5f 63          	arpl   %bx,%gs:0x63(%edi)
 26c:	68 69 6c 64 72       	push   $0x72646c69
 271:	65 6e                	outsb  %gs:(%esi),(%dx)
 273:	00 66 61             	add    %ah,0x61(%esi)
 276:	69 6c 00 2e 2e 2f 2e 	imul   $0x2e2e2f2e,0x2e(%eax,%eax,1),%ebp
 27d:	2e 
 27e:	2f                   	das    
 27f:	74 65                	je     2e6 <__executable_start-0x8047dee>
 281:	73 74                	jae    2f7 <__executable_start-0x8047ddd>
 283:	73 2f                	jae    2b4 <__executable_start-0x8047e20>
 285:	6d                   	insl   (%dx),%es:(%edi)
 286:	61                   	popa   
 287:	69 6e 2e 63 00 61 72 	imul   $0x72610063,0x2e(%esi),%ebp
 28e:	67 63 00             	addr16 arpl %ax,(%bx,%si)
 291:	61                   	popa   
 292:	72 67                	jb     2fb <__executable_start-0x8047dd9>
 294:	76 00                	jbe    296 <__executable_start-0x8047e3e>
 296:	5f                   	pop    %edi
 297:	73 74                	jae    30d <__executable_start-0x8047dc7>
 299:	61                   	popa   
 29a:	72 74                	jb     310 <__executable_start-0x8047dc4>
 29c:	00 2e                	add    %ch,(%esi)
 29e:	2e                   	cs
 29f:	2f                   	das    
 2a0:	2e                   	cs
 2a1:	2e                   	cs
 2a2:	2f                   	das    
 2a3:	6c                   	insb   (%dx),%es:(%edi)
 2a4:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 2ab:	2f                   	das    
 2ac:	65 6e                	outsb  %gs:(%esi),(%dx)
 2ae:	74 72                	je     322 <__executable_start-0x8047db2>
 2b0:	79 2e                	jns    2e0 <__executable_start-0x8047df4>
 2b2:	63 00                	arpl   %ax,(%eax)
 2b4:	72 61                	jb     317 <__executable_start-0x8047dbd>
 2b6:	6e                   	outsb  %ds:(%esi),(%dx)
 2b7:	64 6f                	outsl  %fs:(%esi),(%dx)
 2b9:	6d                   	insl   (%dx),%es:(%edi)
 2ba:	5f                   	pop    %edi
 2bb:	62 79 74             	bound  %edi,0x74(%ecx)
 2be:	65                   	gs
 2bf:	73 00                	jae    2c1 <__executable_start-0x8047e13>
 2c1:	69 6e 69 74 65 64 00 	imul   $0x646574,0x69(%esi),%ebp
 2c8:	72 61                	jb     32b <__executable_start-0x8047da9>
 2ca:	6e                   	outsb  %ds:(%esi),(%dx)
 2cb:	64 6f                	outsl  %fs:(%esi),(%dx)
 2cd:	6d                   	insl   (%dx),%es:(%edi)
 2ce:	5f                   	pop    %edi
 2cf:	75 6c                	jne    33d <__executable_start-0x8047d97>
 2d1:	6f                   	outsl  %ds:(%esi),(%dx)
 2d2:	6e                   	outsb  %ds:(%esi),(%dx)
 2d3:	67 00 72 61          	addr16 add %dh,0x61(%bp,%si)
 2d7:	6e                   	outsb  %ds:(%esi),(%dx)
 2d8:	64 6f                	outsl  %fs:(%esi),(%dx)
 2da:	6d                   	insl   (%dx),%es:(%edi)
 2db:	5f                   	pop    %edi
 2dc:	69 6e 69 74 00 73 65 	imul   $0x65730074,0x69(%esi),%ebp
 2e3:	65                   	gs
 2e4:	64                   	fs
 2e5:	70 00                	jo     2e7 <__executable_start-0x8047ded>
 2e7:	73 65                	jae    34e <__executable_start-0x8047d86>
 2e9:	65 64 00 2e          	add    %ch,%fs:%gs:(%esi)
 2ed:	2e                   	cs
 2ee:	2f                   	das    
 2ef:	2e                   	cs
 2f0:	2e                   	cs
 2f1:	2f                   	das    
 2f2:	6c                   	insb   (%dx),%es:(%edi)
 2f3:	69 62 2f 72 61 6e 64 	imul   $0x646e6172,0x2f(%edx),%esp
 2fa:	6f                   	outsl  %ds:(%esi),(%dx)
 2fb:	6d                   	insl   (%dx),%es:(%edi)
 2fc:	2e 63 00             	arpl   %ax,%cs:(%eax)
 2ff:	69 73 64 69 67 69 74 	imul   $0x74696769,0x64(%ebx),%esi
 306:	00 47 52             	add    %al,0x52(%edi)
 309:	4f                   	dec    %edi
 30a:	55                   	push   %ebp
 30b:	50                   	push   %eax
 30c:	00 62 75             	add    %ah,0x75(%edx)
 30f:	66 5f                	pop    %di
 311:	73 69                	jae    37c <__executable_start-0x8047d58>
 313:	7a 65                	jp     37a <__executable_start-0x8047d5a>
 315:	00 75 69             	add    %dh,0x69(%ebp)
 318:	6e                   	outsb  %ds:(%esi),(%dx)
 319:	74 36                	je     351 <__executable_start-0x8047d83>
 31b:	34 5f                	xor    $0x5f,%al
 31d:	74 00                	je     31f <__executable_start-0x8047db5>
 31f:	2e                   	cs
 320:	2e                   	cs
 321:	2f                   	das    
 322:	2e                   	cs
 323:	2e                   	cs
 324:	2f                   	das    
 325:	6c                   	insb   (%dx),%es:(%edi)
 326:	69 62 2f 73 74 64 69 	imul   $0x69647473,0x2f(%edx),%esp
 32d:	6f                   	outsl  %ds:(%esi),(%dx)
 32e:	2e 63 00             	arpl   %ax,%cs:(%eax)
 331:	67 72 6f             	addr16 jb 3a3 <__executable_start-0x8047d31>
 334:	75 70                	jne    3a6 <__executable_start-0x8047d2e>
 336:	00 70 61             	add    %dh,0x61(%eax)
 339:	64                   	fs
 33a:	5f                   	pop    %edi
 33b:	63 6e 74             	arpl   %bp,0x74(%esi)
 33e:	00 64 69 67          	add    %ah,0x67(%ecx,%ebp,2)
 342:	69 74 5f 63 6e 74 00 	imul   $0x7200746e,0x63(%edi,%ebx,2),%esi
 349:	72 
 34a:	65                   	gs
 34b:	74 76                	je     3c3 <__executable_start-0x8047d11>
 34d:	61                   	popa   
 34e:	6c                   	insb   (%dx),%es:(%edi)
 34f:	00 5a 45             	add    %bl,0x45(%edx)
 352:	52                   	push   %edx
 353:	4f                   	dec    %edi
 354:	00 74 79 70          	add    %dh,0x70(%ecx,%edi,2)
 358:	65 00 6f 75          	add    %ch,%gs:0x75(%edi)
 35c:	74 70                	je     3ce <__executable_start-0x8047d06>
 35e:	75 74                	jne    3d4 <__executable_start-0x8047d00>
 360:	5f                   	pop    %edi
 361:	64                   	fs
 362:	75 70                	jne    3d4 <__executable_start-0x8047d00>
 364:	00 75 69             	add    %dh,0x69(%ebp)
 367:	6e                   	outsb  %ds:(%esi),(%dx)
 368:	74 70                	je     3da <__executable_start-0x8047cfa>
 36a:	74 72                	je     3de <__executable_start-0x8047cf6>
 36c:	5f                   	pop    %edi
 36d:	74 00                	je     36f <__executable_start-0x8047d65>
 36f:	5f                   	pop    %edi
 370:	5f                   	pop    %edi
 371:	76 70                	jbe    3e3 <__executable_start-0x8047cf1>
 373:	72 69                	jb     3de <__executable_start-0x8047cf6>
 375:	6e                   	outsb  %ds:(%esi),(%dx)
 376:	74 66                	je     3de <__executable_start-0x8047cf6>
 378:	00 76 73             	add    %dh,0x73(%esi)
 37b:	6e                   	outsb  %ds:(%esi),(%dx)
 37c:	70 72                	jo     3f0 <__executable_start-0x8047ce4>
 37e:	69 6e 74 66 5f 68 65 	imul   $0x65685f66,0x74(%esi),%ebp
 385:	6c                   	insb   (%dx),%es:(%edi)
 386:	70 65                	jo     3ed <__executable_start-0x8047ce7>
 388:	72 00                	jb     38a <__executable_start-0x8047d4a>
 38a:	77 69                	ja     3f5 <__executable_start-0x8047cdf>
 38c:	64                   	fs
 38d:	74 68                	je     3f7 <__executable_start-0x8047cdd>
 38f:	00 6e 6f             	add    %ch,0x6f(%esi)
 392:	74 5f                	je     3f3 <__executable_start-0x8047ce1>
 394:	61                   	popa   
 395:	5f                   	pop    %edi
 396:	66                   	data16
 397:	6c                   	insb   (%dx),%es:(%edi)
 398:	61                   	popa   
 399:	67 00 62 61          	addr16 add %ah,0x61(%bp,%si)
 39d:	73 65                	jae    404 <__executable_start-0x8047cd0>
 39f:	5f                   	pop    %edi
 3a0:	64 00 43 48          	add    %al,%fs:0x48(%ebx)
 3a4:	41                   	inc    %ecx
 3a5:	52                   	push   %edx
 3a6:	00 6e 65             	add    %ch,0x65(%esi)
 3a9:	67 61                	addr16 popa 
 3ab:	74 69                	je     416 <__executable_start-0x8047cbe>
 3ad:	76 65                	jbe    414 <__executable_start-0x8047cc0>
 3af:	00 53 49             	add    %dl,0x49(%ebx)
 3b2:	5a                   	pop    %edx
 3b3:	45                   	inc    %ebp
 3b4:	54                   	push   %esp
 3b5:	00 50 4c             	add    %dl,0x4c(%eax)
 3b8:	55                   	push   %ebp
 3b9:	53                   	push   %ebx
 3ba:	00 64 69 67          	add    %ah,0x67(%ecx,%ebp,2)
 3be:	69 74 73 00 69 6e 74 	imul   $0x65746e69,0x0(%ebx,%esi,2),%esi
 3c5:	65 
 3c6:	67                   	addr16
 3c7:	65                   	gs
 3c8:	72 5f                	jb     429 <__executable_start-0x8047cab>
 3ca:	62 61 73             	bound  %esp,0x73(%ecx)
 3cd:	65 00 62 61          	add    %ah,%gs:0x61(%edx)
 3d1:	73 65                	jae    438 <__executable_start-0x8047c9c>
 3d3:	5f                   	pop    %edi
 3d4:	58                   	pop    %eax
 3d5:	00 53 50             	add    %dl,0x50(%ebx)
 3d8:	41                   	inc    %ecx
 3d9:	43                   	inc    %ebx
 3da:	45                   	inc    %ebp
 3db:	00 66 6c             	add    %ah,0x6c(%esi)
 3de:	61                   	popa   
 3df:	67 73 00             	addr16 jae 3e2 <__executable_start-0x8047cf2>
 3e2:	61                   	popa   
 3e3:	75 78                	jne    45d <__executable_start-0x8047c77>
 3e5:	5f                   	pop    %edi
 3e6:	00 66 6f             	add    %ah,0x6f(%esi)
 3e9:	72 6d                	jb     458 <__executable_start-0x8047c7c>
 3eb:	61                   	popa   
 3ec:	74 5f                	je     44d <__executable_start-0x8047c87>
 3ee:	69 6e 74 65 67 65 72 	imul   $0x72656765,0x74(%esi),%ebp
 3f5:	00 61 73             	add    %ah,0x73(%ecx)
 3f8:	63 69 69             	arpl   %bp,0x69(%ecx)
 3fb:	00 62 61             	add    %ah,0x61(%edx)
 3fe:	73 65                	jae    465 <__executable_start-0x8047c6f>
 400:	5f                   	pop    %edi
 401:	6f                   	outsl  %ds:(%esi),(%dx)
 402:	00 75 69             	add    %dh,0x69(%ebp)
 405:	6e                   	outsb  %ds:(%esi),(%dx)
 406:	74 6d                	je     475 <__executable_start-0x8047c5f>
 408:	61                   	popa   
 409:	78 5f                	js     46a <__executable_start-0x8047c6a>
 40b:	74 00                	je     40d <__executable_start-0x8047cc7>
 40d:	5f                   	pop    %edi
 40e:	5f                   	pop    %edi
 40f:	66                   	data16
 410:	75 6e                	jne    480 <__executable_start-0x8047c54>
 412:	63 5f 5f             	arpl   %bx,0x5f(%edi)
 415:	00 70 65             	add    %dh,0x65(%eax)
 418:	72 5f                	jb     479 <__executable_start-0x8047c5b>
 41a:	6c                   	insb   (%dx),%es:(%edi)
 41b:	69 6e 65 00 62 61 73 	imul   $0x73616200,0x65(%esi),%ebp
 422:	65                   	gs
 423:	5f                   	pop    %edi
 424:	78 00                	js     426 <__executable_start-0x8047cae>
 426:	76 73                	jbe    49b <__executable_start-0x8047c39>
 428:	6e                   	outsb  %ds:(%esi),(%dx)
 429:	70 72                	jo     49d <__executable_start-0x8047c37>
 42b:	69 6e 74 66 00 68 65 	imul   $0x65680066,0x74(%esi),%ebp
 432:	78 5f                	js     493 <__executable_start-0x8047c41>
 434:	64                   	fs
 435:	75 6d                	jne    4a4 <__executable_start-0x8047c30>
 437:	70 00                	jo     439 <__executable_start-0x8047c9b>
 439:	49                   	dec    %ecx
 43a:	4e                   	dec    %esi
 43b:	54                   	push   %esp
 43c:	4d                   	dec    %ebp
 43d:	41                   	inc    %ecx
 43e:	58                   	pop    %eax
 43f:	00 76 61             	add    %dh,0x61(%esi)
 442:	6c                   	insb   (%dx),%es:(%edi)
 443:	75 65                	jne    4aa <__executable_start-0x8047c2a>
 445:	00 4c 4f 4e          	add    %cl,0x4e(%edi,%ecx,2)
 449:	47                   	inc    %edi
 44a:	4c                   	dec    %esp
 44b:	4f                   	dec    %edi
 44c:	4e                   	dec    %esi
 44d:	47                   	inc    %edi
 44e:	00 69 73             	add    %ch,0x73(%ecx)
 451:	70 72                	jo     4c5 <__executable_start-0x8047c0f>
 453:	69 6e 74 00 62 75 66 	imul   $0x66756200,0x74(%esi),%ebp
 45a:	66                   	data16
 45b:	65                   	gs
 45c:	72 00                	jb     45e <__executable_start-0x8047c76>
 45e:	73 69                	jae    4c9 <__executable_start-0x8047c0b>
 460:	67 6e                	addr16 outsb %ds:(%si),(%dx)
 462:	00 69 73             	add    %ch,0x73(%ecx)
 465:	5f                   	pop    %edi
 466:	73 69                	jae    4d1 <__executable_start-0x8047c03>
 468:	67 6e                	addr16 outsb %ds:(%si),(%dx)
 46a:	65 64 00 50 4f       	add    %dl,%fs:%gs:0x4f(%eax)
 46f:	55                   	push   %ebp
 470:	4e                   	dec    %esi
 471:	44                   	inc    %esp
 472:	00 76 73             	add    %dh,0x73(%esi)
 475:	6e                   	outsb  %ds:(%esi),(%dx)
 476:	70 72                	jo     4ea <__executable_start-0x8047bea>
 478:	69 6e 74 66 5f 61 75 	imul   $0x75615f66,0x74(%esi),%ebp
 47f:	78 00                	js     481 <__executable_start-0x8047c53>
 481:	70 61                	jo     4e4 <__executable_start-0x8047bf0>
 483:	72 73                	jb     4f8 <__executable_start-0x8047bdc>
 485:	65                   	gs
 486:	5f                   	pop    %edi
 487:	63 6f 6e             	arpl   %bp,0x6e(%edi)
 48a:	76 65                	jbe    4f1 <__executable_start-0x8047be3>
 48c:	72 73                	jb     501 <__executable_start-0x8047bd3>
 48e:	69 6f 6e 00 50 54 52 	imul   $0x52545000,0x6e(%edi),%ebp
 495:	44                   	inc    %esp
 496:	49                   	dec    %ecx
 497:	46                   	inc    %esi
 498:	46                   	inc    %esi
 499:	54                   	push   %esp
 49a:	00 66 6f             	add    %ah,0x6f(%esi)
 49d:	72 6d                	jb     50c <__executable_start-0x8047bc8>
 49f:	61                   	popa   
 4a0:	74 5f                	je     501 <__executable_start-0x8047bd3>
 4a2:	73 74                	jae    518 <__executable_start-0x8047bbc>
 4a4:	72 69                	jb     50f <__executable_start-0x8047bc5>
 4a6:	6e                   	outsb  %ds:(%esi),(%dx)
 4a7:	67 00 6f 75          	addr16 add %ch,0x75(%bx)
 4ab:	74 70                	je     51d <__executable_start-0x8047bb7>
 4ad:	75 74                	jne    523 <__executable_start-0x8047bb1>
 4af:	00 53 48             	add    %dl,0x48(%ebx)
 4b2:	4f                   	dec    %edi
 4b3:	52                   	push   %edx
 4b4:	54                   	push   %esp
 4b5:	00 70 72             	add    %dh,0x72(%eax)
 4b8:	69 6e 74 66 5f 63 6f 	imul   $0x6f635f66,0x74(%esi),%ebp
 4bf:	6e                   	outsb  %ds:(%esi),(%dx)
 4c0:	76 65                	jbe    527 <__executable_start-0x8047bad>
 4c2:	72 73                	jb     537 <__executable_start-0x8047b9d>
 4c4:	69 6f 6e 00 6d 61 78 	imul   $0x78616d00,0x6e(%edi),%ebp
 4cb:	5f                   	pop    %edi
 4cc:	6c                   	insb   (%dx),%es:(%edi)
 4cd:	65 6e                	outsb  %gs:(%esi),(%dx)
 4cf:	67 74 68             	addr16 je 53a <__executable_start-0x8047b9a>
 4d2:	00 5f 5f             	add    %bl,0x5f(%edi)
 4d5:	70 72                	jo     549 <__executable_start-0x8047b8b>
 4d7:	69 6e 74 66 00 4d 49 	imul   $0x494d0066,0x74(%esi),%ebp
 4de:	4e                   	dec    %esi
 4df:	55                   	push   %ebp
 4e0:	53                   	push   %ebx
 4e1:	00 70 72             	add    %dh,0x72(%eax)
 4e4:	65 63 69 73          	arpl   %bp,%gs:0x73(%ecx)
 4e8:	69 6f 6e 00 6d 65 6d 	imul   $0x6d656d00,0x6e(%edi),%ebp
 4ef:	6d                   	insl   (%dx),%es:(%edi)
 4f0:	6f                   	outsl  %ds:(%esi),(%dx)
 4f1:	76 65                	jbe    558 <__executable_start-0x8047b7c>
 4f3:	00 68 61             	add    %ch,0x61(%eax)
 4f6:	79 73                	jns    56b <__executable_start-0x8047b69>
 4f8:	74 61                	je     55b <__executable_start-0x8047b79>
 4fa:	63 6b 00             	arpl   %bp,0x0(%ebx)
 4fd:	73 74                	jae    573 <__executable_start-0x8047b61>
 4ff:	72 63                	jb     564 <__executable_start-0x8047b70>
 501:	68 72 00 6d 61       	push   $0x616d0072
 506:	78 6c                	js     574 <__executable_start-0x8047b60>
 508:	65 6e                	outsb  %gs:(%esi),(%dx)
 50a:	00 6d 65             	add    %ch,0x65(%ebp)
 50d:	6d                   	insl   (%dx),%es:(%edi)
 50e:	63 6d 70             	arpl   %bp,0x70(%ebp)
 511:	00 73 72             	add    %dh,0x72(%ebx)
 514:	63 5f 6c             	arpl   %bx,0x6c(%edi)
 517:	65 6e                	outsb  %gs:(%esi),(%dx)
 519:	00 73 72             	add    %dh,0x72(%ebx)
 51c:	63 5f 00             	arpl   %bx,0x0(%edi)
 51f:	73 74                	jae    595 <__executable_start-0x8047b3f>
 521:	72 6c                	jb     58f <__executable_start-0x8047b45>
 523:	65 6e                	outsb  %gs:(%esi),(%dx)
 525:	00 73 74             	add    %dh,0x74(%ebx)
 528:	72 6c                	jb     596 <__executable_start-0x8047b3e>
 52a:	63 70 79             	arpl   %si,0x79(%eax)
 52d:	00 64 65 6c          	add    %ah,0x6c(%ebp,%eiz,2)
 531:	69 6d 69 74 65 72 73 	imul   $0x73726574,0x69(%ebp),%ebp
 538:	00 73 74             	add    %dh,0x74(%ebx)
 53b:	6f                   	outsl  %ds:(%esi),(%dx)
 53c:	70 00                	jo     53e <__executable_start-0x8047b96>
 53e:	64                   	fs
 53f:	73 74                	jae    5b5 <__executable_start-0x8047b1f>
 541:	5f                   	pop    %edi
 542:	6c                   	insb   (%dx),%es:(%edi)
 543:	65 6e                	outsb  %gs:(%esi),(%dx)
 545:	00 73 74             	add    %dh,0x74(%ebx)
 548:	72 70                	jb     5ba <__executable_start-0x8047b1a>
 54a:	62 72 6b             	bound  %esi,0x6b(%edx)
 54d:	00 6d 65             	add    %ch,0x65(%ebp)
 550:	6d                   	insl   (%dx),%es:(%edi)
 551:	63 68 72             	arpl   %bp,0x72(%eax)
 554:	00 6e 65             	add    %ch,0x65(%esi)
 557:	65                   	gs
 558:	64                   	fs
 559:	6c                   	insb   (%dx),%es:(%edi)
 55a:	65 00 64 73 74       	add    %ah,%gs:0x74(%ebx,%esi,2)
 55f:	5f                   	pop    %edi
 560:	00 62 6c             	add    %ah,0x6c(%edx)
 563:	6f                   	outsl  %ds:(%esi),(%dx)
 564:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 567:	00 73 74             	add    %dh,0x74(%ebx)
 56a:	72 63                	jb     5cf <__executable_start-0x8047b05>
 56c:	73 70                	jae    5de <__executable_start-0x8047af6>
 56e:	6e                   	outsb  %ds:(%esi),(%dx)
 56f:	00 73 6b             	add    %dh,0x6b(%ebx)
 572:	69 70 00 73 61 76 65 	imul   $0x65766173,0x0(%eax),%esi
 579:	5f                   	pop    %edi
 57a:	70 74                	jo     5f0 <__executable_start-0x8047ae4>
 57c:	72 00                	jb     57e <__executable_start-0x8047b56>
 57e:	73 74                	jae    5f4 <__executable_start-0x8047ae0>
 580:	72 6c                	jb     5ee <__executable_start-0x8047ae6>
 582:	63 61 74             	arpl   %sp,0x74(%ecx)
 585:	00 73 74             	add    %dh,0x74(%ebx)
 588:	72 6e                	jb     5f8 <__executable_start-0x8047adc>
 58a:	6c                   	insb   (%dx),%es:(%edi)
 58b:	65 6e                	outsb  %gs:(%esi),(%dx)
 58d:	00 2e                	add    %ch,(%esi)
 58f:	2e                   	cs
 590:	2f                   	das    
 591:	2e                   	cs
 592:	2e                   	cs
 593:	2f                   	das    
 594:	6c                   	insb   (%dx),%es:(%edi)
 595:	69 62 2f 73 74 72 69 	imul   $0x69727473,0x2f(%edx),%esp
 59c:	6e                   	outsb  %ds:(%esi),(%dx)
 59d:	67 2e 63 00          	addr16 arpl %ax,%cs:(%bx,%si)
 5a1:	6e                   	outsb  %ds:(%esi),(%dx)
 5a2:	65                   	gs
 5a3:	65                   	gs
 5a4:	64                   	fs
 5a5:	6c                   	insb   (%dx),%es:(%edi)
 5a6:	65                   	gs
 5a7:	5f                   	pop    %edi
 5a8:	6c                   	insb   (%dx),%es:(%edi)
 5a9:	65 6e                	outsb  %gs:(%esi),(%dx)
 5ab:	00 73 74             	add    %dh,0x74(%ebx)
 5ae:	72 63                	jb     613 <__executable_start-0x8047ac1>
 5b0:	6d                   	insl   (%dx),%es:(%edi)
 5b1:	70 00                	jo     5b3 <__executable_start-0x8047b21>
 5b3:	6d                   	insl   (%dx),%es:(%edi)
 5b4:	65                   	gs
 5b5:	6d                   	insl   (%dx),%es:(%edi)
 5b6:	63 70 79             	arpl   %si,0x79(%eax)
 5b9:	00 73 74             	add    %dh,0x74(%ebx)
 5bc:	72 73                	jb     631 <__executable_start-0x8047aa3>
 5be:	70 6e                	jo     62e <__executable_start-0x8047aa6>
 5c0:	00 6d 65             	add    %ch,0x65(%ebp)
 5c3:	6d                   	insl   (%dx),%es:(%edi)
 5c4:	73 65                	jae    62b <__executable_start-0x8047aa9>
 5c6:	74 00                	je     5c8 <__executable_start-0x8047b0c>
 5c8:	68 61 79 73 74       	push   $0x74737961
 5cd:	61                   	popa   
 5ce:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 5d1:	6c                   	insb   (%dx),%es:(%edi)
 5d2:	65 6e                	outsb  %gs:(%esi),(%dx)
 5d4:	00 74 6f 6b          	add    %dh,0x6b(%edi,%ebp,2)
 5d8:	65 6e                	outsb  %gs:(%esi),(%dx)
 5da:	00 73 74             	add    %dh,0x74(%ebx)
 5dd:	72 73                	jb     652 <__executable_start-0x8047a82>
 5df:	74 72                	je     653 <__executable_start-0x8047a81>
 5e1:	00 63 6f             	add    %ah,0x6f(%ebx)
 5e4:	70 79                	jo     65f <__executable_start-0x8047a75>
 5e6:	5f                   	pop    %edi
 5e7:	63 6e 74             	arpl   %bp,0x74(%esi)
 5ea:	00 73 74             	add    %dh,0x74(%ebx)
 5ed:	72 74                	jb     663 <__executable_start-0x8047a71>
 5ef:	6f                   	outsl  %ds:(%esi),(%dx)
 5f0:	6b 5f 72 00          	imul   $0x0,0x72(%edi),%ebx
 5f4:	73 74                	jae    66a <__executable_start-0x8047a6a>
 5f6:	72 72                	jb     66a <__executable_start-0x8047a6a>
 5f8:	63 68 72             	arpl   %bp,0x72(%eax)
 5fb:	00 6e 5f             	add    %ch,0x5f(%esi)
 5fe:	61                   	popa   
 5ff:	62 73 00             	bound  %esi,0x0(%ebx)
 602:	5f                   	pop    %edi
 603:	5f                   	pop    %edi
 604:	6d                   	insl   (%dx),%es:(%edi)
 605:	6f                   	outsl  %ds:(%esi),(%dx)
 606:	64 64 69 33 00 5f 5f 	imul   $0x755f5f00,%fs:(%ebx),%esi
 60d:	75 
 60e:	6d                   	insl   (%dx),%es:(%edi)
 60f:	6f                   	outsl  %ds:(%esi),(%dx)
 610:	64 64 69 33 00 73 6d 	imul   $0x6f6d7300,%fs:(%ebx),%esi
 617:	6f 
 618:	64                   	fs
 619:	36                   	ss
 61a:	34 00                	xor    $0x0,%al
 61c:	64 69 76 6c 00 2e 2e 	imul   $0x2f2e2e00,%fs:0x6c(%esi),%esi
 623:	2f 
 624:	2e                   	cs
 625:	2e                   	cs
 626:	2f                   	das    
 627:	6c                   	insb   (%dx),%es:(%edi)
 628:	69 62 2f 61 72 69 74 	imul   $0x74697261,0x2f(%edx),%esp
 62f:	68 6d 65 74 69       	push   $0x6974656d
 634:	63 2e                	arpl   %bp,(%esi)
 636:	63 00                	arpl   %ax,(%eax)
 638:	5f                   	pop    %edi
 639:	5f                   	pop    %edi
 63a:	64 69 76 64 69 33 00 	imul   $0x75003369,%fs:0x64(%esi),%esi
 641:	75 
 642:	64 69 76 36 34 00 5f 	imul   $0x5f5f0034,%fs:0x36(%esi),%esi
 649:	5f 
 64a:	75 64                	jne    6b0 <__executable_start-0x8047a24>
 64c:	69 76 64 69 33 00 75 	imul   $0x75003369,0x64(%esi),%esi
 653:	6d                   	insl   (%dx),%es:(%edi)
 654:	6f                   	outsl  %ds:(%esi),(%dx)
 655:	64                   	fs
 656:	36                   	ss
 657:	34 00                	xor    $0x0,%al
 659:	71 5f                	jno    6ba <__executable_start-0x8047a1a>
 65b:	61                   	popa   
 65c:	62 73 00             	bound  %esi,0x0(%ebx)
 65f:	73 64                	jae    6c5 <__executable_start-0x8047a0f>
 661:	69 76 36 34 00 64 5f 	imul   $0x5f640034,0x36(%esi),%esi
 668:	61                   	popa   
 669:	62 73 00             	bound  %esi,0x0(%ebx)
 66c:	6d                   	insl   (%dx),%es:(%edi)
 66d:	65                   	gs
 66e:	73 73                	jae    6e3 <__executable_start-0x80479f1>
 670:	61                   	popa   
 671:	67 65 00 64 65       	addr16 add %ah,%gs:0x65(%si)
 676:	62 75 67             	bound  %esi,0x67(%ebp)
 679:	5f                   	pop    %edi
 67a:	70 61                	jo     6dd <__executable_start-0x80479f7>
 67c:	6e                   	outsb  %ds:(%esi),(%dx)
 67d:	69 63 00 66 75 6e 63 	imul   $0x636e7566,0x0(%ebx),%esp
 684:	74 69                	je     6ef <__executable_start-0x80479e5>
 686:	6f                   	outsl  %ds:(%esi),(%dx)
 687:	6e                   	outsb  %ds:(%esi),(%dx)
 688:	00 2e                	add    %ch,(%esi)
 68a:	2e                   	cs
 68b:	2f                   	das    
 68c:	2e                   	cs
 68d:	2e                   	cs
 68e:	2f                   	das    
 68f:	6c                   	insb   (%dx),%es:(%edi)
 690:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 697:	2f                   	das    
 698:	64 65 62 75 67       	bound  %esi,%fs:%gs:0x67(%ebp)
 69d:	2e 63 00             	arpl   %ax,%cs:(%eax)
 6a0:	6f                   	outsl  %ds:(%esi),(%dx)
 6a1:	70 65                	jo     708 <__executable_start-0x80479cc>
 6a3:	6e                   	outsb  %ds:(%esi),(%dx)
 6a4:	00 63 68             	add    %ah,0x68(%ebx)
 6a7:	64 69 72 00 68 61 6c 	imul   $0x746c6168,%fs:0x0(%edx),%esi
 6ae:	74 
 6af:	00 53 59             	add    %dl,0x59(%ebx)
 6b2:	53                   	push   %ebx
 6b3:	5f                   	pop    %edi
 6b4:	4d                   	dec    %ebp
 6b5:	4d                   	dec    %ebp
 6b6:	41                   	inc    %ecx
 6b7:	50                   	push   %eax
 6b8:	00 74 65 6c          	add    %dh,0x6c(%ebp,%eiz,2)
 6bc:	6c                   	insb   (%dx),%es:(%edi)
 6bd:	00 61 64             	add    %ah,0x64(%ecx)
 6c0:	64                   	fs
 6c1:	72 00                	jb     6c3 <__executable_start-0x8047a11>
 6c3:	69 6e 75 6d 62 65 72 	imul   $0x7265626d,0x75(%esi),%ebp
 6ca:	00 53 59             	add    %dl,0x59(%ebx)
 6cd:	53                   	push   %ebx
 6ce:	5f                   	pop    %edi
 6cf:	52                   	push   %edx
 6d0:	45                   	inc    %ebp
 6d1:	41                   	inc    %ecx
 6d2:	44                   	inc    %esp
 6d3:	44                   	inc    %esp
 6d4:	49                   	dec    %ecx
 6d5:	52                   	push   %edx
 6d6:	00 53 59             	add    %dl,0x59(%ebx)
 6d9:	53                   	push   %ebx
 6da:	5f                   	pop    %edi
 6db:	43                   	inc    %ebx
 6dc:	48                   	dec    %eax
 6dd:	44                   	inc    %esp
 6de:	49                   	dec    %ecx
 6df:	52                   	push   %edx
 6e0:	00 69 6e             	add    %ch,0x6e(%ecx)
 6e3:	69 74 69 61 6c 5f 73 	imul   $0x69735f6c,0x61(%ecx,%ebp,2),%esi
 6ea:	69 
 6eb:	7a 65                	jp     752 <__executable_start-0x8047982>
 6ed:	00 53 59             	add    %dl,0x59(%ebx)
 6f0:	53                   	push   %ebx
 6f1:	5f                   	pop    %edi
 6f2:	45                   	inc    %ebp
 6f3:	58                   	pop    %eax
 6f4:	45                   	inc    %ebp
 6f5:	43                   	inc    %ebx
 6f6:	00 66 69             	add    %ah,0x69(%esi)
 6f9:	6c                   	insb   (%dx),%es:(%edi)
 6fa:	65                   	gs
 6fb:	73 69                	jae    766 <__executable_start-0x804796e>
 6fd:	7a 65                	jp     764 <__executable_start-0x8047970>
 6ff:	00 53 59             	add    %dl,0x59(%ebx)
 702:	53                   	push   %ebx
 703:	5f                   	pop    %edi
 704:	52                   	push   %edx
 705:	45                   	inc    %ebp
 706:	41                   	inc    %ecx
 707:	44                   	inc    %esp
 708:	00 63 72             	add    %ah,0x72(%ebx)
 70b:	65                   	gs
 70c:	61                   	popa   
 70d:	74 65                	je     774 <__executable_start-0x8047960>
 70f:	00 53 59             	add    %dl,0x59(%ebx)
 712:	53                   	push   %ebx
 713:	5f                   	pop    %edi
 714:	57                   	push   %edi
 715:	41                   	inc    %ecx
 716:	49                   	dec    %ecx
 717:	54                   	push   %esp
 718:	00 53 59             	add    %dl,0x59(%ebx)
 71b:	53                   	push   %ebx
 71c:	5f                   	pop    %edi
 71d:	57                   	push   %edi
 71e:	52                   	push   %edx
 71f:	49                   	dec    %ecx
 720:	54                   	push   %esp
 721:	45                   	inc    %ebp
 722:	00 6d 75             	add    %ch,0x75(%ebp)
 725:	6e                   	outsb  %ds:(%esi),(%dx)
 726:	6d                   	insl   (%dx),%es:(%edi)
 727:	61                   	popa   
 728:	70 00                	jo     72a <__executable_start-0x80479aa>
 72a:	53                   	push   %ebx
 72b:	59                   	pop    %ecx
 72c:	53                   	push   %ebx
 72d:	5f                   	pop    %edi
 72e:	43                   	inc    %ebx
 72f:	52                   	push   %edx
 730:	45                   	inc    %ebp
 731:	41                   	inc    %ecx
 732:	54                   	push   %esp
 733:	45                   	inc    %ebp
 734:	00 77 72             	add    %dh,0x72(%edi)
 737:	69 74 65 00 53 59 53 	imul   $0x5f535953,0x0(%ebp,%eiz,2),%esi
 73e:	5f 
 73f:	4d                   	dec    %ebp
 740:	55                   	push   %ebp
 741:	4e                   	dec    %esi
 742:	4d                   	dec    %ebp
 743:	41                   	inc    %ecx
 744:	50                   	push   %eax
 745:	00 72 65             	add    %dh,0x65(%edx)
 748:	6d                   	insl   (%dx),%es:(%edi)
 749:	6f                   	outsl  %ds:(%esi),(%dx)
 74a:	76 65                	jbe    7b1 <__executable_start-0x8047923>
 74c:	00 53 59             	add    %dl,0x59(%ebx)
 74f:	53                   	push   %ebx
 750:	5f                   	pop    %edi
 751:	45                   	inc    %ebp
 752:	58                   	pop    %eax
 753:	49                   	dec    %ecx
 754:	54                   	push   %esp
 755:	00 72 65             	add    %dh,0x65(%edx)
 758:	61                   	popa   
 759:	64 00 70 6f          	add    %dh,%fs:0x6f(%eax)
 75d:	73 69                	jae    7c8 <__executable_start-0x804790c>
 75f:	74 69                	je     7ca <__executable_start-0x804790a>
 761:	6f                   	outsl  %ds:(%esi),(%dx)
 762:	6e                   	outsb  %ds:(%esi),(%dx)
 763:	00 77 61             	add    %dh,0x61(%edi)
 766:	69 74 00 65 78 65 63 	imul   $0x636578,0x65(%eax,%eax,1),%esi
 76d:	00 
 76e:	53                   	push   %ebx
 76f:	59                   	pop    %ecx
 770:	53                   	push   %ebx
 771:	5f                   	pop    %edi
 772:	54                   	push   %esp
 773:	45                   	inc    %ebp
 774:	4c                   	dec    %esp
 775:	4c                   	dec    %esp
 776:	00 6d 6d             	add    %ch,0x6d(%ebp)
 779:	61                   	popa   
 77a:	70 00                	jo     77c <__executable_start-0x8047958>
 77c:	6d                   	insl   (%dx),%es:(%edi)
 77d:	61                   	popa   
 77e:	70 69                	jo     7e9 <__executable_start-0x80478eb>
 780:	64 00 53 59          	add    %dl,%fs:0x59(%ebx)
 784:	53                   	push   %ebx
 785:	5f                   	pop    %edi
 786:	52                   	push   %edx
 787:	45                   	inc    %ebp
 788:	4d                   	dec    %ebp
 789:	4f                   	dec    %edi
 78a:	56                   	push   %esi
 78b:	45                   	inc    %ebp
 78c:	00 6d 6b             	add    %ch,0x6b(%ebp)
 78f:	64 69 72 00 53 59 53 	imul   $0x5f535953,%fs:0x0(%edx),%esi
 796:	5f 
 797:	4f                   	dec    %edi
 798:	50                   	push   %eax
 799:	45                   	inc    %ebp
 79a:	4e                   	dec    %esi
 79b:	00 53 59             	add    %dl,0x59(%ebx)
 79e:	53                   	push   %ebx
 79f:	5f                   	pop    %edi
 7a0:	49                   	dec    %ecx
 7a1:	4e                   	dec    %esi
 7a2:	55                   	push   %ebp
 7a3:	4d                   	dec    %ebp
 7a4:	42                   	inc    %edx
 7a5:	45                   	inc    %ebp
 7a6:	52                   	push   %edx
 7a7:	00 53 59             	add    %dl,0x59(%ebx)
 7aa:	53                   	push   %ebx
 7ab:	5f                   	pop    %edi
 7ac:	53                   	push   %ebx
 7ad:	45                   	inc    %ebp
 7ae:	45                   	inc    %ebp
 7af:	4b                   	dec    %ebx
 7b0:	00 53 59             	add    %dl,0x59(%ebx)
 7b3:	53                   	push   %ebx
 7b4:	5f                   	pop    %edi
 7b5:	4c                   	dec    %esp
 7b6:	41                   	inc    %ecx
 7b7:	53                   	push   %ebx
 7b8:	54                   	push   %esp
 7b9:	00 53 59             	add    %dl,0x59(%ebx)
 7bc:	53                   	push   %ebx
 7bd:	5f                   	pop    %edi
 7be:	49                   	dec    %ecx
 7bf:	53                   	push   %ebx
 7c0:	44                   	inc    %esp
 7c1:	49                   	dec    %ecx
 7c2:	52                   	push   %edx
 7c3:	00 53 59             	add    %dl,0x59(%ebx)
 7c6:	53                   	push   %ebx
 7c7:	5f                   	pop    %edi
 7c8:	48                   	dec    %eax
 7c9:	41                   	inc    %ecx
 7ca:	4c                   	dec    %esp
 7cb:	54                   	push   %esp
 7cc:	00 53 59             	add    %dl,0x59(%ebx)
 7cf:	53                   	push   %ebx
 7d0:	5f                   	pop    %edi
 7d1:	43                   	inc    %ebx
 7d2:	4c                   	dec    %esp
 7d3:	4f                   	dec    %edi
 7d4:	53                   	push   %ebx
 7d5:	45                   	inc    %ebp
 7d6:	00 6d 61             	add    %ch,0x61(%ebp)
 7d9:	70 69                	jo     844 <__executable_start-0x8047890>
 7db:	64                   	fs
 7dc:	5f                   	pop    %edi
 7dd:	74 00                	je     7df <__executable_start-0x80478f5>
 7df:	65                   	gs
 7e0:	78 69                	js     84b <__executable_start-0x8047889>
 7e2:	74 00                	je     7e4 <__executable_start-0x80478f0>
 7e4:	2e                   	cs
 7e5:	2e                   	cs
 7e6:	2f                   	das    
 7e7:	2e                   	cs
 7e8:	2e                   	cs
 7e9:	2f                   	das    
 7ea:	6c                   	insb   (%dx),%es:(%edi)
 7eb:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 7f2:	2f                   	das    
 7f3:	73 79                	jae    86e <__executable_start-0x8047866>
 7f5:	73 63                	jae    85a <__executable_start-0x804787a>
 7f7:	61                   	popa   
 7f8:	6c                   	insb   (%dx),%es:(%edi)
 7f9:	6c                   	insb   (%dx),%es:(%edi)
 7fa:	2e 63 00             	arpl   %ax,%cs:(%eax)
 7fd:	69 73 64 69 72 00 73 	imul   $0x73007269,0x64(%ebx),%esi
 804:	65 65 6b 00 63       	imul   $0x63,%gs:(%eax),%eax
 809:	6c                   	insb   (%dx),%es:(%edi)
 80a:	6f                   	outsl  %ds:(%esi),(%dx)
 80b:	73 65                	jae    872 <__executable_start-0x8047862>
 80d:	00 53 59             	add    %dl,0x59(%ebx)
 810:	53                   	push   %ebx
 811:	5f                   	pop    %edi
 812:	46                   	inc    %esi
 813:	49                   	dec    %ecx
 814:	4c                   	dec    %esp
 815:	45                   	inc    %ebp
 816:	53                   	push   %ebx
 817:	49                   	dec    %ecx
 818:	5a                   	pop    %edx
 819:	45                   	inc    %ebp
 81a:	00 53 59             	add    %dl,0x59(%ebx)
 81d:	53                   	push   %ebx
 81e:	5f                   	pop    %edi
 81f:	4d                   	dec    %ebp
 820:	4b                   	dec    %ebx
 821:	44                   	inc    %esp
 822:	49                   	dec    %ecx
 823:	52                   	push   %edx
 824:	00 72 65             	add    %dh,0x65(%edx)
 827:	61                   	popa   
 828:	64 64 69 72 00 76 68 	imul   $0x72706876,%fs:0x0(%edx),%esi
 82f:	70 72 
 831:	69 6e 74 66 00 2e 2e 	imul   $0x2e2e0066,0x74(%esi),%ebp
 838:	2f                   	das    
 839:	2e                   	cs
 83a:	2e                   	cs
 83b:	2f                   	das    
 83c:	6c                   	insb   (%dx),%es:(%edi)
 83d:	69 62 2f 75 73 65 72 	imul   $0x72657375,0x2f(%edx),%esp
 844:	2f                   	das    
 845:	63 6f 6e             	arpl   %bp,0x6e(%edi)
 848:	73 6f                	jae    8b9 <__executable_start-0x804781b>
 84a:	6c                   	insb   (%dx),%es:(%edi)
 84b:	65 2e 63 00          	arpl   %ax,%cs:%gs:(%eax)
 84f:	61                   	popa   
 850:	64                   	fs
 851:	64                   	fs
 852:	5f                   	pop    %edi
 853:	63 68 61             	arpl   %bp,0x61(%eax)
 856:	72 00                	jb     858 <__executable_start-0x804787c>
 858:	70 75                	jo     8cf <__executable_start-0x8047805>
 85a:	74 63                	je     8bf <__executable_start-0x8047815>
 85c:	68 61 72 00 70       	push   $0x70007261
 861:	75 74                	jne    8d7 <__executable_start-0x80477fd>
 863:	73 00                	jae    865 <__executable_start-0x804786f>
 865:	66                   	data16
 866:	6c                   	insb   (%dx),%es:(%edi)
 867:	75 73                	jne    8dc <__executable_start-0x80477f8>
 869:	68 00 76 68 70       	push   $0x70687600
 86e:	72 69                	jb     8d9 <__executable_start-0x80477fb>
 870:	6e                   	outsb  %ds:(%esi),(%dx)
 871:	74 66                	je     8d9 <__executable_start-0x80477fb>
 873:	5f                   	pop    %edi
 874:	61                   	popa   
 875:	75 78                	jne    8ef <__executable_start-0x80477e5>
 877:	00 63 68             	add    %ah,0x68(%ebx)
 87a:	61                   	popa   
 87b:	72 5f                	jb     8dc <__executable_start-0x80477f8>
 87d:	63 6e 74             	arpl   %bp,0x74(%esi)
 880:	00 64 65 62          	add    %ah,0x62(%ebp,%eiz,2)
 884:	75 67                	jne    8ed <__executable_start-0x80477e7>
 886:	5f                   	pop    %edi
 887:	62 61 63             	bound  %esp,0x63(%ecx)
 88a:	6b 74 72 61 63       	imul   $0x63,0x61(%edx,%esi,2),%esi
 88f:	65 00 65 78          	add    %ah,%gs:0x78(%ebp)
 893:	70 6c                	jo     901 <__executable_start-0x80477d3>
 895:	61                   	popa   
 896:	69 6e 65 64 00 66 72 	imul   $0x72660064,0x65(%esi),%ebp
 89d:	61                   	popa   
 89e:	6d                   	insl   (%dx),%es:(%edi)
 89f:	65 00 2e             	add    %ch,%gs:(%esi)
 8a2:	2e                   	cs
 8a3:	2f                   	das    
 8a4:	2e                   	cs
 8a5:	2e                   	cs
 8a6:	2f                   	das    
 8a7:	6c                   	insb   (%dx),%es:(%edi)
 8a8:	69 62 2f 64 65 62 75 	imul   $0x75626564,0x2f(%edx),%esp
 8af:	67 2e 63 00          	addr16 arpl %ax,%cs:(%bx,%si)

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	01 00                	add    %eax,(%eax)
   6:	00 00                	add    %al,(%eax)
   8:	02 00                	add    (%eax),%al
   a:	74 04                	je     10 <__executable_start-0x80480c4>
   c:	01 00                	add    %eax,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	03 00                	add    (%eax),%eax
  12:	00 00                	add    %al,(%eax)
  14:	02 00                	add    (%eax),%al
  16:	74 08                	je     20 <__executable_start-0x80480b4>
  18:	03 00                	add    (%eax),%eax
  1a:	00 00                	add    %al,(%eax)
  1c:	8d 00                	lea    (%eax),%eax
  1e:	00 00                	add    %al,(%eax)
  20:	02 00                	add    (%eax),%al
  22:	75 08                	jne    2c <__executable_start-0x80480a8>
	...
  30:	01 00                	add    %eax,(%eax)
  32:	00 00                	add    %al,(%eax)
  34:	02 00                	add    (%eax),%al
  36:	74 04                	je     3c <__executable_start-0x8048098>
  38:	01 00                	add    %eax,(%eax)
  3a:	00 00                	add    %al,(%eax)
  3c:	03 00                	add    (%eax),%eax
  3e:	00 00                	add    %al,(%eax)
  40:	02 00                	add    (%eax),%al
  42:	74 08                	je     4c <__executable_start-0x8048088>
  44:	03 00                	add    (%eax),%eax
  46:	00 00                	add    %al,(%eax)
  48:	25 00 00 00 02       	and    $0x2000000,%eax
  4d:	00 75 08             	add    %dh,0x8(%ebp)
	...
  58:	25 00 00 00 26       	and    $0x26000000,%eax
  5d:	00 00                	add    %al,(%eax)
  5f:	00 02                	add    %al,(%edx)
  61:	00 74 04 26          	add    %dh,0x26(%esp,%eax,1)
  65:	00 00                	add    %al,(%eax)
  67:	00 28                	add    %ch,(%eax)
  69:	00 00                	add    %al,(%eax)
  6b:	00 02                	add    %al,(%edx)
  6d:	00 74 08 28          	add    %dh,0x28(%eax,%ecx,1)
  71:	00 00                	add    %al,(%eax)
  73:	00 f2                	add    %dh,%dl
  75:	00 00                	add    %al,(%eax)
  77:	00 02                	add    %al,(%edx)
  79:	00 75 08             	add    %dh,0x8(%ebp)
	...
  84:	f2 00 00             	repnz add %al,(%eax)
  87:	00 f3                	add    %dh,%bl
  89:	00 00                	add    %al,(%eax)
  8b:	00 02                	add    %al,(%edx)
  8d:	00 74 04 f3          	add    %dh,-0xd(%esp,%eax,1)
  91:	00 00                	add    %al,(%eax)
  93:	00 f5                	add    %dh,%ch
  95:	00 00                	add    %al,(%eax)
  97:	00 02                	add    %al,(%edx)
  99:	00 74 08 f5          	add    %dh,-0xb(%eax,%ecx,1)
  9d:	00 00                	add    %al,(%eax)
  9f:	00 b4 01 00 00 02 00 	add    %dh,0x20000(%ecx,%eax,1)
  a6:	75 08                	jne    b0 <__executable_start-0x8048024>
	...
  b4:	01 00                	add    %eax,(%eax)
  b6:	00 00                	add    %al,(%eax)
  b8:	02 00                	add    (%eax),%al
  ba:	74 04                	je     c0 <__executable_start-0x8048014>
  bc:	01 00                	add    %eax,(%eax)
  be:	00 00                	add    %al,(%eax)
  c0:	03 00                	add    (%eax),%eax
  c2:	00 00                	add    %al,(%eax)
  c4:	02 00                	add    (%eax),%al
  c6:	74 08                	je     d0 <__executable_start-0x8048004>
  c8:	03 00                	add    (%eax),%eax
  ca:	00 00                	add    %al,(%eax)
  cc:	8f 00                	popl   (%eax)
  ce:	00 00                	add    %al,(%eax)
  d0:	02 00                	add    (%eax),%al
  d2:	75 08                	jne    dc <__executable_start-0x8047ff8>
	...
  e0:	01 00                	add    %eax,(%eax)
  e2:	00 00                	add    %al,(%eax)
  e4:	02 00                	add    (%eax),%al
  e6:	74 04                	je     ec <__executable_start-0x8047fe8>
  e8:	01 00                	add    %eax,(%eax)
  ea:	00 00                	add    %al,(%eax)
  ec:	03 00                	add    (%eax),%eax
  ee:	00 00                	add    %al,(%eax)
  f0:	02 00                	add    (%eax),%al
  f2:	74 08                	je     fc <__executable_start-0x8047fd8>
  f4:	03 00                	add    (%eax),%eax
  f6:	00 00                	add    %al,(%eax)
  f8:	d1 00                	roll   (%eax)
  fa:	00 00                	add    %al,(%eax)
  fc:	02 00                	add    (%eax),%al
  fe:	75 08                	jne    108 <__executable_start-0x8047fcc>
	...
 108:	d1 00                	roll   (%eax)
 10a:	00 00                	add    %al,(%eax)
 10c:	d2 00                	rolb   %cl,(%eax)
 10e:	00 00                	add    %al,(%eax)
 110:	02 00                	add    (%eax),%al
 112:	74 04                	je     118 <__executable_start-0x8047fbc>
 114:	d2 00                	rolb   %cl,(%eax)
 116:	00 00                	add    %al,(%eax)
 118:	d4 00                	aam    $0x0
 11a:	00 00                	add    %al,(%eax)
 11c:	02 00                	add    (%eax),%al
 11e:	74 08                	je     128 <__executable_start-0x8047fac>
 120:	d4 00                	aam    $0x0
 122:	00 00                	add    %al,(%eax)
 124:	07                   	pop    %es
 125:	01 00                	add    %eax,(%eax)
 127:	00 02                	add    %al,(%edx)
 129:	00 75 08             	add    %dh,0x8(%ebp)
	...
 134:	07                   	pop    %es
 135:	01 00                	add    %eax,(%eax)
 137:	00 08                	add    %cl,(%eax)
 139:	01 00                	add    %eax,(%eax)
 13b:	00 02                	add    %al,(%edx)
 13d:	00 74 04 08          	add    %dh,0x8(%esp,%eax,1)
 141:	01 00                	add    %eax,(%eax)
 143:	00 0a                	add    %cl,(%edx)
 145:	01 00                	add    %eax,(%eax)
 147:	00 02                	add    %al,(%edx)
 149:	00 74 08 0a          	add    %dh,0xa(%eax,%ecx,1)
 14d:	01 00                	add    %eax,(%eax)
 14f:	00 39                	add    %bh,(%ecx)
 151:	01 00                	add    %eax,(%eax)
 153:	00 02                	add    %al,(%edx)
 155:	00 75 08             	add    %dh,0x8(%ebp)
	...
 160:	39 01                	cmp    %eax,(%ecx)
 162:	00 00                	add    %al,(%eax)
 164:	3a 01                	cmp    (%ecx),%al
 166:	00 00                	add    %al,(%eax)
 168:	02 00                	add    (%eax),%al
 16a:	74 04                	je     170 <__executable_start-0x8047f64>
 16c:	3a 01                	cmp    (%ecx),%al
 16e:	00 00                	add    %al,(%eax)
 170:	3c 01                	cmp    $0x1,%al
 172:	00 00                	add    %al,(%eax)
 174:	02 00                	add    (%eax),%al
 176:	74 08                	je     180 <__executable_start-0x8047f54>
 178:	3c 01                	cmp    $0x1,%al
 17a:	00 00                	add    %al,(%eax)
 17c:	95                   	xchg   %eax,%ebp
 17d:	01 00                	add    %eax,(%eax)
 17f:	00 02                	add    %al,(%edx)
 181:	00 75 08             	add    %dh,0x8(%ebp)
	...
 18c:	95                   	xchg   %eax,%ebp
 18d:	01 00                	add    %eax,(%eax)
 18f:	00 96 01 00 00 02    	add    %dl,0x2000001(%esi)
 195:	00 74 04 96          	add    %dh,-0x6a(%esp,%eax,1)
 199:	01 00                	add    %eax,(%eax)
 19b:	00 98 01 00 00 02    	add    %bl,0x2000001(%eax)
 1a1:	00 74 08 98          	add    %dh,-0x68(%eax,%ecx,1)
 1a5:	01 00                	add    %eax,(%eax)
 1a7:	00 fd                	add    %bh,%ch
 1a9:	01 00                	add    %eax,(%eax)
 1ab:	00 02                	add    %al,(%edx)
 1ad:	00 75 08             	add    %dh,0x8(%ebp)
	...
 1b8:	fd                   	std    
 1b9:	01 00                	add    %eax,(%eax)
 1bb:	00 fe                	add    %bh,%dh
 1bd:	01 00                	add    %eax,(%eax)
 1bf:	00 02                	add    %al,(%edx)
 1c1:	00 74 04 fe          	add    %dh,-0x2(%esp,%eax,1)
 1c5:	01 00                	add    %eax,(%eax)
 1c7:	00 00                	add    %al,(%eax)
 1c9:	02 00                	add    (%eax),%al
 1cb:	00 02                	add    %al,(%edx)
 1cd:	00 74 08 00          	add    %dh,0x0(%eax,%ecx,1)
 1d1:	02 00                	add    (%eax),%al
 1d3:	00 c8                	add    %cl,%al
 1d5:	02 00                	add    (%eax),%al
 1d7:	00 02                	add    %al,(%edx)
 1d9:	00 75 08             	add    %dh,0x8(%ebp)
	...
 1e4:	c8 02 00 00          	enter  $0x2,$0x0
 1e8:	c9                   	leave  
 1e9:	02 00                	add    (%eax),%al
 1eb:	00 02                	add    %al,(%edx)
 1ed:	00 74 04 c9          	add    %dh,-0x37(%esp,%eax,1)
 1f1:	02 00                	add    (%eax),%al
 1f3:	00 cb                	add    %cl,%bl
 1f5:	02 00                	add    (%eax),%al
 1f7:	00 02                	add    %al,(%edx)
 1f9:	00 74 08 cb          	add    %dh,-0x35(%eax,%ecx,1)
 1fd:	02 00                	add    (%eax),%al
 1ff:	00 59 03             	add    %bl,0x3(%ecx)
 202:	00 00                	add    %al,(%eax)
 204:	02 00                	add    (%eax),%al
 206:	75 08                	jne    210 <__executable_start-0x8047ec4>
	...
 210:	59                   	pop    %ecx
 211:	03 00                	add    (%eax),%eax
 213:	00 5a 03             	add    %bl,0x3(%edx)
 216:	00 00                	add    %al,(%eax)
 218:	02 00                	add    (%eax),%al
 21a:	74 04                	je     220 <__executable_start-0x8047eb4>
 21c:	5a                   	pop    %edx
 21d:	03 00                	add    (%eax),%eax
 21f:	00 5c 03 00          	add    %bl,0x0(%ebx,%eax,1)
 223:	00 02                	add    %al,(%edx)
 225:	00 74 08 5c          	add    %dh,0x5c(%eax,%ecx,1)
 229:	03 00                	add    (%eax),%eax
 22b:	00 9c 04 00 00 02 00 	add    %bl,0x20000(%esp,%eax,1)
 232:	75 08                	jne    23c <__executable_start-0x8047e98>
	...
 23c:	9c                   	pushf  
 23d:	04 00                	add    $0x0,%al
 23f:	00 9d 04 00 00 02    	add    %bl,0x2000004(%ebp)
 245:	00 74 04 9d          	add    %dh,-0x63(%esp,%eax,1)
 249:	04 00                	add    $0x0,%al
 24b:	00 9f 04 00 00 02    	add    %bl,0x2000004(%edi)
 251:	00 74 08 9f          	add    %dh,-0x61(%eax,%ecx,1)
 255:	04 00                	add    $0x0,%al
 257:	00 1c 05 00 00 02 00 	add    %bl,0x20000(,%eax,1)
 25e:	75 08                	jne    268 <__executable_start-0x8047e6c>
	...
 268:	1c 05                	sbb    $0x5,%al
 26a:	00 00                	add    %al,(%eax)
 26c:	1d 05 00 00 02       	sbb    $0x2000005,%eax
 271:	00 74 04 1d          	add    %dh,0x1d(%esp,%eax,1)
 275:	05 00 00 1f 05       	add    $0x51f0000,%eax
 27a:	00 00                	add    %al,(%eax)
 27c:	02 00                	add    (%eax),%al
 27e:	74 08                	je     288 <__executable_start-0x8047e4c>
 280:	1f                   	pop    %ds
 281:	05 00 00 c4 06       	add    $0x6c40000,%eax
 286:	00 00                	add    %al,(%eax)
 288:	02 00                	add    (%eax),%al
 28a:	75 08                	jne    294 <__executable_start-0x8047e40>
	...
 298:	01 00                	add    %eax,(%eax)
 29a:	00 00                	add    %al,(%eax)
 29c:	02 00                	add    (%eax),%al
 29e:	74 04                	je     2a4 <__executable_start-0x8047e30>
 2a0:	01 00                	add    %eax,(%eax)
 2a2:	00 00                	add    %al,(%eax)
 2a4:	03 00                	add    (%eax),%eax
 2a6:	00 00                	add    %al,(%eax)
 2a8:	02 00                	add    (%eax),%al
 2aa:	74 08                	je     2b4 <__executable_start-0x8047e20>
 2ac:	03 00                	add    (%eax),%eax
 2ae:	00 00                	add    %al,(%eax)
 2b0:	43                   	inc    %ebx
 2b1:	00 00                	add    %al,(%eax)
 2b3:	00 02                	add    %al,(%edx)
 2b5:	00 75 08             	add    %dh,0x8(%ebp)
	...
 2c4:	01 00                	add    %eax,(%eax)
 2c6:	00 00                	add    %al,(%eax)
 2c8:	02 00                	add    (%eax),%al
 2ca:	74 04                	je     2d0 <__executable_start-0x8047e04>
 2cc:	01 00                	add    %eax,(%eax)
 2ce:	00 00                	add    %al,(%eax)
 2d0:	03 00                	add    (%eax),%eax
 2d2:	00 00                	add    %al,(%eax)
 2d4:	02 00                	add    (%eax),%al
 2d6:	74 08                	je     2e0 <__executable_start-0x8047df4>
 2d8:	03 00                	add    (%eax),%eax
 2da:	00 00                	add    %al,(%eax)
 2dc:	20 00                	and    %al,(%eax)
 2de:	00 00                	add    %al,(%eax)
 2e0:	02 00                	add    (%eax),%al
 2e2:	75 08                	jne    2ec <__executable_start-0x8047de8>
	...
 2f0:	01 00                	add    %eax,(%eax)
 2f2:	00 00                	add    %al,(%eax)
 2f4:	02 00                	add    (%eax),%al
 2f6:	74 04                	je     2fc <__executable_start-0x8047dd8>
 2f8:	01 00                	add    %eax,(%eax)
 2fa:	00 00                	add    %al,(%eax)
 2fc:	03 00                	add    (%eax),%eax
 2fe:	00 00                	add    %al,(%eax)
 300:	02 00                	add    (%eax),%al
 302:	74 08                	je     30c <__executable_start-0x8047dc8>
 304:	03 00                	add    (%eax),%eax
 306:	00 00                	add    %al,(%eax)
 308:	25 00 00 00 02       	and    $0x2000000,%eax
 30d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 318:	25 00 00 00 26       	and    $0x26000000,%eax
 31d:	00 00                	add    %al,(%eax)
 31f:	00 02                	add    %al,(%edx)
 321:	00 74 04 26          	add    %dh,0x26(%esp,%eax,1)
 325:	00 00                	add    %al,(%eax)
 327:	00 28                	add    %ch,(%eax)
 329:	00 00                	add    %al,(%eax)
 32b:	00 02                	add    %al,(%edx)
 32d:	00 74 08 28          	add    %dh,0x28(%eax,%ecx,1)
 331:	00 00                	add    %al,(%eax)
 333:	00 c3                	add    %al,%bl
 335:	00 00                	add    %al,(%eax)
 337:	00 02                	add    %al,(%edx)
 339:	00 75 08             	add    %dh,0x8(%ebp)
	...
 344:	c3                   	ret    
 345:	00 00                	add    %al,(%eax)
 347:	00 c4                	add    %al,%ah
 349:	00 00                	add    %al,(%eax)
 34b:	00 02                	add    %al,(%edx)
 34d:	00 74 04 c4          	add    %dh,-0x3c(%esp,%eax,1)
 351:	00 00                	add    %al,(%eax)
 353:	00 c6                	add    %al,%dh
 355:	00 00                	add    %al,(%eax)
 357:	00 02                	add    %al,(%edx)
 359:	00 74 08 c6          	add    %dh,-0x3a(%eax,%ecx,1)
 35d:	00 00                	add    %al,(%eax)
 35f:	00 99 01 00 00 02    	add    %bl,0x2000001(%ecx)
 365:	00 75 08             	add    %dh,0x8(%ebp)
	...
 370:	99                   	cltd   
 371:	01 00                	add    %eax,(%eax)
 373:	00 9a 01 00 00 02    	add    %bl,0x2000001(%edx)
 379:	00 74 04 9a          	add    %dh,-0x66(%esp,%eax,1)
 37d:	01 00                	add    %eax,(%eax)
 37f:	00 9c 01 00 00 02 00 	add    %bl,0x20000(%ecx,%eax,1)
 386:	74 08                	je     390 <__executable_start-0x8047d44>
 388:	9c                   	pushf  
 389:	01 00                	add    %eax,(%eax)
 38b:	00 b7 01 00 00 02    	add    %dh,0x2000001(%edi)
 391:	00 75 08             	add    %dh,0x8(%ebp)
	...
 3a0:	01 00                	add    %eax,(%eax)
 3a2:	00 00                	add    %al,(%eax)
 3a4:	02 00                	add    (%eax),%al
 3a6:	74 04                	je     3ac <__executable_start-0x8047d28>
 3a8:	01 00                	add    %eax,(%eax)
 3aa:	00 00                	add    %al,(%eax)
 3ac:	03 00                	add    (%eax),%eax
 3ae:	00 00                	add    %al,(%eax)
 3b0:	02 00                	add    (%eax),%al
 3b2:	74 08                	je     3bc <__executable_start-0x8047d18>
 3b4:	03 00                	add    (%eax),%eax
 3b6:	00 00                	add    %al,(%eax)
 3b8:	1d 00 00 00 02       	sbb    $0x2000000,%eax
 3bd:	00 75 08             	add    %dh,0x8(%ebp)
	...
 3c8:	1d 00 00 00 1e       	sbb    $0x1e000000,%eax
 3cd:	00 00                	add    %al,(%eax)
 3cf:	00 02                	add    %al,(%edx)
 3d1:	00 74 04 1e          	add    %dh,0x1e(%esp,%eax,1)
 3d5:	00 00                	add    %al,(%eax)
 3d7:	00 20                	add    %ah,(%eax)
 3d9:	00 00                	add    %al,(%eax)
 3db:	00 02                	add    %al,(%edx)
 3dd:	00 74 08 20          	add    %dh,0x20(%eax,%ecx,1)
 3e1:	00 00                	add    %al,(%eax)
 3e3:	00 3a                	add    %bh,(%edx)
 3e5:	00 00                	add    %al,(%eax)
 3e7:	00 02                	add    %al,(%edx)
 3e9:	00 75 08             	add    %dh,0x8(%ebp)
	...
 3f4:	3a 00                	cmp    (%eax),%al
 3f6:	00 00                	add    %al,(%eax)
 3f8:	3b 00                	cmp    (%eax),%eax
 3fa:	00 00                	add    %al,(%eax)
 3fc:	02 00                	add    (%eax),%al
 3fe:	74 04                	je     404 <__executable_start-0x8047cd0>
 400:	3b 00                	cmp    (%eax),%eax
 402:	00 00                	add    %al,(%eax)
 404:	3d 00 00 00 02       	cmp    $0x2000000,%eax
 409:	00 74 08 3d          	add    %dh,0x3d(%eax,%ecx,1)
 40d:	00 00                	add    %al,(%eax)
 40f:	00 95 00 00 00 02    	add    %dl,0x2000000(%ebp)
 415:	00 75 08             	add    %dh,0x8(%ebp)
	...
 420:	95                   	xchg   %eax,%ebp
 421:	00 00                	add    %al,(%eax)
 423:	00 96 00 00 00 02    	add    %dl,0x2000000(%esi)
 429:	00 74 04 96          	add    %dh,-0x6a(%esp,%eax,1)
 42d:	00 00                	add    %al,(%eax)
 42f:	00 98 00 00 00 02    	add    %bl,0x2000000(%eax)
 435:	00 74 08 98          	add    %dh,-0x68(%eax,%ecx,1)
 439:	00 00                	add    %al,(%eax)
 43b:	00 da                	add    %bl,%dl
 43d:	00 00                	add    %al,(%eax)
 43f:	00 02                	add    %al,(%edx)
 441:	00 75 08             	add    %dh,0x8(%ebp)
	...
 44c:	da 00                	fiaddl (%eax)
 44e:	00 00                	add    %al,(%eax)
 450:	db 00                	fildl  (%eax)
 452:	00 00                	add    %al,(%eax)
 454:	02 00                	add    (%eax),%al
 456:	74 04                	je     45c <__executable_start-0x8047c78>
 458:	db 00                	fildl  (%eax)
 45a:	00 00                	add    %al,(%eax)
 45c:	dd 00                	fldl   (%eax)
 45e:	00 00                	add    %al,(%eax)
 460:	02 00                	add    (%eax),%al
 462:	74 08                	je     46c <__executable_start-0x8047c68>
 464:	dd 00                	fldl   (%eax)
 466:	00 00                	add    %al,(%eax)
 468:	0e                   	push   %cs
 469:	01 00                	add    %eax,(%eax)
 46b:	00 02                	add    %al,(%edx)
 46d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 478:	0e                   	push   %cs
 479:	01 00                	add    %eax,(%eax)
 47b:	00 0f                	add    %cl,(%edi)
 47d:	01 00                	add    %eax,(%eax)
 47f:	00 02                	add    %al,(%edx)
 481:	00 74 04 0f          	add    %dh,0xf(%esp,%eax,1)
 485:	01 00                	add    %eax,(%eax)
 487:	00 11                	add    %dl,(%ecx)
 489:	01 00                	add    %eax,(%eax)
 48b:	00 02                	add    %al,(%edx)
 48d:	00 74 08 11          	add    %dh,0x11(%eax,%ecx,1)
 491:	01 00                	add    %eax,(%eax)
 493:	00 34 01             	add    %dh,(%ecx,%eax,1)
 496:	00 00                	add    %al,(%eax)
 498:	02 00                	add    (%eax),%al
 49a:	75 08                	jne    4a4 <__executable_start-0x8047c30>
	...
 4a4:	34 01                	xor    $0x1,%al
 4a6:	00 00                	add    %al,(%eax)
 4a8:	35 01 00 00 02       	xor    $0x2000001,%eax
 4ad:	00 74 04 35          	add    %dh,0x35(%esp,%eax,1)
 4b1:	01 00                	add    %eax,(%eax)
 4b3:	00 37                	add    %dh,(%edi)
 4b5:	01 00                	add    %eax,(%eax)
 4b7:	00 02                	add    %al,(%edx)
 4b9:	00 74 08 37          	add    %dh,0x37(%eax,%ecx,1)
 4bd:	01 00                	add    %eax,(%eax)
 4bf:	00 66 06             	add    %ah,0x6(%esi)
 4c2:	00 00                	add    %al,(%eax)
 4c4:	02 00                	add    (%eax),%al
 4c6:	75 08                	jne    4d0 <__executable_start-0x8047c04>
	...
 4d0:	66 06                	pushw  %es
 4d2:	00 00                	add    %al,(%eax)
 4d4:	67 06                	addr16 push %es
 4d6:	00 00                	add    %al,(%eax)
 4d8:	02 00                	add    (%eax),%al
 4da:	74 04                	je     4e0 <__executable_start-0x8047bf4>
 4dc:	67 06                	addr16 push %es
 4de:	00 00                	add    %al,(%eax)
 4e0:	69 06 00 00 02 00    	imul   $0x20000,(%esi),%eax
 4e6:	74 08                	je     4f0 <__executable_start-0x8047be4>
 4e8:	69 06 00 00 2f 09    	imul   $0x92f0000,(%esi),%eax
 4ee:	00 00                	add    %al,(%eax)
 4f0:	02 00                	add    (%eax),%al
 4f2:	75 08                	jne    4fc <__executable_start-0x8047bd8>
	...
 4fc:	2f                   	das    
 4fd:	09 00                	or     %eax,(%eax)
 4ff:	00 30                	add    %dh,(%eax)
 501:	09 00                	or     %eax,(%eax)
 503:	00 02                	add    %al,(%edx)
 505:	00 74 04 30          	add    %dh,0x30(%esp,%eax,1)
 509:	09 00                	or     %eax,(%eax)
 50b:	00 32                	add    %dh,(%edx)
 50d:	09 00                	or     %eax,(%eax)
 50f:	00 02                	add    %al,(%edx)
 511:	00 74 08 32          	add    %dh,0x32(%eax,%ecx,1)
 515:	09 00                	or     %eax,(%eax)
 517:	00 51 0c             	add    %dl,0xc(%ecx)
 51a:	00 00                	add    %al,(%eax)
 51c:	02 00                	add    (%eax),%al
 51e:	75 08                	jne    528 <__executable_start-0x8047bac>
	...
 528:	51                   	push   %ecx
 529:	0c 00                	or     $0x0,%al
 52b:	00 52 0c             	add    %dl,0xc(%edx)
 52e:	00 00                	add    %al,(%eax)
 530:	02 00                	add    (%eax),%al
 532:	74 04                	je     538 <__executable_start-0x8047b9c>
 534:	52                   	push   %edx
 535:	0c 00                	or     $0x0,%al
 537:	00 54 0c 00          	add    %dl,0x0(%esp,%ecx,1)
 53b:	00 02                	add    %al,(%edx)
 53d:	00 74 08 54          	add    %dh,0x54(%eax,%ecx,1)
 541:	0c 00                	or     $0x0,%al
 543:	00 83 0c 00 00 02    	add    %al,0x200000c(%ebx)
 549:	00 75 08             	add    %dh,0x8(%ebp)
	...
 554:	83 0c 00 00          	orl    $0x0,(%eax,%eax,1)
 558:	84 0c 00             	test   %cl,(%eax,%eax,1)
 55b:	00 02                	add    %al,(%edx)
 55d:	00 74 04 84          	add    %dh,-0x7c(%esp,%eax,1)
 561:	0c 00                	or     $0x0,%al
 563:	00 86 0c 00 00 02    	add    %al,0x200000c(%esi)
 569:	00 74 08 86          	add    %dh,-0x7a(%eax,%ecx,1)
 56d:	0c 00                	or     $0x0,%al
 56f:	00 37                	add    %dh,(%edi)
 571:	0d 00 00 02 00       	or     $0x20000,%eax
 576:	75 08                	jne    580 <__executable_start-0x8047b54>
	...
 580:	37                   	aaa    
 581:	0d 00 00 38 0d       	or     $0xd380000,%eax
 586:	00 00                	add    %al,(%eax)
 588:	02 00                	add    (%eax),%al
 58a:	74 04                	je     590 <__executable_start-0x8047b44>
 58c:	38 0d 00 00 3a 0d    	cmp    %cl,0xd3a0000
 592:	00 00                	add    %al,(%eax)
 594:	02 00                	add    (%eax),%al
 596:	74 08                	je     5a0 <__executable_start-0x8047b34>
 598:	3a 0d 00 00 65 0d    	cmp    0xd650000,%cl
 59e:	00 00                	add    %al,(%eax)
 5a0:	02 00                	add    (%eax),%al
 5a2:	75 08                	jne    5ac <__executable_start-0x8047b28>
	...
 5ac:	65                   	gs
 5ad:	0d 00 00 66 0d       	or     $0xd660000,%eax
 5b2:	00 00                	add    %al,(%eax)
 5b4:	02 00                	add    (%eax),%al
 5b6:	74 04                	je     5bc <__executable_start-0x8047b18>
 5b8:	66 0d 00 00          	or     $0x0,%ax
 5bc:	68 0d 00 00 02       	push   $0x200000d
 5c1:	00 74 08 68          	add    %dh,0x68(%eax,%ecx,1)
 5c5:	0d 00 00 55 0f       	or     $0xf550000,%eax
 5ca:	00 00                	add    %al,(%eax)
 5cc:	02 00                	add    (%eax),%al
 5ce:	75 08                	jne    5d8 <__executable_start-0x8047afc>
	...
 5dc:	01 00                	add    %eax,(%eax)
 5de:	00 00                	add    %al,(%eax)
 5e0:	02 00                	add    (%eax),%al
 5e2:	74 04                	je     5e8 <__executable_start-0x8047aec>
 5e4:	01 00                	add    %eax,(%eax)
 5e6:	00 00                	add    %al,(%eax)
 5e8:	03 00                	add    (%eax),%eax
 5ea:	00 00                	add    %al,(%eax)
 5ec:	02 00                	add    (%eax),%al
 5ee:	74 08                	je     5f8 <__executable_start-0x8047adc>
 5f0:	03 00                	add    (%eax),%eax
 5f2:	00 00                	add    %al,(%eax)
 5f4:	af                   	scas   %es:(%edi),%eax
 5f5:	00 00                	add    %al,(%eax)
 5f7:	00 02                	add    %al,(%edx)
 5f9:	00 75 08             	add    %dh,0x8(%ebp)
	...
 604:	af                   	scas   %es:(%edi),%eax
 605:	00 00                	add    %al,(%eax)
 607:	00 b0 00 00 00 02    	add    %dh,0x2000000(%eax)
 60d:	00 74 04 b0          	add    %dh,-0x50(%esp,%eax,1)
 611:	00 00                	add    %al,(%eax)
 613:	00 b2 00 00 00 02    	add    %dh,0x2000000(%edx)
 619:	00 74 08 b2          	add    %dh,-0x4e(%eax,%ecx,1)
 61d:	00 00                	add    %al,(%eax)
 61f:	00 94 01 00 00 02 00 	add    %dl,0x20000(%ecx,%eax,1)
 626:	75 08                	jne    630 <__executable_start-0x8047aa4>
	...
 630:	94                   	xchg   %eax,%esp
 631:	01 00                	add    %eax,(%eax)
 633:	00 95 01 00 00 02    	add    %dl,0x2000001(%ebp)
 639:	00 74 04 95          	add    %dh,-0x6b(%esp,%eax,1)
 63d:	01 00                	add    %eax,(%eax)
 63f:	00 97 01 00 00 02    	add    %dl,0x2000001(%edi)
 645:	00 74 08 97          	add    %dh,-0x69(%eax,%ecx,1)
 649:	01 00                	add    %eax,(%eax)
 64b:	00 68 02             	add    %ch,0x2(%eax)
 64e:	00 00                	add    %al,(%eax)
 650:	02 00                	add    (%eax),%al
 652:	75 08                	jne    65c <__executable_start-0x8047a78>
	...
 65c:	68 02 00 00 69       	push   $0x69000002
 661:	02 00                	add    (%eax),%al
 663:	00 02                	add    %al,(%edx)
 665:	00 74 04 69          	add    %dh,0x69(%esp,%eax,1)
 669:	02 00                	add    (%eax),%al
 66b:	00 6b 02             	add    %ch,0x2(%ebx)
 66e:	00 00                	add    %al,(%eax)
 670:	02 00                	add    (%eax),%al
 672:	74 08                	je     67c <__executable_start-0x8047a58>
 674:	6b 02 00             	imul   $0x0,(%edx),%eax
 677:	00 32                	add    %dh,(%edx)
 679:	03 00                	add    (%eax),%eax
 67b:	00 02                	add    %al,(%edx)
 67d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 688:	32 03                	xor    (%ebx),%al
 68a:	00 00                	add    %al,(%eax)
 68c:	33 03                	xor    (%ebx),%eax
 68e:	00 00                	add    %al,(%eax)
 690:	02 00                	add    (%eax),%al
 692:	74 04                	je     698 <__executable_start-0x8047a3c>
 694:	33 03                	xor    (%ebx),%eax
 696:	00 00                	add    %al,(%eax)
 698:	35 03 00 00 02       	xor    $0x2000003,%eax
 69d:	00 74 08 35          	add    %dh,0x35(%eax,%ecx,1)
 6a1:	03 00                	add    (%eax),%eax
 6a3:	00 ac 03 00 00 02 00 	add    %ch,0x20000(%ebx,%eax,1)
 6aa:	75 08                	jne    6b4 <__executable_start-0x8047a20>
	...
 6b4:	ac                   	lods   %ds:(%esi),%al
 6b5:	03 00                	add    (%eax),%eax
 6b7:	00 ad 03 00 00 02    	add    %ch,0x2000003(%ebp)
 6bd:	00 74 04 ad          	add    %dh,-0x53(%esp,%eax,1)
 6c1:	03 00                	add    (%eax),%eax
 6c3:	00 af 03 00 00 02    	add    %ch,0x2000003(%edi)
 6c9:	00 74 08 af          	add    %dh,-0x51(%eax,%ecx,1)
 6cd:	03 00                	add    (%eax),%eax
 6cf:	00 13                	add    %dl,(%ebx)
 6d1:	04 00                	add    $0x0,%al
 6d3:	00 02                	add    %al,(%edx)
 6d5:	00 75 08             	add    %dh,0x8(%ebp)
	...
 6e0:	13 04 00             	adc    (%eax,%eax,1),%eax
 6e3:	00 14 04             	add    %dl,(%esp,%eax,1)
 6e6:	00 00                	add    %al,(%eax)
 6e8:	02 00                	add    (%eax),%al
 6ea:	74 04                	je     6f0 <__executable_start-0x80479e4>
 6ec:	14 04                	adc    $0x4,%al
 6ee:	00 00                	add    %al,(%eax)
 6f0:	16                   	push   %ss
 6f1:	04 00                	add    $0x0,%al
 6f3:	00 02                	add    %al,(%edx)
 6f5:	00 74 08 16          	add    %dh,0x16(%eax,%ecx,1)
 6f9:	04 00                	add    $0x0,%al
 6fb:	00 60 04             	add    %ah,0x4(%eax)
 6fe:	00 00                	add    %al,(%eax)
 700:	02 00                	add    (%eax),%al
 702:	75 08                	jne    70c <__executable_start-0x80479c8>
	...
 70c:	60                   	pusha  
 70d:	04 00                	add    $0x0,%al
 70f:	00 61 04             	add    %ah,0x4(%ecx)
 712:	00 00                	add    %al,(%eax)
 714:	02 00                	add    (%eax),%al
 716:	74 04                	je     71c <__executable_start-0x80479b8>
 718:	61                   	popa   
 719:	04 00                	add    $0x0,%al
 71b:	00 63 04             	add    %ah,0x4(%ebx)
 71e:	00 00                	add    %al,(%eax)
 720:	02 00                	add    (%eax),%al
 722:	74 08                	je     72c <__executable_start-0x80479a8>
 724:	63 04 00             	arpl   %ax,(%eax,%eax,1)
 727:	00 9e 04 00 00 02    	add    %bl,0x2000004(%esi)
 72d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 738:	9e                   	sahf   
 739:	04 00                	add    $0x0,%al
 73b:	00 9f 04 00 00 02    	add    %bl,0x2000004(%edi)
 741:	00 74 04 9f          	add    %dh,-0x61(%esp,%eax,1)
 745:	04 00                	add    $0x0,%al
 747:	00 a1 04 00 00 02    	add    %ah,0x2000004(%ecx)
 74d:	00 74 08 a1          	add    %dh,-0x5f(%eax,%ecx,1)
 751:	04 00                	add    $0x0,%al
 753:	00 d7                	add    %dl,%bh
 755:	04 00                	add    $0x0,%al
 757:	00 02                	add    %al,(%edx)
 759:	00 75 08             	add    %dh,0x8(%ebp)
	...
 764:	d7                   	xlat   %ds:(%ebx)
 765:	04 00                	add    $0x0,%al
 767:	00 d8                	add    %bl,%al
 769:	04 00                	add    $0x0,%al
 76b:	00 02                	add    %al,(%edx)
 76d:	00 74 04 d8          	add    %dh,-0x28(%esp,%eax,1)
 771:	04 00                	add    $0x0,%al
 773:	00 da                	add    %bl,%dl
 775:	04 00                	add    $0x0,%al
 777:	00 02                	add    %al,(%edx)
 779:	00 74 08 da          	add    %dh,-0x26(%eax,%ecx,1)
 77d:	04 00                	add    $0x0,%al
 77f:	00 24 05 00 00 02 00 	add    %ah,0x20000(,%eax,1)
 786:	75 08                	jne    790 <__executable_start-0x8047944>
	...
 790:	24 05                	and    $0x5,%al
 792:	00 00                	add    %al,(%eax)
 794:	25 05 00 00 02       	and    $0x2000005,%eax
 799:	00 74 04 25          	add    %dh,0x25(%esp,%eax,1)
 79d:	05 00 00 27 05       	add    $0x5270000,%eax
 7a2:	00 00                	add    %al,(%eax)
 7a4:	02 00                	add    (%eax),%al
 7a6:	74 08                	je     7b0 <__executable_start-0x8047924>
 7a8:	27                   	daa    
 7a9:	05 00 00 a0 05       	add    $0x5a00000,%eax
 7ae:	00 00                	add    %al,(%eax)
 7b0:	02 00                	add    (%eax),%al
 7b2:	75 08                	jne    7bc <__executable_start-0x8047918>
	...
 7bc:	a0 05 00 00 a1       	mov    0xa1000005,%al
 7c1:	05 00 00 02 00       	add    $0x20000,%eax
 7c6:	74 04                	je     7cc <__executable_start-0x8047908>
 7c8:	a1 05 00 00 a3       	mov    0xa3000005,%eax
 7cd:	05 00 00 02 00       	add    $0x20000,%eax
 7d2:	74 08                	je     7dc <__executable_start-0x80478f8>
 7d4:	a3 05 00 00 dc       	mov    %eax,0xdc000005
 7d9:	06                   	push   %es
 7da:	00 00                	add    %al,(%eax)
 7dc:	02 00                	add    (%eax),%al
 7de:	75 08                	jne    7e8 <__executable_start-0x80478ec>
	...
 7e8:	dc 06                	faddl  (%esi)
 7ea:	00 00                	add    %al,(%eax)
 7ec:	dd 06                	fldl   (%esi)
 7ee:	00 00                	add    %al,(%eax)
 7f0:	02 00                	add    (%eax),%al
 7f2:	74 04                	je     7f8 <__executable_start-0x80478dc>
 7f4:	dd 06                	fldl   (%esi)
 7f6:	00 00                	add    %al,(%eax)
 7f8:	df 06                	fild   (%esi)
 7fa:	00 00                	add    %al,(%eax)
 7fc:	02 00                	add    (%eax),%al
 7fe:	74 08                	je     808 <__executable_start-0x80478cc>
 800:	df 06                	fild   (%esi)
 802:	00 00                	add    %al,(%eax)
 804:	48                   	dec    %eax
 805:	07                   	pop    %es
 806:	00 00                	add    %al,(%eax)
 808:	02 00                	add    (%eax),%al
 80a:	75 08                	jne    814 <__executable_start-0x80478c0>
	...
 814:	48                   	dec    %eax
 815:	07                   	pop    %es
 816:	00 00                	add    %al,(%eax)
 818:	49                   	dec    %ecx
 819:	07                   	pop    %es
 81a:	00 00                	add    %al,(%eax)
 81c:	02 00                	add    (%eax),%al
 81e:	74 04                	je     824 <__executable_start-0x80478b0>
 820:	49                   	dec    %ecx
 821:	07                   	pop    %es
 822:	00 00                	add    %al,(%eax)
 824:	4b                   	dec    %ebx
 825:	07                   	pop    %es
 826:	00 00                	add    %al,(%eax)
 828:	02 00                	add    (%eax),%al
 82a:	74 08                	je     834 <__executable_start-0x80478a0>
 82c:	4b                   	dec    %ebx
 82d:	07                   	pop    %es
 82e:	00 00                	add    %al,(%eax)
 830:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 831:	07                   	pop    %es
 832:	00 00                	add    %al,(%eax)
 834:	02 00                	add    (%eax),%al
 836:	75 08                	jne    840 <__executable_start-0x8047894>
	...
 840:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 841:	07                   	pop    %es
 842:	00 00                	add    %al,(%eax)
 844:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 845:	07                   	pop    %es
 846:	00 00                	add    %al,(%eax)
 848:	02 00                	add    (%eax),%al
 84a:	74 04                	je     850 <__executable_start-0x8047884>
 84c:	a5                   	movsl  %ds:(%esi),%es:(%edi)
 84d:	07                   	pop    %es
 84e:	00 00                	add    %al,(%eax)
 850:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 851:	07                   	pop    %es
 852:	00 00                	add    %al,(%eax)
 854:	02 00                	add    (%eax),%al
 856:	74 08                	je     860 <__executable_start-0x8047874>
 858:	a7                   	cmpsl  %es:(%edi),%ds:(%esi)
 859:	07                   	pop    %es
 85a:	00 00                	add    %al,(%eax)
 85c:	d4 07                	aam    $0x7
 85e:	00 00                	add    %al,(%eax)
 860:	02 00                	add    (%eax),%al
 862:	75 08                	jne    86c <__executable_start-0x8047868>
	...
 86c:	d4 07                	aam    $0x7
 86e:	00 00                	add    %al,(%eax)
 870:	d5 07                	aad    $0x7
 872:	00 00                	add    %al,(%eax)
 874:	02 00                	add    (%eax),%al
 876:	74 04                	je     87c <__executable_start-0x8047858>
 878:	d5 07                	aad    $0x7
 87a:	00 00                	add    %al,(%eax)
 87c:	d7                   	xlat   %ds:(%ebx)
 87d:	07                   	pop    %es
 87e:	00 00                	add    %al,(%eax)
 880:	02 00                	add    (%eax),%al
 882:	74 08                	je     88c <__executable_start-0x8047848>
 884:	d7                   	xlat   %ds:(%ebx)
 885:	07                   	pop    %es
 886:	00 00                	add    %al,(%eax)
 888:	97                   	xchg   %eax,%edi
 889:	08 00                	or     %al,(%eax)
 88b:	00 02                	add    %al,(%edx)
 88d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 898:	97                   	xchg   %eax,%edi
 899:	08 00                	or     %al,(%eax)
 89b:	00 98 08 00 00 02    	add    %bl,0x2000008(%eax)
 8a1:	00 74 04 98          	add    %dh,-0x68(%esp,%eax,1)
 8a5:	08 00                	or     %al,(%eax)
 8a7:	00 9a 08 00 00 02    	add    %bl,0x2000008(%edx)
 8ad:	00 74 08 9a          	add    %dh,-0x66(%eax,%ecx,1)
 8b1:	08 00                	or     %al,(%eax)
 8b3:	00 8a 09 00 00 02    	add    %cl,0x2000009(%edx)
 8b9:	00 75 08             	add    %dh,0x8(%ebp)
	...
 8c8:	01 00                	add    %eax,(%eax)
 8ca:	00 00                	add    %al,(%eax)
 8cc:	02 00                	add    (%eax),%al
 8ce:	74 04                	je     8d4 <__executable_start-0x8047800>
 8d0:	01 00                	add    %eax,(%eax)
 8d2:	00 00                	add    %al,(%eax)
 8d4:	03 00                	add    (%eax),%eax
 8d6:	00 00                	add    %al,(%eax)
 8d8:	02 00                	add    (%eax),%al
 8da:	74 08                	je     8e4 <__executable_start-0x80477f0>
 8dc:	03 00                	add    (%eax),%eax
 8de:	00 00                	add    %al,(%eax)
 8e0:	39 00                	cmp    %eax,(%eax)
 8e2:	00 00                	add    %al,(%eax)
 8e4:	02 00                	add    (%eax),%al
 8e6:	75 08                	jne    8f0 <__executable_start-0x80477e4>
	...
 8f0:	39 00                	cmp    %eax,(%eax)
 8f2:	00 00                	add    %al,(%eax)
 8f4:	3a 00                	cmp    (%eax),%al
 8f6:	00 00                	add    %al,(%eax)
 8f8:	02 00                	add    (%eax),%al
 8fa:	74 04                	je     900 <__executable_start-0x80477d4>
 8fc:	3a 00                	cmp    (%eax),%al
 8fe:	00 00                	add    %al,(%eax)
 900:	3c 00                	cmp    $0x0,%al
 902:	00 00                	add    %al,(%eax)
 904:	02 00                	add    (%eax),%al
 906:	74 08                	je     910 <__executable_start-0x80477c4>
 908:	3c 00                	cmp    $0x0,%al
 90a:	00 00                	add    %al,(%eax)
 90c:	9a 00 00 00 02 00 75 	lcall  $0x7500,$0x2000000
 913:	08 00                	or     %al,(%eax)
 915:	00 00                	add    %al,(%eax)
 917:	00 00                	add    %al,(%eax)
 919:	00 00                	add    %al,(%eax)
 91b:	00 9a 00 00 00 9b    	add    %bl,-0x65000000(%edx)
 921:	00 00                	add    %al,(%eax)
 923:	00 02                	add    %al,(%edx)
 925:	00 74 04 9b          	add    %dh,-0x65(%esp,%eax,1)
 929:	00 00                	add    %al,(%eax)
 92b:	00 9d 00 00 00 02    	add    %bl,0x2000000(%ebp)
 931:	00 74 08 9d          	add    %dh,-0x63(%eax,%ecx,1)
 935:	00 00                	add    %al,(%eax)
 937:	00 64 02 00          	add    %ah,0x0(%edx,%eax,1)
 93b:	00 02                	add    %al,(%edx)
 93d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 948:	64 02 00             	add    %fs:(%eax),%al
 94b:	00 65 02             	add    %ah,0x2(%ebp)
 94e:	00 00                	add    %al,(%eax)
 950:	02 00                	add    (%eax),%al
 952:	74 04                	je     958 <__executable_start-0x804777c>
 954:	65 02 00             	add    %gs:(%eax),%al
 957:	00 67 02             	add    %ah,0x2(%edi)
 95a:	00 00                	add    %al,(%eax)
 95c:	02 00                	add    (%eax),%al
 95e:	74 08                	je     968 <__executable_start-0x804776c>
 960:	67 02 00             	addr16 add (%bx,%si),%al
 963:	00 ba 02 00 00 02    	add    %bh,0x2000002(%edx)
 969:	00 75 08             	add    %dh,0x8(%ebp)
	...
 974:	ba 02 00 00 bb       	mov    $0xbb000002,%edx
 979:	02 00                	add    (%eax),%al
 97b:	00 02                	add    %al,(%edx)
 97d:	00 74 04 bb          	add    %dh,-0x45(%esp,%eax,1)
 981:	02 00                	add    (%eax),%al
 983:	00 bd 02 00 00 02    	add    %bh,0x2000002(%ebp)
 989:	00 74 08 bd          	add    %dh,-0x43(%eax,%ecx,1)
 98d:	02 00                	add    (%eax),%al
 98f:	00 6d 03             	add    %ch,0x3(%ebp)
 992:	00 00                	add    %al,(%eax)
 994:	02 00                	add    (%eax),%al
 996:	75 08                	jne    9a0 <__executable_start-0x8047734>
	...
 9a0:	6d                   	insl   (%dx),%es:(%edi)
 9a1:	03 00                	add    (%eax),%eax
 9a3:	00 6e 03             	add    %ch,0x3(%esi)
 9a6:	00 00                	add    %al,(%eax)
 9a8:	02 00                	add    (%eax),%al
 9aa:	74 04                	je     9b0 <__executable_start-0x8047724>
 9ac:	6e                   	outsb  %ds:(%esi),(%dx)
 9ad:	03 00                	add    (%eax),%eax
 9af:	00 70 03             	add    %dh,0x3(%eax)
 9b2:	00 00                	add    %al,(%eax)
 9b4:	02 00                	add    (%eax),%al
 9b6:	74 08                	je     9c0 <__executable_start-0x8047714>
 9b8:	70 03                	jo     9bd <__executable_start-0x8047717>
 9ba:	00 00                	add    %al,(%eax)
 9bc:	c3                   	ret    
 9bd:	03 00                	add    (%eax),%eax
 9bf:	00 02                	add    %al,(%edx)
 9c1:	00 75 08             	add    %dh,0x8(%ebp)
	...
 9cc:	c3                   	ret    
 9cd:	03 00                	add    (%eax),%eax
 9cf:	00 c4                	add    %al,%ah
 9d1:	03 00                	add    (%eax),%eax
 9d3:	00 02                	add    %al,(%edx)
 9d5:	00 74 04 c4          	add    %dh,-0x3c(%esp,%eax,1)
 9d9:	03 00                	add    (%eax),%eax
 9db:	00 c6                	add    %al,%dh
 9dd:	03 00                	add    (%eax),%eax
 9df:	00 02                	add    %al,(%edx)
 9e1:	00 74 08 c6          	add    %dh,-0x3a(%eax,%ecx,1)
 9e5:	03 00                	add    (%eax),%eax
 9e7:	00 03                	add    %al,(%ebx)
 9e9:	04 00                	add    $0x0,%al
 9eb:	00 02                	add    %al,(%edx)
 9ed:	00 75 08             	add    %dh,0x8(%ebp)
	...
 9f8:	03 04 00             	add    (%eax,%eax,1),%eax
 9fb:	00 04 04             	add    %al,(%esp,%eax,1)
 9fe:	00 00                	add    %al,(%eax)
 a00:	02 00                	add    (%eax),%al
 a02:	74 04                	je     a08 <__executable_start-0x80476cc>
 a04:	04 04                	add    $0x4,%al
 a06:	00 00                	add    %al,(%eax)
 a08:	06                   	push   %es
 a09:	04 00                	add    $0x0,%al
 a0b:	00 02                	add    %al,(%edx)
 a0d:	00 74 08 06          	add    %dh,0x6(%eax,%ecx,1)
 a11:	04 00                	add    $0x0,%al
 a13:	00 48 04             	add    %cl,0x4(%eax)
 a16:	00 00                	add    %al,(%eax)
 a18:	02 00                	add    (%eax),%al
 a1a:	75 08                	jne    a24 <__executable_start-0x80476b0>
	...
 a24:	48                   	dec    %eax
 a25:	04 00                	add    $0x0,%al
 a27:	00 49 04             	add    %cl,0x4(%ecx)
 a2a:	00 00                	add    %al,(%eax)
 a2c:	02 00                	add    (%eax),%al
 a2e:	74 04                	je     a34 <__executable_start-0x80476a0>
 a30:	49                   	dec    %ecx
 a31:	04 00                	add    $0x0,%al
 a33:	00 4b 04             	add    %cl,0x4(%ebx)
 a36:	00 00                	add    %al,(%eax)
 a38:	02 00                	add    (%eax),%al
 a3a:	74 08                	je     a44 <__executable_start-0x8047690>
 a3c:	4b                   	dec    %ebx
 a3d:	04 00                	add    $0x0,%al
 a3f:	00 88 04 00 00 02    	add    %cl,0x2000004(%eax)
 a45:	00 75 08             	add    %dh,0x8(%ebp)
	...
 a50:	88 04 00             	mov    %al,(%eax,%eax,1)
 a53:	00 89 04 00 00 02    	add    %cl,0x2000004(%ecx)
 a59:	00 74 04 89          	add    %dh,-0x77(%esp,%eax,1)
 a5d:	04 00                	add    $0x0,%al
 a5f:	00 8b 04 00 00 02    	add    %cl,0x2000004(%ebx)
 a65:	00 74 08 8b          	add    %dh,-0x75(%eax,%ecx,1)
 a69:	04 00                	add    $0x0,%al
 a6b:	00 cd                	add    %cl,%ch
 a6d:	04 00                	add    $0x0,%al
 a6f:	00 02                	add    %al,(%edx)
 a71:	00 75 08             	add    %dh,0x8(%ebp)
	...
 a80:	01 00                	add    %eax,(%eax)
 a82:	00 00                	add    %al,(%eax)
 a84:	02 00                	add    (%eax),%al
 a86:	74 04                	je     a8c <__executable_start-0x8047648>
 a88:	01 00                	add    %eax,(%eax)
 a8a:	00 00                	add    %al,(%eax)
 a8c:	03 00                	add    (%eax),%eax
 a8e:	00 00                	add    %al,(%eax)
 a90:	02 00                	add    (%eax),%al
 a92:	74 08                	je     a9c <__executable_start-0x8047638>
 a94:	03 00                	add    (%eax),%eax
 a96:	00 00                	add    %al,(%eax)
 a98:	5c                   	pop    %esp
 a99:	00 00                	add    %al,(%eax)
 a9b:	00 02                	add    %al,(%edx)
 a9d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 aac:	01 00                	add    %eax,(%eax)
 aae:	00 00                	add    %al,(%eax)
 ab0:	02 00                	add    (%eax),%al
 ab2:	74 04                	je     ab8 <__executable_start-0x804761c>
 ab4:	01 00                	add    %eax,(%eax)
 ab6:	00 00                	add    %al,(%eax)
 ab8:	03 00                	add    (%eax),%eax
 aba:	00 00                	add    %al,(%eax)
 abc:	02 00                	add    (%eax),%al
 abe:	74 08                	je     ac8 <__executable_start-0x804760c>
 ac0:	03 00                	add    (%eax),%eax
 ac2:	00 00                	add    %al,(%eax)
 ac4:	34 00                	xor    $0x0,%al
 ac6:	00 00                	add    %al,(%eax)
 ac8:	02 00                	add    (%eax),%al
 aca:	75 08                	jne    ad4 <__executable_start-0x8047600>
	...
 ad4:	34 00                	xor    $0x0,%al
 ad6:	00 00                	add    %al,(%eax)
 ad8:	35 00 00 00 02       	xor    $0x2000000,%eax
 add:	00 74 04 35          	add    %dh,0x35(%esp,%eax,1)
 ae1:	00 00                	add    %al,(%eax)
 ae3:	00 37                	add    %dh,(%edi)
 ae5:	00 00                	add    %al,(%eax)
 ae7:	00 02                	add    %al,(%edx)
 ae9:	00 74 08 37          	add    %dh,0x37(%eax,%ecx,1)
 aed:	00 00                	add    %al,(%eax)
 aef:	00 6b 00             	add    %ch,0x0(%ebx)
 af2:	00 00                	add    %al,(%eax)
 af4:	02 00                	add    (%eax),%al
 af6:	75 08                	jne    b00 <__executable_start-0x80475d4>
	...
 b00:	6b 00 00             	imul   $0x0,(%eax),%eax
 b03:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
 b07:	00 02                	add    %al,(%edx)
 b09:	00 74 04 6c          	add    %dh,0x6c(%esp,%eax,1)
 b0d:	00 00                	add    %al,(%eax)
 b0f:	00 6e 00             	add    %ch,0x0(%esi)
 b12:	00 00                	add    %al,(%eax)
 b14:	02 00                	add    (%eax),%al
 b16:	74 08                	je     b20 <__executable_start-0x80475b4>
 b18:	6e                   	outsb  %ds:(%esi),(%dx)
 b19:	00 00                	add    %al,(%eax)
 b1b:	00 83 00 00 00 02    	add    %al,0x2000000(%ebx)
 b21:	00 75 08             	add    %dh,0x8(%ebp)
	...
 b2c:	83 00 00             	addl   $0x0,(%eax)
 b2f:	00 84 00 00 00 02 00 	add    %al,0x20000(%eax,%eax,1)
 b36:	74 04                	je     b3c <__executable_start-0x8047598>
 b38:	84 00                	test   %al,(%eax)
 b3a:	00 00                	add    %al,(%eax)
 b3c:	86 00                	xchg   %al,(%eax)
 b3e:	00 00                	add    %al,(%eax)
 b40:	02 00                	add    (%eax),%al
 b42:	74 08                	je     b4c <__executable_start-0x8047588>
 b44:	86 00                	xchg   %al,(%eax)
 b46:	00 00                	add    %al,(%eax)
 b48:	9b                   	fwait
 b49:	00 00                	add    %al,(%eax)
 b4b:	00 02                	add    %al,(%edx)
 b4d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 b58:	9b                   	fwait
 b59:	00 00                	add    %al,(%eax)
 b5b:	00 9c 00 00 00 02 00 	add    %bl,0x20000(%eax,%eax,1)
 b62:	74 04                	je     b68 <__executable_start-0x804756c>
 b64:	9c                   	pushf  
 b65:	00 00                	add    %al,(%eax)
 b67:	00 9e 00 00 00 02    	add    %bl,0x2000000(%esi)
 b6d:	00 74 08 9e          	add    %dh,-0x62(%eax,%ecx,1)
 b71:	00 00                	add    %al,(%eax)
 b73:	00 bb 00 00 00 02    	add    %bh,0x2000000(%ebx)
 b79:	00 75 08             	add    %dh,0x8(%ebp)
	...
 b84:	bb 00 00 00 bc       	mov    $0xbc000000,%ebx
 b89:	00 00                	add    %al,(%eax)
 b8b:	00 02                	add    %al,(%edx)
 b8d:	00 74 04 bc          	add    %dh,-0x44(%esp,%eax,1)
 b91:	00 00                	add    %al,(%eax)
 b93:	00 be 00 00 00 02    	add    %bh,0x2000000(%esi)
 b99:	00 74 08 be          	add    %dh,-0x42(%eax,%ecx,1)
 b9d:	00 00                	add    %al,(%eax)
 b9f:	00 d8                	add    %bl,%al
 ba1:	00 00                	add    %al,(%eax)
 ba3:	00 02                	add    %al,(%edx)
 ba5:	00 75 08             	add    %dh,0x8(%ebp)
	...
 bb0:	d8 00                	fadds  (%eax)
 bb2:	00 00                	add    %al,(%eax)
 bb4:	d9 00                	flds   (%eax)
 bb6:	00 00                	add    %al,(%eax)
 bb8:	02 00                	add    (%eax),%al
 bba:	74 04                	je     bc0 <__executable_start-0x8047514>
 bbc:	d9 00                	flds   (%eax)
 bbe:	00 00                	add    %al,(%eax)
 bc0:	db 00                	fildl  (%eax)
 bc2:	00 00                	add    %al,(%eax)
 bc4:	02 00                	add    (%eax),%al
 bc6:	74 08                	je     bd0 <__executable_start-0x8047504>
 bc8:	db 00                	fildl  (%eax)
 bca:	00 00                	add    %al,(%eax)
 bcc:	f0 00 00             	lock add %al,(%eax)
 bcf:	00 02                	add    %al,(%edx)
 bd1:	00 75 08             	add    %dh,0x8(%ebp)
	...
 bdc:	f0 00 00             	lock add %al,(%eax)
 bdf:	00 f1                	add    %dh,%cl
 be1:	00 00                	add    %al,(%eax)
 be3:	00 02                	add    %al,(%edx)
 be5:	00 74 04 f1          	add    %dh,-0xf(%esp,%eax,1)
 be9:	00 00                	add    %al,(%eax)
 beb:	00 f3                	add    %dh,%bl
 bed:	00 00                	add    %al,(%eax)
 bef:	00 02                	add    %al,(%edx)
 bf1:	00 74 08 f3          	add    %dh,-0xd(%eax,%ecx,1)
 bf5:	00 00                	add    %al,(%eax)
 bf7:	00 08                	add    %cl,(%eax)
 bf9:	01 00                	add    %eax,(%eax)
 bfb:	00 02                	add    %al,(%edx)
 bfd:	00 75 08             	add    %dh,0x8(%ebp)
	...
 c08:	08 01                	or     %al,(%ecx)
 c0a:	00 00                	add    %al,(%eax)
 c0c:	09 01                	or     %eax,(%ecx)
 c0e:	00 00                	add    %al,(%eax)
 c10:	02 00                	add    (%eax),%al
 c12:	74 04                	je     c18 <__executable_start-0x80474bc>
 c14:	09 01                	or     %eax,(%ecx)
 c16:	00 00                	add    %al,(%eax)
 c18:	0b 01                	or     (%ecx),%eax
 c1a:	00 00                	add    %al,(%eax)
 c1c:	02 00                	add    (%eax),%al
 c1e:	74 08                	je     c28 <__executable_start-0x80474ac>
 c20:	0b 01                	or     (%ecx),%eax
 c22:	00 00                	add    %al,(%eax)
 c24:	26 01 00             	add    %eax,%es:(%eax)
 c27:	00 02                	add    %al,(%edx)
 c29:	00 75 08             	add    %dh,0x8(%ebp)
	...
 c34:	26 01 00             	add    %eax,%es:(%eax)
 c37:	00 27                	add    %ah,(%edi)
 c39:	01 00                	add    %eax,(%eax)
 c3b:	00 02                	add    %al,(%edx)
 c3d:	00 74 04 27          	add    %dh,0x27(%esp,%eax,1)
 c41:	01 00                	add    %eax,(%eax)
 c43:	00 29                	add    %ch,(%ecx)
 c45:	01 00                	add    %eax,(%eax)
 c47:	00 02                	add    %al,(%edx)
 c49:	00 74 08 29          	add    %dh,0x29(%eax,%ecx,1)
 c4d:	01 00                	add    %eax,(%eax)
 c4f:	00 44 01 00          	add    %al,0x0(%ecx,%eax,1)
 c53:	00 02                	add    %al,(%edx)
 c55:	00 75 08             	add    %dh,0x8(%ebp)
	...
 c60:	44                   	inc    %esp
 c61:	01 00                	add    %eax,(%eax)
 c63:	00 45 01             	add    %al,0x1(%ebp)
 c66:	00 00                	add    %al,(%eax)
 c68:	02 00                	add    (%eax),%al
 c6a:	74 04                	je     c70 <__executable_start-0x8047464>
 c6c:	45                   	inc    %ebp
 c6d:	01 00                	add    %eax,(%eax)
 c6f:	00 47 01             	add    %al,0x1(%edi)
 c72:	00 00                	add    %al,(%eax)
 c74:	02 00                	add    (%eax),%al
 c76:	74 08                	je     c80 <__executable_start-0x8047454>
 c78:	47                   	inc    %edi
 c79:	01 00                	add    %eax,(%eax)
 c7b:	00 5c 01 00          	add    %bl,0x0(%ecx,%eax,1)
 c7f:	00 02                	add    %al,(%edx)
 c81:	00 75 08             	add    %dh,0x8(%ebp)
	...
 c8c:	5c                   	pop    %esp
 c8d:	01 00                	add    %eax,(%eax)
 c8f:	00 5d 01             	add    %bl,0x1(%ebp)
 c92:	00 00                	add    %al,(%eax)
 c94:	02 00                	add    (%eax),%al
 c96:	74 04                	je     c9c <__executable_start-0x8047438>
 c98:	5d                   	pop    %ebp
 c99:	01 00                	add    %eax,(%eax)
 c9b:	00 5f 01             	add    %bl,0x1(%edi)
 c9e:	00 00                	add    %al,(%eax)
 ca0:	02 00                	add    (%eax),%al
 ca2:	74 08                	je     cac <__executable_start-0x8047428>
 ca4:	5f                   	pop    %edi
 ca5:	01 00                	add    %eax,(%eax)
 ca7:	00 74 01 00          	add    %dh,0x0(%ecx,%eax,1)
 cab:	00 02                	add    %al,(%edx)
 cad:	00 75 08             	add    %dh,0x8(%ebp)
	...
 cb8:	74 01                	je     cbb <__executable_start-0x8047419>
 cba:	00 00                	add    %al,(%eax)
 cbc:	75 01                	jne    cbf <__executable_start-0x8047415>
 cbe:	00 00                	add    %al,(%eax)
 cc0:	02 00                	add    (%eax),%al
 cc2:	74 04                	je     cc8 <__executable_start-0x804740c>
 cc4:	75 01                	jne    cc7 <__executable_start-0x804740d>
 cc6:	00 00                	add    %al,(%eax)
 cc8:	77 01                	ja     ccb <__executable_start-0x8047409>
 cca:	00 00                	add    %al,(%eax)
 ccc:	02 00                	add    (%eax),%al
 cce:	74 08                	je     cd8 <__executable_start-0x80473fc>
 cd0:	77 01                	ja     cd3 <__executable_start-0x8047401>
 cd2:	00 00                	add    %al,(%eax)
 cd4:	89 01                	mov    %eax,(%ecx)
 cd6:	00 00                	add    %al,(%eax)
 cd8:	02 00                	add    (%eax),%al
 cda:	75 08                	jne    ce4 <__executable_start-0x80473f0>
	...
 ce4:	89 01                	mov    %eax,(%ecx)
 ce6:	00 00                	add    %al,(%eax)
 ce8:	8a 01                	mov    (%ecx),%al
 cea:	00 00                	add    %al,(%eax)
 cec:	02 00                	add    (%eax),%al
 cee:	74 04                	je     cf4 <__executable_start-0x80473e0>
 cf0:	8a 01                	mov    (%ecx),%al
 cf2:	00 00                	add    %al,(%eax)
 cf4:	8c 01                	mov    %es,(%ecx)
 cf6:	00 00                	add    %al,(%eax)
 cf8:	02 00                	add    (%eax),%al
 cfa:	74 08                	je     d04 <__executable_start-0x80473d0>
 cfc:	8c 01                	mov    %es,(%ecx)
 cfe:	00 00                	add    %al,(%eax)
 d00:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 d01:	01 00                	add    %eax,(%eax)
 d03:	00 02                	add    %al,(%edx)
 d05:	00 75 08             	add    %dh,0x8(%ebp)
	...
 d10:	a4                   	movsb  %ds:(%esi),%es:(%edi)
 d11:	01 00                	add    %eax,(%eax)
 d13:	00 a5 01 00 00 02    	add    %ah,0x2000001(%ebp)
 d19:	00 74 04 a5          	add    %dh,-0x5b(%esp,%eax,1)
 d1d:	01 00                	add    %eax,(%eax)
 d1f:	00 a7 01 00 00 02    	add    %ah,0x2000001(%edi)
 d25:	00 74 08 a7          	add    %dh,-0x59(%eax,%ecx,1)
 d29:	01 00                	add    %eax,(%eax)
 d2b:	00 b9 01 00 00 02    	add    %bh,0x2000001(%ecx)
 d31:	00 75 08             	add    %dh,0x8(%ebp)
	...
 d3c:	b9 01 00 00 ba       	mov    $0xba000001,%ecx
 d41:	01 00                	add    %eax,(%eax)
 d43:	00 02                	add    %al,(%edx)
 d45:	00 74 04 ba          	add    %dh,-0x46(%esp,%eax,1)
 d49:	01 00                	add    %eax,(%eax)
 d4b:	00 bc 01 00 00 02 00 	add    %bh,0x20000(%ecx,%eax,1)
 d52:	74 08                	je     d5c <__executable_start-0x8047378>
 d54:	bc 01 00 00 d6       	mov    $0xd6000001,%esp
 d59:	01 00                	add    %eax,(%eax)
 d5b:	00 02                	add    %al,(%edx)
 d5d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 d68:	d6                   	(bad)  
 d69:	01 00                	add    %eax,(%eax)
 d6b:	00 d7                	add    %dl,%bh
 d6d:	01 00                	add    %eax,(%eax)
 d6f:	00 02                	add    %al,(%edx)
 d71:	00 74 04 d7          	add    %dh,-0x29(%esp,%eax,1)
 d75:	01 00                	add    %eax,(%eax)
 d77:	00 d9                	add    %bl,%cl
 d79:	01 00                	add    %eax,(%eax)
 d7b:	00 02                	add    %al,(%edx)
 d7d:	00 74 08 d9          	add    %dh,-0x27(%eax,%ecx,1)
 d81:	01 00                	add    %eax,(%eax)
 d83:	00 f3                	add    %dh,%bl
 d85:	01 00                	add    %eax,(%eax)
 d87:	00 02                	add    %al,(%edx)
 d89:	00 75 08             	add    %dh,0x8(%ebp)
	...
 d94:	f3 01 00             	repz add %eax,(%eax)
 d97:	00 f4                	add    %dh,%ah
 d99:	01 00                	add    %eax,(%eax)
 d9b:	00 02                	add    %al,(%edx)
 d9d:	00 74 04 f4          	add    %dh,-0xc(%esp,%eax,1)
 da1:	01 00                	add    %eax,(%eax)
 da3:	00 f6                	add    %dh,%dh
 da5:	01 00                	add    %eax,(%eax)
 da7:	00 02                	add    %al,(%edx)
 da9:	00 74 08 f6          	add    %dh,-0xa(%eax,%ecx,1)
 dad:	01 00                	add    %eax,(%eax)
 daf:	00 13                	add    %dl,(%ebx)
 db1:	02 00                	add    (%eax),%al
 db3:	00 02                	add    %al,(%edx)
 db5:	00 75 08             	add    %dh,0x8(%ebp)
	...
 dc0:	13 02                	adc    (%edx),%eax
 dc2:	00 00                	add    %al,(%eax)
 dc4:	14 02                	adc    $0x2,%al
 dc6:	00 00                	add    %al,(%eax)
 dc8:	02 00                	add    (%eax),%al
 dca:	74 04                	je     dd0 <__executable_start-0x8047304>
 dcc:	14 02                	adc    $0x2,%al
 dce:	00 00                	add    %al,(%eax)
 dd0:	16                   	push   %ss
 dd1:	02 00                	add    (%eax),%al
 dd3:	00 02                	add    %al,(%edx)
 dd5:	00 74 08 16          	add    %dh,0x16(%eax,%ecx,1)
 dd9:	02 00                	add    (%eax),%al
 ddb:	00 30                	add    %dh,(%eax)
 ddd:	02 00                	add    (%eax),%al
 ddf:	00 02                	add    %al,(%edx)
 de1:	00 75 08             	add    %dh,0x8(%ebp)
	...
 dec:	30 02                	xor    %al,(%edx)
 dee:	00 00                	add    %al,(%eax)
 df0:	31 02                	xor    %eax,(%edx)
 df2:	00 00                	add    %al,(%eax)
 df4:	02 00                	add    (%eax),%al
 df6:	74 04                	je     dfc <__executable_start-0x80472d8>
 df8:	31 02                	xor    %eax,(%edx)
 dfa:	00 00                	add    %al,(%eax)
 dfc:	33 02                	xor    (%edx),%eax
 dfe:	00 00                	add    %al,(%eax)
 e00:	02 00                	add    (%eax),%al
 e02:	74 08                	je     e0c <__executable_start-0x80472c8>
 e04:	33 02                	xor    (%edx),%eax
 e06:	00 00                	add    %al,(%eax)
 e08:	48                   	dec    %eax
 e09:	02 00                	add    (%eax),%al
 e0b:	00 02                	add    %al,(%edx)
 e0d:	00 75 08             	add    %dh,0x8(%ebp)
	...
 e1c:	01 00                	add    %eax,(%eax)
 e1e:	00 00                	add    %al,(%eax)
 e20:	02 00                	add    (%eax),%al
 e22:	74 04                	je     e28 <__executable_start-0x80472ac>
 e24:	01 00                	add    %eax,(%eax)
 e26:	00 00                	add    %al,(%eax)
 e28:	03 00                	add    (%eax),%eax
 e2a:	00 00                	add    %al,(%eax)
 e2c:	02 00                	add    (%eax),%al
 e2e:	74 08                	je     e38 <__executable_start-0x804729c>
 e30:	03 00                	add    (%eax),%eax
 e32:	00 00                	add    %al,(%eax)
 e34:	22 00                	and    (%eax),%al
 e36:	00 00                	add    %al,(%eax)
 e38:	02 00                	add    (%eax),%al
 e3a:	75 08                	jne    e44 <__executable_start-0x8047290>
	...
 e44:	22 00                	and    (%eax),%al
 e46:	00 00                	add    %al,(%eax)
 e48:	23 00                	and    (%eax),%eax
 e4a:	00 00                	add    %al,(%eax)
 e4c:	02 00                	add    (%eax),%al
 e4e:	74 04                	je     e54 <__executable_start-0x8047280>
 e50:	23 00                	and    (%eax),%eax
 e52:	00 00                	add    %al,(%eax)
 e54:	25 00 00 00 02       	and    $0x2000000,%eax
 e59:	00 74 08 25          	add    %dh,0x25(%eax,%ecx,1)
 e5d:	00 00                	add    %al,(%eax)
 e5f:	00 4f 00             	add    %cl,0x0(%edi)
 e62:	00 00                	add    %al,(%eax)
 e64:	02 00                	add    (%eax),%al
 e66:	75 08                	jne    e70 <__executable_start-0x8047264>
	...
 e70:	4f                   	dec    %edi
 e71:	00 00                	add    %al,(%eax)
 e73:	00 50 00             	add    %dl,0x0(%eax)
 e76:	00 00                	add    %al,(%eax)
 e78:	02 00                	add    (%eax),%al
 e7a:	74 04                	je     e80 <__executable_start-0x8047254>
 e7c:	50                   	push   %eax
 e7d:	00 00                	add    %al,(%eax)
 e7f:	00 52 00             	add    %dl,0x0(%edx)
 e82:	00 00                	add    %al,(%eax)
 e84:	02 00                	add    (%eax),%al
 e86:	74 08                	je     e90 <__executable_start-0x8047244>
 e88:	52                   	push   %edx
 e89:	00 00                	add    %al,(%eax)
 e8b:	00 8a 00 00 00 02    	add    %cl,0x2000000(%edx)
 e91:	00 75 08             	add    %dh,0x8(%ebp)
	...
 e9c:	8a 00                	mov    (%eax),%al
 e9e:	00 00                	add    %al,(%eax)
 ea0:	8b 00                	mov    (%eax),%eax
 ea2:	00 00                	add    %al,(%eax)
 ea4:	02 00                	add    (%eax),%al
 ea6:	74 04                	je     eac <__executable_start-0x8047228>
 ea8:	8b 00                	mov    (%eax),%eax
 eaa:	00 00                	add    %al,(%eax)
 eac:	8d 00                	lea    (%eax),%eax
 eae:	00 00                	add    %al,(%eax)
 eb0:	02 00                	add    (%eax),%al
 eb2:	74 08                	je     ebc <__executable_start-0x8047218>
 eb4:	8d 00                	lea    (%eax),%eax
 eb6:	00 00                	add    %al,(%eax)
 eb8:	b6 00                	mov    $0x0,%dh
 eba:	00 00                	add    %al,(%eax)
 ebc:	02 00                	add    (%eax),%al
 ebe:	75 08                	jne    ec8 <__executable_start-0x804720c>
	...
 ec8:	b6 00                	mov    $0x0,%dh
 eca:	00 00                	add    %al,(%eax)
 ecc:	b7 00                	mov    $0x0,%bh
 ece:	00 00                	add    %al,(%eax)
 ed0:	02 00                	add    (%eax),%al
 ed2:	74 04                	je     ed8 <__executable_start-0x80471fc>
 ed4:	b7 00                	mov    $0x0,%bh
 ed6:	00 00                	add    %al,(%eax)
 ed8:	b9 00 00 00 02       	mov    $0x2000000,%ecx
 edd:	00 74 08 b9          	add    %dh,-0x47(%eax,%ecx,1)
 ee1:	00 00                	add    %al,(%eax)
 ee3:	00 00                	add    %al,(%eax)
 ee5:	01 00                	add    %eax,(%eax)
 ee7:	00 02                	add    %al,(%edx)
 ee9:	00 75 08             	add    %dh,0x8(%ebp)
	...
 ef4:	00 01                	add    %al,(%ecx)
 ef6:	00 00                	add    %al,(%eax)
 ef8:	01 01                	add    %eax,(%ecx)
 efa:	00 00                	add    %al,(%eax)
 efc:	02 00                	add    (%eax),%al
 efe:	74 04                	je     f04 <__executable_start-0x80471d0>
 f00:	01 01                	add    %eax,(%ecx)
 f02:	00 00                	add    %al,(%eax)
 f04:	03 01                	add    (%ecx),%eax
 f06:	00 00                	add    %al,(%eax)
 f08:	02 00                	add    (%eax),%al
 f0a:	74 08                	je     f14 <__executable_start-0x80471c0>
 f0c:	03 01                	add    (%ecx),%eax
 f0e:	00 00                	add    %al,(%eax)
 f10:	53                   	push   %ebx
 f11:	01 00                	add    %eax,(%eax)
 f13:	00 02                	add    %al,(%edx)
 f15:	00 75 08             	add    %dh,0x8(%ebp)
	...
 f20:	53                   	push   %ebx
 f21:	01 00                	add    %eax,(%eax)
 f23:	00 54 01 00          	add    %dl,0x0(%ecx,%eax,1)
 f27:	00 02                	add    %al,(%edx)
 f29:	00 74 04 54          	add    %dh,0x54(%esp,%eax,1)
 f2d:	01 00                	add    %eax,(%eax)
 f2f:	00 56 01             	add    %dl,0x1(%esi)
 f32:	00 00                	add    %al,(%eax)
 f34:	02 00                	add    (%eax),%al
 f36:	74 08                	je     f40 <__executable_start-0x8047194>
 f38:	56                   	push   %esi
 f39:	01 00                	add    %eax,(%eax)
 f3b:	00 9d 01 00 00 02    	add    %bl,0x2000001(%ebp)
 f41:	00 75 08             	add    %dh,0x8(%ebp)
	...
 f50:	01 00                	add    %eax,(%eax)
 f52:	00 00                	add    %al,(%eax)
 f54:	02 00                	add    (%eax),%al
 f56:	74 04                	je     f5c <__executable_start-0x8047178>
 f58:	01 00                	add    %eax,(%eax)
 f5a:	00 00                	add    %al,(%eax)
 f5c:	03 00                	add    (%eax),%eax
 f5e:	00 00                	add    %al,(%eax)
 f60:	02 00                	add    (%eax),%al
 f62:	74 08                	je     f6c <__executable_start-0x8047168>
 f64:	03 00                	add    (%eax),%eax
 f66:	00 00                	add    %al,(%eax)
 f68:	77 00                	ja     f6a <__executable_start-0x804716a>
 f6a:	00 00                	add    %al,(%eax)
 f6c:	02 00                	add    (%eax),%al
 f6e:	75 08                	jne    f78 <__executable_start-0x804715c>
	...
